// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv_layer1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv_layer1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv_layer1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> conv_layer1::ap_ST_fsm_state1 = "1";
const sc_lv<23> conv_layer1::ap_ST_fsm_state2 = "10";
const sc_lv<23> conv_layer1::ap_ST_fsm_state3 = "100";
const sc_lv<23> conv_layer1::ap_ST_fsm_state4 = "1000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state5 = "10000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state6 = "100000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> conv_layer1::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> conv_layer1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> conv_layer1::ap_const_lv32_1 = "1";
const sc_lv<1> conv_layer1::ap_const_lv1_0 = "0";
const sc_lv<32> conv_layer1::ap_const_lv32_2 = "10";
const sc_lv<32> conv_layer1::ap_const_lv32_3 = "11";
const sc_lv<32> conv_layer1::ap_const_lv32_4 = "100";
const sc_lv<32> conv_layer1::ap_const_lv32_5 = "101";
const sc_lv<1> conv_layer1::ap_const_lv1_1 = "1";
const sc_lv<32> conv_layer1::ap_const_lv32_6 = "110";
const sc_lv<32> conv_layer1::ap_const_lv32_7 = "111";
const sc_lv<32> conv_layer1::ap_const_lv32_B = "1011";
const sc_lv<32> conv_layer1::ap_const_lv32_10 = "10000";
const sc_lv<32> conv_layer1::ap_const_lv32_14 = "10100";
const sc_lv<32> conv_layer1::ap_const_lv32_15 = "10101";
const sc_lv<4> conv_layer1::ap_const_lv4_0 = "0000";
const sc_lv<5> conv_layer1::ap_const_lv5_0 = "00000";
const sc_lv<10> conv_layer1::ap_const_lv10_0 = "0000000000";
const sc_lv<32> conv_layer1::ap_const_lv32_16 = "10110";
const sc_lv<3> conv_layer1::ap_const_lv3_0 = "000";
const sc_lv<32> conv_layer1::ap_const_lv32_C = "1100";
const sc_lv<32> conv_layer1::ap_const_lv32_8 = "1000";
const sc_lv<4> conv_layer1::ap_const_lv4_8 = "1000";
const sc_lv<4> conv_layer1::ap_const_lv4_1 = "1";
const sc_lv<10> conv_layer1::ap_const_lv10_1D = "11101";
const sc_lv<5> conv_layer1::ap_const_lv5_1D = "11101";
const sc_lv<5> conv_layer1::ap_const_lv5_1 = "1";
const sc_lv<3> conv_layer1::ap_const_lv3_4 = "100";
const sc_lv<3> conv_layer1::ap_const_lv3_1 = "1";
const sc_lv<2> conv_layer1::ap_const_lv2_0 = "00";
const sc_lv<32> conv_layer1::ap_const_lv32_17 = "10111";
const sc_lv<32> conv_layer1::ap_const_lv32_1E = "11110";
const sc_lv<8> conv_layer1::ap_const_lv8_FF = "11111111";
const sc_lv<23> conv_layer1::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> conv_layer1::ap_const_lv5_2 = "10";
const bool conv_layer1::ap_const_boolean_1 = true;

conv_layer1::conv_layer1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    conv_layer1_bias_U = new conv_layer1_conv_bkb("conv_layer1_bias_U");
    conv_layer1_bias_U->clk(ap_clk);
    conv_layer1_bias_U->reset(ap_rst);
    conv_layer1_bias_U->address0(conv_layer1_bias_address0);
    conv_layer1_bias_U->ce0(conv_layer1_bias_ce0);
    conv_layer1_bias_U->q0(conv_layer1_bias_q0);
    image_0_U = new conv_layer1_image_0("image_0_U");
    image_0_U->clk(ap_clk);
    image_0_U->reset(ap_rst);
    image_0_U->address0(image_0_address0);
    image_0_U->ce0(image_0_ce0);
    image_0_U->q0(image_0_q0);
    conv_layer1_weights_s_U = new conv_layer1_conv_cud("conv_layer1_weights_s_U");
    conv_layer1_weights_s_U->clk(ap_clk);
    conv_layer1_weights_s_U->reset(ap_rst);
    conv_layer1_weights_s_U->address0(conv_layer1_weights_s_address0);
    conv_layer1_weights_s_U->ce0(conv_layer1_weights_s_ce0);
    conv_layer1_weights_s_U->q0(conv_layer1_weights_s_q0);
    nnet_fadd_32ns_32dEe_U1 = new nnet_fadd_32ns_32dEe<1,5,32,32,32>("nnet_fadd_32ns_32dEe_U1");
    nnet_fadd_32ns_32dEe_U1->clk(ap_clk);
    nnet_fadd_32ns_32dEe_U1->reset(ap_rst);
    nnet_fadd_32ns_32dEe_U1->din0(grp_fu_204_p0);
    nnet_fadd_32ns_32dEe_U1->din1(grp_fu_204_p1);
    nnet_fadd_32ns_32dEe_U1->ce(ap_var_for_const0);
    nnet_fadd_32ns_32dEe_U1->dout(grp_fu_204_p2);
    nnet_fmul_32ns_32eOg_U2 = new nnet_fmul_32ns_32eOg<1,4,32,32,32>("nnet_fmul_32ns_32eOg_U2");
    nnet_fmul_32ns_32eOg_U2->clk(ap_clk);
    nnet_fmul_32ns_32eOg_U2->reset(ap_rst);
    nnet_fmul_32ns_32eOg_U2->din0(image_0_load_reg_538);
    nnet_fmul_32ns_32eOg_U2->din1(conv_layer1_weights_1_reg_543);
    nnet_fmul_32ns_32eOg_U2->ce(ap_var_for_const0);
    nnet_fmul_32ns_32eOg_U2->dout(grp_fu_210_p2);
    nnet_fcmp_32ns_32fYi_U3 = new nnet_fcmp_32ns_32fYi<1,1,32,32,1>("nnet_fcmp_32ns_32fYi_U3");
    nnet_fcmp_32ns_32fYi_U3->din0(a_assign_reg_558);
    nnet_fcmp_32ns_32fYi_U3->din1(ap_var_for_const1);
    nnet_fcmp_32ns_32fYi_U3->opcode(ap_var_for_const2);
    nnet_fcmp_32ns_32fYi_U3->dout(tmp_49_fu_214_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_assign_7_fu_437_p3);
    sensitive << ( a_assign_reg_558 );
    sensitive << ( tmp_50_fu_431_p2 );

    SC_METHOD(thread_a_assign_to_int_fu_396_p1);
    sensitive << ( a_assign_reg_558 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_219_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_219_p2 );

    SC_METHOD(thread_col_offset_2_fu_345_p2);
    sensitive << ( col_offset_reg_193 );

    SC_METHOD(thread_col_offset_cast2_fu_335_p1);
    sensitive << ( col_offset_reg_193 );

    SC_METHOD(thread_conv_layer1_bias_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_231_p1 );

    SC_METHOD(thread_conv_layer1_bias_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_conv_layer1_weights_s_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_109_cast_fu_391_p1 );

    SC_METHOD(thread_conv_layer1_weights_s_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_exitcond1_fu_339_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( col_offset_reg_193 );

    SC_METHOD(thread_exitcond2_fu_278_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( row_offset_reg_170 );

    SC_METHOD(thread_exitcond3_fu_262_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_reg_146 );

    SC_METHOD(thread_exitcond4_fu_250_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_reg_122 );

    SC_METHOD(thread_exitcond5_fu_219_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( filter_reg_110 );

    SC_METHOD(thread_filter_2_fu_225_p2);
    sensitive << ( filter_reg_110 );

    SC_METHOD(thread_grp_fu_204_p0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sum_reg_158 );
    sensitive << ( sum_1_reg_181 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_204_p1);
    sensitive << ( conv_layer1_bias_loa_reg_471 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_35_reg_548 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_i_6_fu_256_p2);
    sensitive << ( i_reg_122 );

    SC_METHOD(thread_image_0_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_71_fu_364_p1 );

    SC_METHOD(thread_image_0_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_j_6_fu_268_p2);
    sensitive << ( j_reg_146 );

    SC_METHOD(thread_next_mul_fu_244_p2);
    sensitive << ( phi_mul_reg_134 );

    SC_METHOD(thread_notlhs_fu_413_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_46_fu_399_p4 );

    SC_METHOD(thread_notrhs_fu_419_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_53_fu_409_p1 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_101_cast_fu_444_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( a_assign_7_reg_565 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_row_offset_2_fu_284_p2);
    sensitive << ( row_offset_reg_170 );

    SC_METHOD(thread_row_offset_cast4_fu_274_p1);
    sensitive << ( row_offset_reg_170 );

    SC_METHOD(thread_tmp_100_cast_fu_326_p1);
    sensitive << ( tmp_54_fu_318_p3 );

    SC_METHOD(thread_tmp_101_cast_fu_444_p1);
    sensitive << ( tmp_68_reg_515 );

    SC_METHOD(thread_tmp_103_cast_fu_304_p1);
    sensitive << ( tmp_69_fu_296_p3 );

    SC_METHOD(thread_tmp_108_cast_fu_378_p3);
    sensitive << ( tmp_72_fu_373_p2 );

    SC_METHOD(thread_tmp_109_cast_fu_391_p1);
    sensitive << ( tmp_73_fu_386_p2 );

    SC_METHOD(thread_tmp_28_cast_fu_308_p1);
    sensitive << ( j_reg_146 );

    SC_METHOD(thread_tmp_29_fu_290_p2);
    sensitive << ( i_reg_122 );
    sensitive << ( row_offset_cast4_fu_274_p1 );

    SC_METHOD(thread_tmp_32_fu_351_p2);
    sensitive << ( j_reg_146 );
    sensitive << ( col_offset_cast2_fu_335_p1 );

    SC_METHOD(thread_tmp_34_cast_fu_369_p1);
    sensitive << ( col_offset_reg_193 );

    SC_METHOD(thread_tmp_46_fu_399_p4);
    sensitive << ( a_assign_to_int_fu_396_p1 );

    SC_METHOD(thread_tmp_48_fu_425_p2);
    sensitive << ( notrhs_fu_419_p2 );
    sensitive << ( notlhs_fu_413_p2 );

    SC_METHOD(thread_tmp_50_fu_431_p2);
    sensitive << ( tmp_48_fu_425_p2 );
    sensitive << ( tmp_49_fu_214_p2 );

    SC_METHOD(thread_tmp_53_fu_409_p1);
    sensitive << ( a_assign_to_int_fu_396_p1 );

    SC_METHOD(thread_tmp_54_fu_318_p3);
    sensitive << ( tmp_s_fu_312_p2 );

    SC_METHOD(thread_tmp_68_fu_330_p2);
    sensitive << ( tmp_cast_reg_466 );
    sensitive << ( tmp_100_cast_fu_326_p1 );

    SC_METHOD(thread_tmp_69_fu_296_p3);
    sensitive << ( row_offset_reg_170 );

    SC_METHOD(thread_tmp_70_fu_357_p3);
    sensitive << ( tmp_29_reg_505 );
    sensitive << ( tmp_32_fu_351_p2 );

    SC_METHOD(thread_tmp_71_fu_364_p1);
    sensitive << ( tmp_70_fu_357_p3 );

    SC_METHOD(thread_tmp_72_fu_373_p2);
    sensitive << ( tmp_103_cast_reg_510 );
    sensitive << ( tmp_34_cast_fu_369_p1 );

    SC_METHOD(thread_tmp_73_fu_386_p2);
    sensitive << ( tmp_cast1_reg_461 );
    sensitive << ( tmp_108_cast_fu_378_p3 );

    SC_METHOD(thread_tmp_cast1_fu_236_p1);
    sensitive << ( filter_reg_110 );

    SC_METHOD(thread_tmp_cast_fu_240_p1);
    sensitive << ( filter_reg_110 );

    SC_METHOD(thread_tmp_fu_231_p1);
    sensitive << ( filter_reg_110 );

    SC_METHOD(thread_tmp_s_fu_312_p2);
    sensitive << ( phi_mul_reg_134 );
    sensitive << ( tmp_28_cast_fu_308_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_219_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_278_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond1_fu_339_p2 );
    sensitive << ( exitcond4_fu_250_p2 );
    sensitive << ( exitcond3_fu_262_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "00000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv_layer1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, conv_layer1_bias_address0, "conv_layer1_bias_address0");
    sc_trace(mVcdFile, conv_layer1_bias_ce0, "conv_layer1_bias_ce0");
    sc_trace(mVcdFile, conv_layer1_bias_q0, "conv_layer1_bias_q0");
    sc_trace(mVcdFile, image_0_address0, "image_0_address0");
    sc_trace(mVcdFile, image_0_ce0, "image_0_ce0");
    sc_trace(mVcdFile, image_0_q0, "image_0_q0");
    sc_trace(mVcdFile, conv_layer1_weights_s_address0, "conv_layer1_weights_s_address0");
    sc_trace(mVcdFile, conv_layer1_weights_s_ce0, "conv_layer1_weights_s_ce0");
    sc_trace(mVcdFile, conv_layer1_weights_s_q0, "conv_layer1_weights_s_q0");
    sc_trace(mVcdFile, filter_2_fu_225_p2, "filter_2_fu_225_p2");
    sc_trace(mVcdFile, filter_2_reg_451, "filter_2_reg_451");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond5_fu_219_p2, "exitcond5_fu_219_p2");
    sc_trace(mVcdFile, tmp_cast1_fu_236_p1, "tmp_cast1_fu_236_p1");
    sc_trace(mVcdFile, tmp_cast1_reg_461, "tmp_cast1_reg_461");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_cast_fu_240_p1, "tmp_cast_fu_240_p1");
    sc_trace(mVcdFile, tmp_cast_reg_466, "tmp_cast_reg_466");
    sc_trace(mVcdFile, conv_layer1_bias_loa_reg_471, "conv_layer1_bias_loa_reg_471");
    sc_trace(mVcdFile, next_mul_fu_244_p2, "next_mul_fu_244_p2");
    sc_trace(mVcdFile, next_mul_reg_476, "next_mul_reg_476");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_6_fu_256_p2, "i_6_fu_256_p2");
    sc_trace(mVcdFile, i_6_reg_484, "i_6_reg_484");
    sc_trace(mVcdFile, j_6_fu_268_p2, "j_6_fu_268_p2");
    sc_trace(mVcdFile, j_6_reg_492, "j_6_reg_492");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, row_offset_2_fu_284_p2, "row_offset_2_fu_284_p2");
    sc_trace(mVcdFile, row_offset_2_reg_500, "row_offset_2_reg_500");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_29_fu_290_p2, "tmp_29_fu_290_p2");
    sc_trace(mVcdFile, tmp_29_reg_505, "tmp_29_reg_505");
    sc_trace(mVcdFile, exitcond2_fu_278_p2, "exitcond2_fu_278_p2");
    sc_trace(mVcdFile, tmp_103_cast_fu_304_p1, "tmp_103_cast_fu_304_p1");
    sc_trace(mVcdFile, tmp_103_cast_reg_510, "tmp_103_cast_reg_510");
    sc_trace(mVcdFile, tmp_68_fu_330_p2, "tmp_68_fu_330_p2");
    sc_trace(mVcdFile, tmp_68_reg_515, "tmp_68_reg_515");
    sc_trace(mVcdFile, col_offset_2_fu_345_p2, "col_offset_2_fu_345_p2");
    sc_trace(mVcdFile, col_offset_2_reg_523, "col_offset_2_reg_523");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, exitcond1_fu_339_p2, "exitcond1_fu_339_p2");
    sc_trace(mVcdFile, image_0_load_reg_538, "image_0_load_reg_538");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, conv_layer1_weights_1_reg_543, "conv_layer1_weights_1_reg_543");
    sc_trace(mVcdFile, grp_fu_210_p2, "grp_fu_210_p2");
    sc_trace(mVcdFile, tmp_35_reg_548, "tmp_35_reg_548");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_fu_204_p2, "grp_fu_204_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, a_assign_reg_558, "a_assign_reg_558");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, a_assign_7_fu_437_p3, "a_assign_7_fu_437_p3");
    sc_trace(mVcdFile, a_assign_7_reg_565, "a_assign_7_reg_565");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, filter_reg_110, "filter_reg_110");
    sc_trace(mVcdFile, exitcond4_fu_250_p2, "exitcond4_fu_250_p2");
    sc_trace(mVcdFile, i_reg_122, "i_reg_122");
    sc_trace(mVcdFile, exitcond3_fu_262_p2, "exitcond3_fu_262_p2");
    sc_trace(mVcdFile, phi_mul_reg_134, "phi_mul_reg_134");
    sc_trace(mVcdFile, j_reg_146, "j_reg_146");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, sum_reg_158, "sum_reg_158");
    sc_trace(mVcdFile, row_offset_reg_170, "row_offset_reg_170");
    sc_trace(mVcdFile, sum_1_reg_181, "sum_1_reg_181");
    sc_trace(mVcdFile, col_offset_reg_193, "col_offset_reg_193");
    sc_trace(mVcdFile, tmp_fu_231_p1, "tmp_fu_231_p1");
    sc_trace(mVcdFile, tmp_71_fu_364_p1, "tmp_71_fu_364_p1");
    sc_trace(mVcdFile, tmp_109_cast_fu_391_p1, "tmp_109_cast_fu_391_p1");
    sc_trace(mVcdFile, tmp_101_cast_fu_444_p1, "tmp_101_cast_fu_444_p1");
    sc_trace(mVcdFile, grp_fu_204_p0, "grp_fu_204_p0");
    sc_trace(mVcdFile, grp_fu_204_p1, "grp_fu_204_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, row_offset_cast4_fu_274_p1, "row_offset_cast4_fu_274_p1");
    sc_trace(mVcdFile, tmp_69_fu_296_p3, "tmp_69_fu_296_p3");
    sc_trace(mVcdFile, tmp_28_cast_fu_308_p1, "tmp_28_cast_fu_308_p1");
    sc_trace(mVcdFile, tmp_s_fu_312_p2, "tmp_s_fu_312_p2");
    sc_trace(mVcdFile, tmp_54_fu_318_p3, "tmp_54_fu_318_p3");
    sc_trace(mVcdFile, tmp_100_cast_fu_326_p1, "tmp_100_cast_fu_326_p1");
    sc_trace(mVcdFile, col_offset_cast2_fu_335_p1, "col_offset_cast2_fu_335_p1");
    sc_trace(mVcdFile, tmp_32_fu_351_p2, "tmp_32_fu_351_p2");
    sc_trace(mVcdFile, tmp_70_fu_357_p3, "tmp_70_fu_357_p3");
    sc_trace(mVcdFile, tmp_34_cast_fu_369_p1, "tmp_34_cast_fu_369_p1");
    sc_trace(mVcdFile, tmp_72_fu_373_p2, "tmp_72_fu_373_p2");
    sc_trace(mVcdFile, tmp_108_cast_fu_378_p3, "tmp_108_cast_fu_378_p3");
    sc_trace(mVcdFile, tmp_73_fu_386_p2, "tmp_73_fu_386_p2");
    sc_trace(mVcdFile, a_assign_to_int_fu_396_p1, "a_assign_to_int_fu_396_p1");
    sc_trace(mVcdFile, tmp_46_fu_399_p4, "tmp_46_fu_399_p4");
    sc_trace(mVcdFile, tmp_53_fu_409_p1, "tmp_53_fu_409_p1");
    sc_trace(mVcdFile, notrhs_fu_419_p2, "notrhs_fu_419_p2");
    sc_trace(mVcdFile, notlhs_fu_413_p2, "notlhs_fu_413_p2");
    sc_trace(mVcdFile, tmp_48_fu_425_p2, "tmp_48_fu_425_p2");
    sc_trace(mVcdFile, tmp_49_fu_214_p2, "tmp_49_fu_214_p2");
    sc_trace(mVcdFile, tmp_50_fu_431_p2, "tmp_50_fu_431_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

conv_layer1::~conv_layer1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete conv_layer1_bias_U;
    delete image_0_U;
    delete conv_layer1_weights_s_U;
    delete nnet_fadd_32ns_32dEe_U1;
    delete nnet_fmul_32ns_32eOg_U2;
    delete nnet_fcmp_32ns_32fYi_U3;
}

void conv_layer1::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void conv_layer1::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void conv_layer1::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void conv_layer1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_278_p2.read()))) {
        col_offset_reg_193 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        col_offset_reg_193 = col_offset_2_reg_523.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_250_p2.read()))) {
        filter_reg_110 = filter_2_reg_451.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        filter_reg_110 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_262_p2.read()))) {
        i_reg_122 = i_6_reg_484.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_122 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_250_p2.read()))) {
        j_reg_146 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        j_reg_146 = j_6_reg_492.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_262_p2.read()))) {
        phi_mul_reg_134 = next_mul_reg_476.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        phi_mul_reg_134 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_262_p2.read()))) {
        row_offset_reg_170 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_339_p2.read()))) {
        row_offset_reg_170 = row_offset_2_reg_500.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_278_p2.read()))) {
        sum_1_reg_181 = sum_reg_158.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        sum_1_reg_181 = grp_fu_204_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_262_p2.read()))) {
        sum_reg_158 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_339_p2.read()))) {
        sum_reg_158 = sum_1_reg_181.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        a_assign_7_reg_565 = a_assign_7_fu_437_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        a_assign_reg_558 = grp_fu_204_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        col_offset_2_reg_523 = col_offset_2_fu_345_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        conv_layer1_bias_loa_reg_471 = conv_layer1_bias_q0.read();
        tmp_cast1_reg_461 = tmp_cast1_fu_236_p1.read();
        tmp_cast_reg_466 = tmp_cast_fu_240_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        conv_layer1_weights_1_reg_543 = conv_layer1_weights_s_q0.read();
        image_0_load_reg_538 = image_0_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        filter_2_reg_451 = filter_2_fu_225_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_6_reg_484 = i_6_fu_256_p2.read();
        next_mul_reg_476 = next_mul_fu_244_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_6_reg_492 = j_6_fu_268_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        row_offset_2_reg_500 = row_offset_2_fu_284_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_278_p2.read()))) {
        tmp_103_cast_reg_510 = tmp_103_cast_fu_304_p1.read();
        tmp_29_reg_505 = tmp_29_fu_290_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_35_reg_548 = grp_fu_210_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond2_fu_278_p2.read(), ap_const_lv1_1))) {
        tmp_68_reg_515 = tmp_68_fu_330_p2.read();
    }
}

void conv_layer1::thread_a_assign_7_fu_437_p3() {
    a_assign_7_fu_437_p3 = (!tmp_50_fu_431_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_50_fu_431_p2.read()[0].to_bool())? a_assign_reg_558.read(): ap_const_lv32_0);
}

void conv_layer1::thread_a_assign_to_int_fu_396_p1() {
    a_assign_to_int_fu_396_p1 = a_assign_reg_558.read();
}

void conv_layer1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv_layer1::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void conv_layer1::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void conv_layer1::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void conv_layer1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void conv_layer1::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void conv_layer1::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void conv_layer1::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void conv_layer1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void conv_layer1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void conv_layer1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void conv_layer1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void conv_layer1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void conv_layer1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void conv_layer1::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void conv_layer1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond5_fu_219_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv_layer1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv_layer1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_219_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv_layer1::thread_col_offset_2_fu_345_p2() {
    col_offset_2_fu_345_p2 = (!col_offset_reg_193.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(col_offset_reg_193.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void conv_layer1::thread_col_offset_cast2_fu_335_p1() {
    col_offset_cast2_fu_335_p1 = esl_zext<5,3>(col_offset_reg_193.read());
}

void conv_layer1::thread_conv_layer1_bias_address0() {
    conv_layer1_bias_address0 =  (sc_lv<3>) (tmp_fu_231_p1.read());
}

void conv_layer1::thread_conv_layer1_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        conv_layer1_bias_ce0 = ap_const_logic_1;
    } else {
        conv_layer1_bias_ce0 = ap_const_logic_0;
    }
}

void conv_layer1::thread_conv_layer1_weights_s_address0() {
    conv_layer1_weights_s_address0 =  (sc_lv<7>) (tmp_109_cast_fu_391_p1.read());
}

void conv_layer1::thread_conv_layer1_weights_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        conv_layer1_weights_s_ce0 = ap_const_logic_1;
    } else {
        conv_layer1_weights_s_ce0 = ap_const_logic_0;
    }
}

void conv_layer1::thread_exitcond1_fu_339_p2() {
    exitcond1_fu_339_p2 = (!col_offset_reg_193.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(col_offset_reg_193.read() == ap_const_lv3_4);
}

void conv_layer1::thread_exitcond2_fu_278_p2() {
    exitcond2_fu_278_p2 = (!row_offset_reg_170.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(row_offset_reg_170.read() == ap_const_lv3_4);
}

void conv_layer1::thread_exitcond3_fu_262_p2() {
    exitcond3_fu_262_p2 = (!j_reg_146.read().is_01() || !ap_const_lv5_1D.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_146.read() == ap_const_lv5_1D);
}

void conv_layer1::thread_exitcond4_fu_250_p2() {
    exitcond4_fu_250_p2 = (!i_reg_122.read().is_01() || !ap_const_lv5_1D.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_122.read() == ap_const_lv5_1D);
}

void conv_layer1::thread_exitcond5_fu_219_p2() {
    exitcond5_fu_219_p2 = (!filter_reg_110.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(filter_reg_110.read() == ap_const_lv4_8);
}

void conv_layer1::thread_filter_2_fu_225_p2() {
    filter_2_fu_225_p2 = (!filter_reg_110.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(filter_reg_110.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void conv_layer1::thread_grp_fu_204_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_204_p0 = sum_1_reg_181.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_204_p0 = sum_reg_158.read();
    } else {
        grp_fu_204_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void conv_layer1::thread_grp_fu_204_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_204_p1 = tmp_35_reg_548.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_204_p1 = conv_layer1_bias_loa_reg_471.read();
    } else {
        grp_fu_204_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void conv_layer1::thread_i_6_fu_256_p2() {
    i_6_fu_256_p2 = (!i_reg_122.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_122.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void conv_layer1::thread_image_0_address0() {
    image_0_address0 =  (sc_lv<10>) (tmp_71_fu_364_p1.read());
}

void conv_layer1::thread_image_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        image_0_ce0 = ap_const_logic_1;
    } else {
        image_0_ce0 = ap_const_logic_0;
    }
}

void conv_layer1::thread_j_6_fu_268_p2() {
    j_6_fu_268_p2 = (!j_reg_146.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_reg_146.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void conv_layer1::thread_next_mul_fu_244_p2() {
    next_mul_fu_244_p2 = (!phi_mul_reg_134.read().is_01() || !ap_const_lv10_1D.is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul_reg_134.read()) + sc_biguint<10>(ap_const_lv10_1D));
}

void conv_layer1::thread_notlhs_fu_413_p2() {
    notlhs_fu_413_p2 = (!tmp_46_fu_399_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_46_fu_399_p4.read() != ap_const_lv8_FF);
}

void conv_layer1::thread_notrhs_fu_419_p2() {
    notrhs_fu_419_p2 = (!tmp_53_fu_409_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_53_fu_409_p1.read() == ap_const_lv23_0);
}

void conv_layer1::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<13>) (tmp_101_cast_fu_444_p1.read());
}

void conv_layer1::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void conv_layer1::thread_output_r_d0() {
    output_r_d0 = a_assign_7_reg_565.read();
}

void conv_layer1::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void conv_layer1::thread_row_offset_2_fu_284_p2() {
    row_offset_2_fu_284_p2 = (!row_offset_reg_170.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(row_offset_reg_170.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void conv_layer1::thread_row_offset_cast4_fu_274_p1() {
    row_offset_cast4_fu_274_p1 = esl_zext<5,3>(row_offset_reg_170.read());
}

void conv_layer1::thread_tmp_100_cast_fu_326_p1() {
    tmp_100_cast_fu_326_p1 = esl_zext<14,13>(tmp_54_fu_318_p3.read());
}

void conv_layer1::thread_tmp_101_cast_fu_444_p1() {
    tmp_101_cast_fu_444_p1 = esl_zext<64,14>(tmp_68_reg_515.read());
}

void conv_layer1::thread_tmp_103_cast_fu_304_p1() {
    tmp_103_cast_fu_304_p1 = esl_zext<6,5>(tmp_69_fu_296_p3.read());
}

void conv_layer1::thread_tmp_108_cast_fu_378_p3() {
    tmp_108_cast_fu_378_p3 = esl_concat<6,3>(tmp_72_fu_373_p2.read(), ap_const_lv3_0);
}

void conv_layer1::thread_tmp_109_cast_fu_391_p1() {
    tmp_109_cast_fu_391_p1 = esl_zext<64,9>(tmp_73_fu_386_p2.read());
}

void conv_layer1::thread_tmp_28_cast_fu_308_p1() {
    tmp_28_cast_fu_308_p1 = esl_zext<10,5>(j_reg_146.read());
}

void conv_layer1::thread_tmp_29_fu_290_p2() {
    tmp_29_fu_290_p2 = (!i_reg_122.read().is_01() || !row_offset_cast4_fu_274_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_122.read()) + sc_biguint<5>(row_offset_cast4_fu_274_p1.read()));
}

void conv_layer1::thread_tmp_32_fu_351_p2() {
    tmp_32_fu_351_p2 = (!col_offset_cast2_fu_335_p1.read().is_01() || !j_reg_146.read().is_01())? sc_lv<5>(): (sc_biguint<5>(col_offset_cast2_fu_335_p1.read()) + sc_biguint<5>(j_reg_146.read()));
}

void conv_layer1::thread_tmp_34_cast_fu_369_p1() {
    tmp_34_cast_fu_369_p1 = esl_zext<6,3>(col_offset_reg_193.read());
}

void conv_layer1::thread_tmp_46_fu_399_p4() {
    tmp_46_fu_399_p4 = a_assign_to_int_fu_396_p1.read().range(30, 23);
}

void conv_layer1::thread_tmp_48_fu_425_p2() {
    tmp_48_fu_425_p2 = (notrhs_fu_419_p2.read() | notlhs_fu_413_p2.read());
}

void conv_layer1::thread_tmp_50_fu_431_p2() {
    tmp_50_fu_431_p2 = (tmp_48_fu_425_p2.read() & tmp_49_fu_214_p2.read());
}

void conv_layer1::thread_tmp_53_fu_409_p1() {
    tmp_53_fu_409_p1 = a_assign_to_int_fu_396_p1.read().range(23-1, 0);
}

void conv_layer1::thread_tmp_54_fu_318_p3() {
    tmp_54_fu_318_p3 = esl_concat<10,3>(tmp_s_fu_312_p2.read(), ap_const_lv3_0);
}

void conv_layer1::thread_tmp_68_fu_330_p2() {
    tmp_68_fu_330_p2 = (!tmp_cast_reg_466.read().is_01() || !tmp_100_cast_fu_326_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_cast_reg_466.read()) + sc_biguint<14>(tmp_100_cast_fu_326_p1.read()));
}

void conv_layer1::thread_tmp_69_fu_296_p3() {
    tmp_69_fu_296_p3 = esl_concat<3,2>(row_offset_reg_170.read(), ap_const_lv2_0);
}

void conv_layer1::thread_tmp_70_fu_357_p3() {
    tmp_70_fu_357_p3 = esl_concat<5,5>(tmp_29_reg_505.read(), tmp_32_fu_351_p2.read());
}

void conv_layer1::thread_tmp_71_fu_364_p1() {
    tmp_71_fu_364_p1 = esl_zext<64,10>(tmp_70_fu_357_p3.read());
}

void conv_layer1::thread_tmp_72_fu_373_p2() {
    tmp_72_fu_373_p2 = (!tmp_103_cast_reg_510.read().is_01() || !tmp_34_cast_fu_369_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_103_cast_reg_510.read()) + sc_biguint<6>(tmp_34_cast_fu_369_p1.read()));
}

void conv_layer1::thread_tmp_73_fu_386_p2() {
    tmp_73_fu_386_p2 = (!tmp_108_cast_fu_378_p3.read().is_01() || !tmp_cast1_reg_461.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_108_cast_fu_378_p3.read()) + sc_biguint<9>(tmp_cast1_reg_461.read()));
}

void conv_layer1::thread_tmp_cast1_fu_236_p1() {
    tmp_cast1_fu_236_p1 = esl_zext<9,4>(filter_reg_110.read());
}

void conv_layer1::thread_tmp_cast_fu_240_p1() {
    tmp_cast_fu_240_p1 = esl_zext<14,4>(filter_reg_110.read());
}

void conv_layer1::thread_tmp_fu_231_p1() {
    tmp_fu_231_p1 = esl_zext<64,4>(filter_reg_110.read());
}

void conv_layer1::thread_tmp_s_fu_312_p2() {
    tmp_s_fu_312_p2 = (!tmp_28_cast_fu_308_p1.read().is_01() || !phi_mul_reg_134.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_28_cast_fu_308_p1.read()) + sc_biguint<10>(phi_mul_reg_134.read()));
}

void conv_layer1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond5_fu_219_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_250_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_262_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_278_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_339_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

