// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv_layer2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv_layer2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv_layer2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> conv_layer2::ap_ST_fsm_state1 = "1";
const sc_lv<12> conv_layer2::ap_ST_fsm_state2 = "10";
const sc_lv<12> conv_layer2::ap_ST_fsm_state3 = "100";
const sc_lv<12> conv_layer2::ap_ST_fsm_state4 = "1000";
const sc_lv<12> conv_layer2::ap_ST_fsm_state5 = "10000";
const sc_lv<12> conv_layer2::ap_ST_fsm_state6 = "100000";
const sc_lv<12> conv_layer2::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> conv_layer2::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> conv_layer2::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> conv_layer2::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> conv_layer2::ap_ST_fsm_state11 = "10000000000";
const sc_lv<12> conv_layer2::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> conv_layer2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> conv_layer2::ap_const_lv32_1 = "1";
const sc_lv<1> conv_layer2::ap_const_lv1_0 = "0";
const sc_lv<32> conv_layer2::ap_const_lv32_2 = "10";
const sc_lv<32> conv_layer2::ap_const_lv32_3 = "11";
const sc_lv<32> conv_layer2::ap_const_lv32_4 = "100";
const sc_lv<32> conv_layer2::ap_const_lv32_5 = "101";
const sc_lv<1> conv_layer2::ap_const_lv1_1 = "1";
const sc_lv<32> conv_layer2::ap_const_lv32_6 = "110";
const sc_lv<32> conv_layer2::ap_const_lv32_7 = "111";
const sc_lv<32> conv_layer2::ap_const_lv32_8 = "1000";
const sc_lv<32> conv_layer2::ap_const_lv32_9 = "1001";
const sc_lv<32> conv_layer2::ap_const_lv32_A = "1010";
const sc_lv<5> conv_layer2::ap_const_lv5_0 = "00000";
const sc_lv<4> conv_layer2::ap_const_lv4_0 = "0000";
const sc_lv<8> conv_layer2::ap_const_lv8_0 = "00000000";
const sc_lv<32> conv_layer2::ap_const_lv32_B = "1011";
const sc_lv<24> conv_layer2::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<2> conv_layer2::ap_const_lv2_0 = "00";
const sc_lv<5> conv_layer2::ap_const_lv5_10 = "10000";
const sc_lv<5> conv_layer2::ap_const_lv5_1 = "1";
const sc_lv<8> conv_layer2::ap_const_lv8_D = "1101";
const sc_lv<4> conv_layer2::ap_const_lv4_D = "1101";
const sc_lv<4> conv_layer2::ap_const_lv4_1 = "1";
const sc_lv<2> conv_layer2::ap_const_lv2_2 = "10";
const sc_lv<2> conv_layer2::ap_const_lv2_1 = "1";
const sc_lv<23> conv_layer2::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<3> conv_layer2::ap_const_lv3_0 = "000";
const sc_lv<4> conv_layer2::ap_const_lv4_8 = "1000";
const sc_lv<20> conv_layer2::ap_const_lv20_0 = "00000000000000000000";
const sc_lv<32> conv_layer2::ap_const_lv32_14 = "10100";
const sc_lv<32> conv_layer2::ap_const_lv32_2B = "101011";
const bool conv_layer2::ap_const_boolean_1 = true;

conv_layer2::conv_layer2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    conv_layer2_bias_V_U = new conv_layer2_conv_fYi("conv_layer2_bias_V_U");
    conv_layer2_bias_V_U->clk(ap_clk);
    conv_layer2_bias_V_U->reset(ap_rst);
    conv_layer2_bias_V_U->address0(conv_layer2_bias_V_address0);
    conv_layer2_bias_V_U->ce0(conv_layer2_bias_V_ce0);
    conv_layer2_bias_V_U->q0(conv_layer2_bias_V_q0);
    conv_layer2_weights_s_U = new conv_layer2_conv_g8j("conv_layer2_weights_s_U");
    conv_layer2_weights_s_U->clk(ap_clk);
    conv_layer2_weights_s_U->reset(ap_rst);
    conv_layer2_weights_s_U->address0(conv_layer2_weights_s_address0);
    conv_layer2_weights_s_U->ce0(conv_layer2_weights_s_ce0);
    conv_layer2_weights_s_U->q0(conv_layer2_weights_s_q0);
    nnet_mul_mul_24s_hbi_U9 = new nnet_mul_mul_24s_hbi<1,1,24,19,42>("nnet_mul_mul_24s_hbi_U9");
    nnet_mul_mul_24s_hbi_U9->din0(image_V_load_reg_693);
    nnet_mul_mul_24s_hbi_U9->din1(conv_layer2_weights_2_reg_698);
    nnet_mul_mul_24s_hbi_U9->dout(p_Val2_2_fu_569_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_V_i_fu_415_p3);
    sensitive << ( tmp_i_fu_409_p2 );
    sensitive << ( p_Val2_cast_fu_404_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond8_fu_241_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond8_fu_241_p2 );

    SC_METHOD(thread_channel_offset_1_fu_481_p2);
    sensitive << ( channel_offset_reg_230 );

    SC_METHOD(thread_col_offset_1_fu_433_p2);
    sensitive << ( col_offset_reg_207 );

    SC_METHOD(thread_col_offset_cast3_fu_423_p1);
    sensitive << ( col_offset_reg_207 );

    SC_METHOD(thread_conv_layer2_bias_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_253_p1 );

    SC_METHOD(thread_conv_layer2_bias_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_conv_layer2_weights_s_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_87_cast_fu_523_p1 );

    SC_METHOD(thread_conv_layer2_weights_s_ce0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_exitcond1_fu_292_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_reg_160 );

    SC_METHOD(thread_exitcond2_fu_308_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( row_offset_reg_184 );

    SC_METHOD(thread_exitcond3_fu_427_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( col_offset_reg_207 );

    SC_METHOD(thread_exitcond8_fu_241_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( filter_reg_124 );

    SC_METHOD(thread_exitcond9_fu_280_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_reg_136 );

    SC_METHOD(thread_exitcond_fu_475_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( channel_offset_reg_230 );

    SC_METHOD(thread_filter_1_fu_247_p2);
    sensitive << ( filter_reg_124 );

    SC_METHOD(thread_i_5_fu_286_p2);
    sensitive << ( i_reg_136 );

    SC_METHOD(thread_image_V_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_83_cast_fu_500_p1 );

    SC_METHOD(thread_image_V_ce0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_j_5_fu_298_p2);
    sensitive << ( j_reg_160 );

    SC_METHOD(thread_next_mul_fu_274_p2);
    sensitive << ( phi_mul_reg_148 );

    SC_METHOD(thread_output_V_address0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_71_cast_fu_561_p1 );

    SC_METHOD(thread_output_V_ce0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_output_V_d0);
    sensitive << ( a_V_i_reg_652 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_output_V_we0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_p_Val2_12_cast_fu_266_p1);
    sensitive << ( conv_layer2_bias_V_q0 );

    SC_METHOD(thread_p_Val2_3_fu_545_p2);
    sensitive << ( tmp_32_fu_534_p3 );
    sensitive << ( tmp_40_cast_fu_542_p1 );

    SC_METHOD(thread_p_Val2_cast_fu_404_p2);
    sensitive << ( tmp_2_reg_603 );
    sensitive << ( tmp_41_fu_395_p1 );

    SC_METHOD(thread_p_Val2_s_34_fu_399_p2);
    sensitive << ( p_Val2_12_cast_reg_598 );
    sensitive << ( p_Val2_s_reg_172 );

    SC_METHOD(thread_p_shl1_cast_fu_346_p1);
    sensitive << ( tmp_51_fu_338_p3 );

    SC_METHOD(thread_p_shl_cast_fu_334_p1);
    sensitive << ( tmp_50_fu_326_p3 );

    SC_METHOD(thread_row_offset_1_fu_314_p2);
    sensitive << ( row_offset_reg_184 );

    SC_METHOD(thread_row_offset_cast5_fu_304_p1);
    sensitive << ( row_offset_reg_184 );

    SC_METHOD(thread_tmp_26_cast_fu_368_p1);
    sensitive << ( j_reg_160 );

    SC_METHOD(thread_tmp_27_fu_320_p2);
    sensitive << ( i_reg_136 );
    sensitive << ( row_offset_cast5_fu_304_p1 );

    SC_METHOD(thread_tmp_28_fu_439_p2);
    sensitive << ( j_reg_160 );
    sensitive << ( col_offset_cast3_fu_423_p1 );

    SC_METHOD(thread_tmp_29_cast_fu_445_p1);
    sensitive << ( tmp_28_fu_439_p2 );

    SC_METHOD(thread_tmp_2_fu_270_p1);
    sensitive << ( conv_layer2_bias_V_q0 );

    SC_METHOD(thread_tmp_31_cast_fu_491_p1);
    sensitive << ( channel_offset_reg_230 );

    SC_METHOD(thread_tmp_31_fu_487_p1);
    sensitive << ( channel_offset_reg_230 );

    SC_METHOD(thread_tmp_32_fu_534_p3);
    sensitive << ( p_Val2_1_reg_218 );

    SC_METHOD(thread_tmp_40_cast_fu_542_p1);
    sensitive << ( p_Val2_2_reg_703 );

    SC_METHOD(thread_tmp_40_fu_378_p3);
    sensitive << ( tmp_s_fu_372_p2 );

    SC_METHOD(thread_tmp_41_fu_395_p1);
    sensitive << ( p_Val2_s_reg_172 );

    SC_METHOD(thread_tmp_42_fu_467_p3);
    sensitive << ( tmp_55_fu_462_p2 );

    SC_METHOD(thread_tmp_49_fu_390_p2);
    sensitive << ( tmp_cast_reg_593 );
    sensitive << ( tmp_70_cast_fu_386_p1 );

    SC_METHOD(thread_tmp_50_fu_326_p3);
    sensitive << ( tmp_27_fu_320_p2 );

    SC_METHOD(thread_tmp_51_fu_338_p3);
    sensitive << ( tmp_27_fu_320_p2 );

    SC_METHOD(thread_tmp_52_fu_350_p2);
    sensitive << ( p_shl_cast_fu_334_p1 );
    sensitive << ( p_shl1_cast_fu_346_p1 );

    SC_METHOD(thread_tmp_53_fu_356_p3);
    sensitive << ( row_offset_reg_184 );

    SC_METHOD(thread_tmp_54_fu_449_p2);
    sensitive << ( tmp_52_reg_637 );
    sensitive << ( tmp_29_cast_fu_445_p1 );

    SC_METHOD(thread_tmp_55_fu_462_p2);
    sensitive << ( tmp_76_cast_reg_642 );
    sensitive << ( col_offset_cast3_fu_423_p1 );

    SC_METHOD(thread_tmp_56_fu_495_p2);
    sensitive << ( tmp_79_cast_reg_665 );
    sensitive << ( tmp_31_cast_fu_491_p1 );

    SC_METHOD(thread_tmp_57_fu_505_p2);
    sensitive << ( tmp_42_reg_670 );
    sensitive << ( tmp_31_fu_487_p1 );

    SC_METHOD(thread_tmp_58_fu_518_p2);
    sensitive << ( tmp_cast2_reg_588 );
    sensitive << ( tmp_86_cast_fu_510_p3 );

    SC_METHOD(thread_tmp_70_cast_fu_386_p1);
    sensitive << ( tmp_40_fu_378_p3 );

    SC_METHOD(thread_tmp_71_cast_fu_561_p1);
    sensitive << ( tmp_49_reg_647 );

    SC_METHOD(thread_tmp_76_cast_fu_364_p1);
    sensitive << ( tmp_53_fu_356_p3 );

    SC_METHOD(thread_tmp_79_cast_fu_454_p3);
    sensitive << ( tmp_54_fu_449_p2 );

    SC_METHOD(thread_tmp_83_cast_fu_500_p1);
    sensitive << ( tmp_56_fu_495_p2 );

    SC_METHOD(thread_tmp_86_cast_fu_510_p3);
    sensitive << ( tmp_57_fu_505_p2 );

    SC_METHOD(thread_tmp_87_cast_fu_523_p1);
    sensitive << ( tmp_58_fu_518_p2 );

    SC_METHOD(thread_tmp_cast2_fu_258_p1);
    sensitive << ( filter_reg_124 );

    SC_METHOD(thread_tmp_cast_fu_262_p1);
    sensitive << ( filter_reg_124 );

    SC_METHOD(thread_tmp_fu_253_p1);
    sensitive << ( filter_reg_124 );

    SC_METHOD(thread_tmp_i_fu_409_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_308_p2 );
    sensitive << ( p_Val2_s_34_fu_399_p2 );

    SC_METHOD(thread_tmp_s_fu_372_p2);
    sensitive << ( phi_mul_reg_148 );
    sensitive << ( tmp_26_cast_fu_368_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond8_fu_241_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond2_fu_308_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond3_fu_427_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_fu_475_p2 );
    sensitive << ( exitcond9_fu_280_p2 );
    sensitive << ( exitcond1_fu_292_p2 );

    ap_CS_fsm = "000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv_layer2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, output_V_address0, "(port)output_V_address0");
    sc_trace(mVcdFile, output_V_ce0, "(port)output_V_ce0");
    sc_trace(mVcdFile, output_V_we0, "(port)output_V_we0");
    sc_trace(mVcdFile, output_V_d0, "(port)output_V_d0");
    sc_trace(mVcdFile, image_V_address0, "(port)image_V_address0");
    sc_trace(mVcdFile, image_V_ce0, "(port)image_V_ce0");
    sc_trace(mVcdFile, image_V_q0, "(port)image_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, conv_layer2_bias_V_address0, "conv_layer2_bias_V_address0");
    sc_trace(mVcdFile, conv_layer2_bias_V_ce0, "conv_layer2_bias_V_ce0");
    sc_trace(mVcdFile, conv_layer2_bias_V_q0, "conv_layer2_bias_V_q0");
    sc_trace(mVcdFile, conv_layer2_weights_s_address0, "conv_layer2_weights_s_address0");
    sc_trace(mVcdFile, conv_layer2_weights_s_ce0, "conv_layer2_weights_s_ce0");
    sc_trace(mVcdFile, conv_layer2_weights_s_q0, "conv_layer2_weights_s_q0");
    sc_trace(mVcdFile, filter_1_fu_247_p2, "filter_1_fu_247_p2");
    sc_trace(mVcdFile, filter_1_reg_578, "filter_1_reg_578");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond8_fu_241_p2, "exitcond8_fu_241_p2");
    sc_trace(mVcdFile, tmp_cast2_fu_258_p1, "tmp_cast2_fu_258_p1");
    sc_trace(mVcdFile, tmp_cast2_reg_588, "tmp_cast2_reg_588");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_cast_fu_262_p1, "tmp_cast_fu_262_p1");
    sc_trace(mVcdFile, tmp_cast_reg_593, "tmp_cast_reg_593");
    sc_trace(mVcdFile, p_Val2_12_cast_fu_266_p1, "p_Val2_12_cast_fu_266_p1");
    sc_trace(mVcdFile, p_Val2_12_cast_reg_598, "p_Val2_12_cast_reg_598");
    sc_trace(mVcdFile, tmp_2_fu_270_p1, "tmp_2_fu_270_p1");
    sc_trace(mVcdFile, tmp_2_reg_603, "tmp_2_reg_603");
    sc_trace(mVcdFile, next_mul_fu_274_p2, "next_mul_fu_274_p2");
    sc_trace(mVcdFile, next_mul_reg_608, "next_mul_reg_608");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_5_fu_286_p2, "i_5_fu_286_p2");
    sc_trace(mVcdFile, i_5_reg_616, "i_5_reg_616");
    sc_trace(mVcdFile, j_5_fu_298_p2, "j_5_fu_298_p2");
    sc_trace(mVcdFile, j_5_reg_624, "j_5_reg_624");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, row_offset_1_fu_314_p2, "row_offset_1_fu_314_p2");
    sc_trace(mVcdFile, row_offset_1_reg_632, "row_offset_1_reg_632");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_52_fu_350_p2, "tmp_52_fu_350_p2");
    sc_trace(mVcdFile, tmp_52_reg_637, "tmp_52_reg_637");
    sc_trace(mVcdFile, exitcond2_fu_308_p2, "exitcond2_fu_308_p2");
    sc_trace(mVcdFile, tmp_76_cast_fu_364_p1, "tmp_76_cast_fu_364_p1");
    sc_trace(mVcdFile, tmp_76_cast_reg_642, "tmp_76_cast_reg_642");
    sc_trace(mVcdFile, tmp_49_fu_390_p2, "tmp_49_fu_390_p2");
    sc_trace(mVcdFile, tmp_49_reg_647, "tmp_49_reg_647");
    sc_trace(mVcdFile, a_V_i_fu_415_p3, "a_V_i_fu_415_p3");
    sc_trace(mVcdFile, a_V_i_reg_652, "a_V_i_reg_652");
    sc_trace(mVcdFile, col_offset_1_fu_433_p2, "col_offset_1_fu_433_p2");
    sc_trace(mVcdFile, col_offset_1_reg_660, "col_offset_1_reg_660");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_79_cast_fu_454_p3, "tmp_79_cast_fu_454_p3");
    sc_trace(mVcdFile, tmp_79_cast_reg_665, "tmp_79_cast_reg_665");
    sc_trace(mVcdFile, exitcond3_fu_427_p2, "exitcond3_fu_427_p2");
    sc_trace(mVcdFile, tmp_42_fu_467_p3, "tmp_42_fu_467_p3");
    sc_trace(mVcdFile, tmp_42_reg_670, "tmp_42_reg_670");
    sc_trace(mVcdFile, channel_offset_1_fu_481_p2, "channel_offset_1_fu_481_p2");
    sc_trace(mVcdFile, channel_offset_1_reg_678, "channel_offset_1_reg_678");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, exitcond_fu_475_p2, "exitcond_fu_475_p2");
    sc_trace(mVcdFile, image_V_load_reg_693, "image_V_load_reg_693");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, conv_layer2_weights_2_reg_698, "conv_layer2_weights_2_reg_698");
    sc_trace(mVcdFile, p_Val2_2_fu_569_p2, "p_Val2_2_fu_569_p2");
    sc_trace(mVcdFile, p_Val2_2_reg_703, "p_Val2_2_reg_703");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, filter_reg_124, "filter_reg_124");
    sc_trace(mVcdFile, exitcond9_fu_280_p2, "exitcond9_fu_280_p2");
    sc_trace(mVcdFile, i_reg_136, "i_reg_136");
    sc_trace(mVcdFile, exitcond1_fu_292_p2, "exitcond1_fu_292_p2");
    sc_trace(mVcdFile, phi_mul_reg_148, "phi_mul_reg_148");
    sc_trace(mVcdFile, j_reg_160, "j_reg_160");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, p_Val2_s_reg_172, "p_Val2_s_reg_172");
    sc_trace(mVcdFile, row_offset_reg_184, "row_offset_reg_184");
    sc_trace(mVcdFile, sum_1_reg_195, "sum_1_reg_195");
    sc_trace(mVcdFile, col_offset_reg_207, "col_offset_reg_207");
    sc_trace(mVcdFile, p_Val2_1_reg_218, "p_Val2_1_reg_218");
    sc_trace(mVcdFile, channel_offset_reg_230, "channel_offset_reg_230");
    sc_trace(mVcdFile, tmp_fu_253_p1, "tmp_fu_253_p1");
    sc_trace(mVcdFile, tmp_83_cast_fu_500_p1, "tmp_83_cast_fu_500_p1");
    sc_trace(mVcdFile, tmp_87_cast_fu_523_p1, "tmp_87_cast_fu_523_p1");
    sc_trace(mVcdFile, tmp_71_cast_fu_561_p1, "tmp_71_cast_fu_561_p1");
    sc_trace(mVcdFile, row_offset_cast5_fu_304_p1, "row_offset_cast5_fu_304_p1");
    sc_trace(mVcdFile, tmp_27_fu_320_p2, "tmp_27_fu_320_p2");
    sc_trace(mVcdFile, tmp_50_fu_326_p3, "tmp_50_fu_326_p3");
    sc_trace(mVcdFile, tmp_51_fu_338_p3, "tmp_51_fu_338_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_334_p1, "p_shl_cast_fu_334_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_346_p1, "p_shl1_cast_fu_346_p1");
    sc_trace(mVcdFile, tmp_53_fu_356_p3, "tmp_53_fu_356_p3");
    sc_trace(mVcdFile, tmp_26_cast_fu_368_p1, "tmp_26_cast_fu_368_p1");
    sc_trace(mVcdFile, tmp_s_fu_372_p2, "tmp_s_fu_372_p2");
    sc_trace(mVcdFile, tmp_40_fu_378_p3, "tmp_40_fu_378_p3");
    sc_trace(mVcdFile, tmp_70_cast_fu_386_p1, "tmp_70_cast_fu_386_p1");
    sc_trace(mVcdFile, tmp_41_fu_395_p1, "tmp_41_fu_395_p1");
    sc_trace(mVcdFile, p_Val2_s_34_fu_399_p2, "p_Val2_s_34_fu_399_p2");
    sc_trace(mVcdFile, tmp_i_fu_409_p2, "tmp_i_fu_409_p2");
    sc_trace(mVcdFile, p_Val2_cast_fu_404_p2, "p_Val2_cast_fu_404_p2");
    sc_trace(mVcdFile, col_offset_cast3_fu_423_p1, "col_offset_cast3_fu_423_p1");
    sc_trace(mVcdFile, tmp_28_fu_439_p2, "tmp_28_fu_439_p2");
    sc_trace(mVcdFile, tmp_29_cast_fu_445_p1, "tmp_29_cast_fu_445_p1");
    sc_trace(mVcdFile, tmp_54_fu_449_p2, "tmp_54_fu_449_p2");
    sc_trace(mVcdFile, tmp_55_fu_462_p2, "tmp_55_fu_462_p2");
    sc_trace(mVcdFile, tmp_31_cast_fu_491_p1, "tmp_31_cast_fu_491_p1");
    sc_trace(mVcdFile, tmp_56_fu_495_p2, "tmp_56_fu_495_p2");
    sc_trace(mVcdFile, tmp_31_fu_487_p1, "tmp_31_fu_487_p1");
    sc_trace(mVcdFile, tmp_57_fu_505_p2, "tmp_57_fu_505_p2");
    sc_trace(mVcdFile, tmp_86_cast_fu_510_p3, "tmp_86_cast_fu_510_p3");
    sc_trace(mVcdFile, tmp_58_fu_518_p2, "tmp_58_fu_518_p2");
    sc_trace(mVcdFile, tmp_32_fu_534_p3, "tmp_32_fu_534_p3");
    sc_trace(mVcdFile, tmp_40_cast_fu_542_p1, "tmp_40_cast_fu_542_p1");
    sc_trace(mVcdFile, p_Val2_3_fu_545_p2, "p_Val2_3_fu_545_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

conv_layer2::~conv_layer2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete conv_layer2_bias_V_U;
    delete conv_layer2_weights_s_U;
    delete nnet_mul_mul_24s_hbi_U9;
}

void conv_layer2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        channel_offset_reg_230 = channel_offset_1_reg_678.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_427_p2.read()))) {
        channel_offset_reg_230 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_475_p2.read()))) {
        col_offset_reg_207 = col_offset_1_reg_660.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_308_p2.read()))) {
        col_offset_reg_207 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_280_p2.read()))) {
        filter_reg_124 = filter_1_reg_578.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        filter_reg_124 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_292_p2.read()))) {
        i_reg_136 = i_5_reg_616.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_136 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_280_p2.read()))) {
        j_reg_160 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        j_reg_160 = j_5_reg_624.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_Val2_1_reg_218 = p_Val2_3_fu_545_p2.read().range(43, 20);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_427_p2.read()))) {
        p_Val2_1_reg_218 = sum_1_reg_195.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_292_p2.read()))) {
        p_Val2_s_reg_172 = ap_const_lv24_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_427_p2.read()))) {
        p_Val2_s_reg_172 = sum_1_reg_195.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_292_p2.read()))) {
        phi_mul_reg_148 = next_mul_reg_608.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        phi_mul_reg_148 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_292_p2.read()))) {
        row_offset_reg_184 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_427_p2.read()))) {
        row_offset_reg_184 = row_offset_1_reg_632.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_475_p2.read()))) {
        sum_1_reg_195 = p_Val2_1_reg_218.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_308_p2.read()))) {
        sum_1_reg_195 = p_Val2_s_reg_172.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond2_fu_308_p2.read(), ap_const_lv1_1))) {
        a_V_i_reg_652 = a_V_i_fu_415_p3.read();
        tmp_49_reg_647 = tmp_49_fu_390_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        channel_offset_1_reg_678 = channel_offset_1_fu_481_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        col_offset_1_reg_660 = col_offset_1_fu_433_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        conv_layer2_weights_2_reg_698 = conv_layer2_weights_s_q0.read();
        image_V_load_reg_693 = image_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        filter_1_reg_578 = filter_1_fu_247_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_5_reg_616 = i_5_fu_286_p2.read();
        next_mul_reg_608 = next_mul_fu_274_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_5_reg_624 = j_5_fu_298_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_Val2_12_cast_reg_598 = p_Val2_12_cast_fu_266_p1.read();
        tmp_2_reg_603 = tmp_2_fu_270_p1.read();
        tmp_cast2_reg_588 = tmp_cast2_fu_258_p1.read();
        tmp_cast_reg_593 = tmp_cast_fu_262_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        p_Val2_2_reg_703 = p_Val2_2_fu_569_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        row_offset_1_reg_632 = row_offset_1_fu_314_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_427_p2.read()))) {
        tmp_42_reg_670 = tmp_42_fu_467_p3.read();
        tmp_79_cast_reg_665 = tmp_79_cast_fu_454_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_308_p2.read()))) {
        tmp_52_reg_637 = tmp_52_fu_350_p2.read();
        tmp_76_cast_reg_642 = tmp_76_cast_fu_364_p1.read();
    }
}

void conv_layer2::thread_a_V_i_fu_415_p3() {
    a_V_i_fu_415_p3 = (!tmp_i_fu_409_p2.read()[0].is_01())? sc_lv<23>(): ((tmp_i_fu_409_p2.read()[0].to_bool())? p_Val2_cast_fu_404_p2.read(): ap_const_lv23_0);
}

void conv_layer2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv_layer2::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void conv_layer2::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void conv_layer2::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void conv_layer2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void conv_layer2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void conv_layer2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void conv_layer2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void conv_layer2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void conv_layer2::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void conv_layer2::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void conv_layer2::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void conv_layer2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond8_fu_241_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv_layer2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv_layer2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_241_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv_layer2::thread_channel_offset_1_fu_481_p2() {
    channel_offset_1_fu_481_p2 = (!channel_offset_reg_230.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(channel_offset_reg_230.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void conv_layer2::thread_col_offset_1_fu_433_p2() {
    col_offset_1_fu_433_p2 = (!col_offset_reg_207.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(col_offset_reg_207.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv_layer2::thread_col_offset_cast3_fu_423_p1() {
    col_offset_cast3_fu_423_p1 = esl_zext<4,2>(col_offset_reg_207.read());
}

void conv_layer2::thread_conv_layer2_bias_V_address0() {
    conv_layer2_bias_V_address0 =  (sc_lv<4>) (tmp_fu_253_p1.read());
}

void conv_layer2::thread_conv_layer2_bias_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        conv_layer2_bias_V_ce0 = ap_const_logic_1;
    } else {
        conv_layer2_bias_V_ce0 = ap_const_logic_0;
    }
}

void conv_layer2::thread_conv_layer2_weights_s_address0() {
    conv_layer2_weights_s_address0 =  (sc_lv<9>) (tmp_87_cast_fu_523_p1.read());
}

void conv_layer2::thread_conv_layer2_weights_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        conv_layer2_weights_s_ce0 = ap_const_logic_1;
    } else {
        conv_layer2_weights_s_ce0 = ap_const_logic_0;
    }
}

void conv_layer2::thread_exitcond1_fu_292_p2() {
    exitcond1_fu_292_p2 = (!j_reg_160.read().is_01() || !ap_const_lv4_D.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_160.read() == ap_const_lv4_D);
}

void conv_layer2::thread_exitcond2_fu_308_p2() {
    exitcond2_fu_308_p2 = (!row_offset_reg_184.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(row_offset_reg_184.read() == ap_const_lv2_2);
}

void conv_layer2::thread_exitcond3_fu_427_p2() {
    exitcond3_fu_427_p2 = (!col_offset_reg_207.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(col_offset_reg_207.read() == ap_const_lv2_2);
}

void conv_layer2::thread_exitcond8_fu_241_p2() {
    exitcond8_fu_241_p2 = (!filter_reg_124.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(filter_reg_124.read() == ap_const_lv5_10);
}

void conv_layer2::thread_exitcond9_fu_280_p2() {
    exitcond9_fu_280_p2 = (!i_reg_136.read().is_01() || !ap_const_lv4_D.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_136.read() == ap_const_lv4_D);
}

void conv_layer2::thread_exitcond_fu_475_p2() {
    exitcond_fu_475_p2 = (!channel_offset_reg_230.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(channel_offset_reg_230.read() == ap_const_lv4_8);
}

void conv_layer2::thread_filter_1_fu_247_p2() {
    filter_1_fu_247_p2 = (!filter_reg_124.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(filter_reg_124.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void conv_layer2::thread_i_5_fu_286_p2() {
    i_5_fu_286_p2 = (!i_reg_136.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_136.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void conv_layer2::thread_image_V_address0() {
    image_V_address0 =  (sc_lv<11>) (tmp_83_cast_fu_500_p1.read());
}

void conv_layer2::thread_image_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        image_V_ce0 = ap_const_logic_1;
    } else {
        image_V_ce0 = ap_const_logic_0;
    }
}

void conv_layer2::thread_j_5_fu_298_p2() {
    j_5_fu_298_p2 = (!j_reg_160.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_160.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void conv_layer2::thread_next_mul_fu_274_p2() {
    next_mul_fu_274_p2 = (!phi_mul_reg_148.read().is_01() || !ap_const_lv8_D.is_01())? sc_lv<8>(): (sc_biguint<8>(phi_mul_reg_148.read()) + sc_biguint<8>(ap_const_lv8_D));
}

void conv_layer2::thread_output_V_address0() {
    output_V_address0 =  (sc_lv<12>) (tmp_71_cast_fu_561_p1.read());
}

void conv_layer2::thread_output_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        output_V_ce0 = ap_const_logic_1;
    } else {
        output_V_ce0 = ap_const_logic_0;
    }
}

void conv_layer2::thread_output_V_d0() {
    output_V_d0 = esl_zext<24,23>(a_V_i_reg_652.read());
}

void conv_layer2::thread_output_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        output_V_we0 = ap_const_logic_1;
    } else {
        output_V_we0 = ap_const_logic_0;
    }
}

void conv_layer2::thread_p_Val2_12_cast_fu_266_p1() {
    p_Val2_12_cast_fu_266_p1 = esl_sext<24,20>(conv_layer2_bias_V_q0.read());
}

void conv_layer2::thread_p_Val2_3_fu_545_p2() {
    p_Val2_3_fu_545_p2 = (!tmp_32_fu_534_p3.read().is_01() || !tmp_40_cast_fu_542_p1.read().is_01())? sc_lv<44>(): (sc_biguint<44>(tmp_32_fu_534_p3.read()) + sc_bigint<44>(tmp_40_cast_fu_542_p1.read()));
}

void conv_layer2::thread_p_Val2_cast_fu_404_p2() {
    p_Val2_cast_fu_404_p2 = (!tmp_2_reg_603.read().is_01() || !tmp_41_fu_395_p1.read().is_01())? sc_lv<23>(): (sc_bigint<23>(tmp_2_reg_603.read()) + sc_biguint<23>(tmp_41_fu_395_p1.read()));
}

void conv_layer2::thread_p_Val2_s_34_fu_399_p2() {
    p_Val2_s_34_fu_399_p2 = (!p_Val2_s_reg_172.read().is_01() || !p_Val2_12_cast_reg_598.read().is_01())? sc_lv<24>(): (sc_biguint<24>(p_Val2_s_reg_172.read()) + sc_bigint<24>(p_Val2_12_cast_reg_598.read()));
}

void conv_layer2::thread_p_shl1_cast_fu_346_p1() {
    p_shl1_cast_fu_346_p1 = esl_zext<9,5>(tmp_51_fu_338_p3.read());
}

void conv_layer2::thread_p_shl_cast_fu_334_p1() {
    p_shl_cast_fu_334_p1 = esl_zext<9,8>(tmp_50_fu_326_p3.read());
}

void conv_layer2::thread_row_offset_1_fu_314_p2() {
    row_offset_1_fu_314_p2 = (!row_offset_reg_184.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(row_offset_reg_184.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv_layer2::thread_row_offset_cast5_fu_304_p1() {
    row_offset_cast5_fu_304_p1 = esl_zext<4,2>(row_offset_reg_184.read());
}

void conv_layer2::thread_tmp_26_cast_fu_368_p1() {
    tmp_26_cast_fu_368_p1 = esl_zext<8,4>(j_reg_160.read());
}

void conv_layer2::thread_tmp_27_fu_320_p2() {
    tmp_27_fu_320_p2 = (!row_offset_cast5_fu_304_p1.read().is_01() || !i_reg_136.read().is_01())? sc_lv<4>(): (sc_biguint<4>(row_offset_cast5_fu_304_p1.read()) + sc_biguint<4>(i_reg_136.read()));
}

void conv_layer2::thread_tmp_28_fu_439_p2() {
    tmp_28_fu_439_p2 = (!j_reg_160.read().is_01() || !col_offset_cast3_fu_423_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_160.read()) + sc_biguint<4>(col_offset_cast3_fu_423_p1.read()));
}

void conv_layer2::thread_tmp_29_cast_fu_445_p1() {
    tmp_29_cast_fu_445_p1 = esl_zext<9,4>(tmp_28_fu_439_p2.read());
}

void conv_layer2::thread_tmp_2_fu_270_p1() {
    tmp_2_fu_270_p1 = esl_sext<23,20>(conv_layer2_bias_V_q0.read());
}

void conv_layer2::thread_tmp_31_cast_fu_491_p1() {
    tmp_31_cast_fu_491_p1 = esl_zext<12,4>(channel_offset_reg_230.read());
}

void conv_layer2::thread_tmp_31_fu_487_p1() {
    tmp_31_fu_487_p1 = esl_zext<7,4>(channel_offset_reg_230.read());
}

void conv_layer2::thread_tmp_32_fu_534_p3() {
    tmp_32_fu_534_p3 = esl_concat<24,20>(p_Val2_1_reg_218.read(), ap_const_lv20_0);
}

void conv_layer2::thread_tmp_40_cast_fu_542_p1() {
    tmp_40_cast_fu_542_p1 = esl_sext<44,42>(p_Val2_2_reg_703.read());
}

void conv_layer2::thread_tmp_40_fu_378_p3() {
    tmp_40_fu_378_p3 = esl_concat<8,4>(tmp_s_fu_372_p2.read(), ap_const_lv4_0);
}

void conv_layer2::thread_tmp_41_fu_395_p1() {
    tmp_41_fu_395_p1 = p_Val2_s_reg_172.read().range(23-1, 0);
}

void conv_layer2::thread_tmp_42_fu_467_p3() {
    tmp_42_fu_467_p3 = esl_concat<4,3>(tmp_55_fu_462_p2.read(), ap_const_lv3_0);
}

void conv_layer2::thread_tmp_49_fu_390_p2() {
    tmp_49_fu_390_p2 = (!tmp_cast_reg_593.read().is_01() || !tmp_70_cast_fu_386_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_cast_reg_593.read()) + sc_biguint<13>(tmp_70_cast_fu_386_p1.read()));
}

void conv_layer2::thread_tmp_50_fu_326_p3() {
    tmp_50_fu_326_p3 = esl_concat<4,4>(tmp_27_fu_320_p2.read(), ap_const_lv4_0);
}

void conv_layer2::thread_tmp_51_fu_338_p3() {
    tmp_51_fu_338_p3 = esl_concat<4,1>(tmp_27_fu_320_p2.read(), ap_const_lv1_0);
}

void conv_layer2::thread_tmp_52_fu_350_p2() {
    tmp_52_fu_350_p2 = (!p_shl_cast_fu_334_p1.read().is_01() || !p_shl1_cast_fu_346_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_shl_cast_fu_334_p1.read()) - sc_biguint<9>(p_shl1_cast_fu_346_p1.read()));
}

void conv_layer2::thread_tmp_53_fu_356_p3() {
    tmp_53_fu_356_p3 = esl_concat<2,1>(row_offset_reg_184.read(), ap_const_lv1_0);
}

void conv_layer2::thread_tmp_54_fu_449_p2() {
    tmp_54_fu_449_p2 = (!tmp_29_cast_fu_445_p1.read().is_01() || !tmp_52_reg_637.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_29_cast_fu_445_p1.read()) + sc_biguint<9>(tmp_52_reg_637.read()));
}

void conv_layer2::thread_tmp_55_fu_462_p2() {
    tmp_55_fu_462_p2 = (!col_offset_cast3_fu_423_p1.read().is_01() || !tmp_76_cast_reg_642.read().is_01())? sc_lv<4>(): (sc_biguint<4>(col_offset_cast3_fu_423_p1.read()) + sc_biguint<4>(tmp_76_cast_reg_642.read()));
}

void conv_layer2::thread_tmp_56_fu_495_p2() {
    tmp_56_fu_495_p2 = (!tmp_31_cast_fu_491_p1.read().is_01() || !tmp_79_cast_reg_665.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_31_cast_fu_491_p1.read()) + sc_biguint<12>(tmp_79_cast_reg_665.read()));
}

void conv_layer2::thread_tmp_57_fu_505_p2() {
    tmp_57_fu_505_p2 = (!tmp_31_fu_487_p1.read().is_01() || !tmp_42_reg_670.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_31_fu_487_p1.read()) + sc_biguint<7>(tmp_42_reg_670.read()));
}

void conv_layer2::thread_tmp_58_fu_518_p2() {
    tmp_58_fu_518_p2 = (!tmp_cast2_reg_588.read().is_01() || !tmp_86_cast_fu_510_p3.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_cast2_reg_588.read()) + sc_biguint<11>(tmp_86_cast_fu_510_p3.read()));
}

void conv_layer2::thread_tmp_70_cast_fu_386_p1() {
    tmp_70_cast_fu_386_p1 = esl_zext<13,12>(tmp_40_fu_378_p3.read());
}

void conv_layer2::thread_tmp_71_cast_fu_561_p1() {
    tmp_71_cast_fu_561_p1 = esl_zext<64,13>(tmp_49_reg_647.read());
}

void conv_layer2::thread_tmp_76_cast_fu_364_p1() {
    tmp_76_cast_fu_364_p1 = esl_zext<4,3>(tmp_53_fu_356_p3.read());
}

void conv_layer2::thread_tmp_79_cast_fu_454_p3() {
    tmp_79_cast_fu_454_p3 = esl_concat<9,3>(tmp_54_fu_449_p2.read(), ap_const_lv3_0);
}

void conv_layer2::thread_tmp_83_cast_fu_500_p1() {
    tmp_83_cast_fu_500_p1 = esl_zext<64,12>(tmp_56_fu_495_p2.read());
}

void conv_layer2::thread_tmp_86_cast_fu_510_p3() {
    tmp_86_cast_fu_510_p3 = esl_concat<7,4>(tmp_57_fu_505_p2.read(), ap_const_lv4_0);
}

void conv_layer2::thread_tmp_87_cast_fu_523_p1() {
    tmp_87_cast_fu_523_p1 = esl_zext<64,11>(tmp_58_fu_518_p2.read());
}

void conv_layer2::thread_tmp_cast2_fu_258_p1() {
    tmp_cast2_fu_258_p1 = esl_zext<11,5>(filter_reg_124.read());
}

void conv_layer2::thread_tmp_cast_fu_262_p1() {
    tmp_cast_fu_262_p1 = esl_zext<13,5>(filter_reg_124.read());
}

void conv_layer2::thread_tmp_fu_253_p1() {
    tmp_fu_253_p1 = esl_zext<64,5>(filter_reg_124.read());
}

void conv_layer2::thread_tmp_i_fu_409_p2() {
    tmp_i_fu_409_p2 = (!p_Val2_s_34_fu_399_p2.read().is_01() || !ap_const_lv24_0.is_01())? sc_lv<1>(): (sc_bigint<24>(p_Val2_s_34_fu_399_p2.read()) > sc_bigint<24>(ap_const_lv24_0));
}

void conv_layer2::thread_tmp_s_fu_372_p2() {
    tmp_s_fu_372_p2 = (!tmp_26_cast_fu_368_p1.read().is_01() || !phi_mul_reg_148.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_26_cast_fu_368_p1.read()) + sc_biguint<8>(phi_mul_reg_148.read()));
}

void conv_layer2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond8_fu_241_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_280_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_292_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_308_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_427_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_475_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXX";
            break;
    }
}

}

