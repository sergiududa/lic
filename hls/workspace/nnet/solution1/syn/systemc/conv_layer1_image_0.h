// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __conv_layer1_image_0_H__
#define __conv_layer1_image_0_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_layer1_image_0_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 1024;
  static const unsigned AddressWidth = 10;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_layer1_image_0_ram) {
        for (unsigned i = 0; i < 301 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[301] = "0b00111110110000101100001010111101";
        ram[302] = "0b00111110110000001100000011001111";
        ram[303] = "0b00111110100110101001101010100010";
        ram[304] = "0b00111110111011001110110011101010";
        ram[305] = "0b00111110011101001111010100001010";
        for (unsigned i = 306; i < 325 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[325] = "0b00111110101101001011010010101111";
        ram[326] = "0b00111111000010101000101010000011";
        for (unsigned i = 327; i < 333 ; i = i + 1) {
            ram[i] = "0b00111111011010111110101111110010";
        }
        ram[333] = "0b00111111011110111111110000000001";
        ram[334] = "0b00111111011110111111110000000001";
        ram[335] = "0b00111111011110001111100011111001";
        ram[336] = "0b00111111011111101111111011111000";
        ram[337] = "0b00111111011101011111010111110001";
        ram[338] = "0b00111111011010111110101111110010";
        ram[339] = "0b00111111001111101011111010111110";
        ram[340] = "0b00111101101010001010100010110001";
        for (unsigned i = 341; i < 356 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[356] = "0b00111111000011001000110010010011";
        ram[357] = "0b00111111011110111111110000000001";
        for (unsigned i = 358; i < 372 ; i = i + 1) {
            ram[i] = "0b00111111011111101111111011111000";
        }
        ram[372] = "0b00111111001111011011110110110110";
        ram[373] = "0b00111101101110001011100010101110";
        for (unsigned i = 374; i < 388 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[388] = "0b00111111011000101110001011101011";
        ram[389] = "0b00111111011111101111111011111000";
        ram[390] = "0b00111111010100001101000011001100";
        ram[391] = "0b00111111010001111100011111000101";
        ram[392] = "0b00111111010001111100011111000101";
        ram[393] = "0b00111111010001111100011111000101";
        ram[394] = "0b00111111010001111100011111000101";
        ram[395] = "0b00111111000010111000101110001011";
        for (unsigned i = 396; i < 401 ; i = i + 1) {
            ram[i] = "0b00111110011101001111010100001010";
        }
        ram[401] = "0b00111111000000001000000010000100";
        ram[402] = "0b00111111010111101101111011011011";
        ram[403] = "0b00111111011111101111111011111000";
        ram[404] = "0b00111111011111101111111011111000";
        ram[405] = "0b00111111001111011011110110110110";
        ram[406] = "0b00111101101010001010100010110001";
        for (unsigned i = 407; i < 420 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[420] = "0b00111110000110001001100010110011";
        ram[421] = "0b00111110101001001010010010110001";
        ram[422] = "0b00111101010100001101000001101000";
        for (unsigned i = 423; i < 434 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[434] = "0b00111110000010001000100001110010";
        ram[435] = "0b00111111010101011101010111010100";
        ram[436] = "0b00111111011111101111111011111000";
        ram[437] = "0b00111111011111101111111011111000";
        ram[438] = "0b00111110111001101110011011011010";
        for (unsigned i = 439; i < 467 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[467] = "0b00111110101010001010100010110001";
        ram[468] = "0b00111111011111101111111011111000";
        ram[469] = "0b00111111011111101111111011111000";
        ram[470] = "0b00111111011010101110101011101010";
        for (unsigned i = 471; i < 499 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[499] = "0b00111110101010001010100010110001";
        ram[500] = "0b00111111011111101111111011111000";
        ram[501] = "0b00111111011111101111111011111000";
        ram[502] = "0b00111111011010101110101011101010";
        for (unsigned i = 503; i < 530 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[530] = "0b00111110110101001101010011001100";
        ram[531] = "0b00111111000111011001110110011001";
        ram[532] = "0b00111111011111101111111011111000";
        ram[533] = "0b00111111011111101111111011111000";
        ram[534] = "0b00111111011100111111001111110001";
        ram[535] = "0b00111110010011001100110011001101";
        for (unsigned i = 536; i < 557 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[557] = "0b00111101110010001100100010101100";
        ram[558] = "0b00111110111010101110101011111011";
        ram[559] = "0b00111111011001001110010011101011";
        ram[560] = "0b00111111011001001110010011101011";
        ram[561] = "0b00111111011001001110010011101011";
        ram[562] = "0b00111111011111011111111000000000";
        ram[563] = "0b00111111011111101111111011111000";
        ram[564] = "0b00111111011111101111111011111000";
        ram[565] = "0b00111111011111101111111011111000";
        ram[566] = "0b00111111011111101111111011111000";
        ram[567] = "0b00111111011100001111000011111010";
        for (unsigned i = 568; i < 587 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[587] = "0b00111110100010001000100010010100";
        ram[588] = "0b00111110111011101110111011111010";
        ram[589] = "0b00111111010111001101110011011011";
        for (unsigned i = 590; i < 599 ; i = i + 1) {
            ram[i] = "0b00111111011111101111111011111000";
        }
        ram[599] = "0b00111111000011101000111010010011";
        for (unsigned i = 600; i < 617 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[617] = "0b00111110000101001001010010010010";
        ram[618] = "0b00111111001110111011101110110110";
        ram[619] = "0b00111111011111011111111000000000";
        ram[620] = "0b00111111011111101111111011111000";
        ram[621] = "0b00111111011111101111111011111000";
        ram[622] = "0b00111111011111101111111011111000";
        ram[623] = "0b00111111010111111101111111100011";
        ram[624] = "0b00111111010011101100111011001101";
        ram[625] = "0b00111111010011101100111011001101";
        ram[626] = "0b00111110100101101001011010100010";
        ram[627] = "0b00111110100010001000100010010100";
        ram[628] = "0b00111111010101111101011111010100";
        ram[629] = "0b00111111011111101111111011111000";
        ram[630] = "0b00111111011111101111111011111000";
        ram[631] = "0b00111110111010101110101011111011";
        for (unsigned i = 632; i < 648 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[648] = "0b00111110111000101110001011011010";
        ram[649] = "0b00111111010110111101101111100100";
        ram[650] = "0b00111111011111101111111011111000";
        ram[651] = "0b00111111011100101111001011111010";
        ram[652] = "0b00111111011000111110001111100011";
        ram[653] = "0b00111110111001101110011011011010";
        ram[654] = "0b00111110101100101011001011000000";
        ram[655] = "0b00111101111110001111100100101011";
        ram[656] = "0b00000000000000000000000000000000";
        ram[657] = "0b00000000000000000000000000000000";
        ram[658] = "0b00000000000000000000000000000000";
        ram[659] = "0b00000000000000000000000000000000";
        ram[660] = "0b00111111010010001100100011001101";
        ram[661] = "0b00111111011111101111111011111000";
        ram[662] = "0b00111111011100011111000111110001";
        ram[663] = "0b00111110001001001010010010010000";
        for (unsigned i = 664; i < 680 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[680] = "0b00111111001010011010100110101000";
        ram[681] = "0b00111111011111101111111011111000";
        ram[682] = "0b00111111001100001011000010101111";
        ram[683] = "0b00111110011110001111100011101000";
        for (unsigned i = 684; i < 691 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[691] = "0b00111110010000001100000010101101";
        ram[692] = "0b00111111011001111110011111100010";
        ram[693] = "0b00111111011111101111111011111000";
        ram[694] = "0b00111111011010101110101011101010";
        for (unsigned i = 695; i < 712 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[712] = "0b00111101100100001001000001110001";
        ram[713] = "0b00111110111110001111100100001001";
        for (unsigned i = 714; i < 723 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[723] = "0b00111110101010001010100010110001";
        ram[724] = "0b00111111011111101111111011111000";
        ram[725] = "0b00111111011111101111111011111000";
        ram[726] = "0b00111111001001101010011010100000";
        for (unsigned i = 727; i < 755 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[755] = "0b00111111000010111000101110001011";
        ram[756] = "0b00111111011111101111111011111000";
        ram[757] = "0b00111111011011101110111011101001";
        ram[758] = "0b00111110011001001110010011001001";
        for (unsigned i = 759; i < 786 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[786] = "0b00111111010100101101001011001100";
        ram[787] = "0b00111111011110101111101011111000";
        ram[788] = "0b00111111011111101111111011111000";
        ram[789] = "0b00111111001010001010100010110001";
        for (unsigned i = 790; i < 818 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[818] = "0b00111111011100101111001011111010";
        ram[819] = "0b00111111011111101111111011111000";
        ram[820] = "0b00111111011011111110111111110010";
        ram[821] = "0b00111110011001001110010011001001";
        for (unsigned i = 822; i < 849 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[849] = "0b00111110101100101011001011000000";
        ram[850] = "0b00111111011110111111110000000001";
        ram[851] = "0b00111111011100011111000111110001";
        ram[852] = "0b00111110101011001010110010110000";
        for (unsigned i = 853; i < 880 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[880] = "0b00111100101000001010000011110101";
        ram[881] = "0b00111111010011101100111011001101";
        ram[882] = "0b00111111011101101111011011111001";
        ram[883] = "0b00111111000111011001110110011001";
        for (unsigned i = 884; i < 912 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[912] = "0b00111100100000000111111111101101";
        ram[913] = "0b00111110111010101110101011111011";
        ram[914] = "0b00111110100010101000101010000011";
        for (unsigned i = 915; i < 1024 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_layer1_image_0) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 1024;
static const unsigned AddressWidth = 10;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_layer1_image_0_ram* meminst;


SC_CTOR(conv_layer1_image_0) {
meminst = new conv_layer1_image_0_ram("conv_layer1_image_0_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_layer1_image_0() {
    delete meminst;
}


};//endmodule
#endif
