// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _flatten_HH_
#define _flatten_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct flatten : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > output_V_address0;
    sc_out< sc_logic > output_V_ce0;
    sc_out< sc_logic > output_V_we0;
    sc_out< sc_lv<24> > output_V_d0;
    sc_out< sc_lv<10> > input_V_address0;
    sc_out< sc_logic > input_V_ce0;
    sc_in< sc_lv<24> > input_V_q0;


    // Module declarations
    flatten(sc_module_name name);
    SC_HAS_PROCESS(flatten);

    ~flatten();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_3_fu_110_p2;
    sc_signal< sc_lv<3> > i_3_reg_272;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > tmp_fu_140_p2;
    sc_signal< sc_lv<11> > tmp_reg_277;
    sc_signal< sc_lv<1> > exitcond3_fu_104_p2;
    sc_signal< sc_lv<7> > tmp_234_fu_170_p2;
    sc_signal< sc_lv<7> > tmp_234_reg_282;
    sc_signal< sc_lv<3> > j_1_fu_182_p2;
    sc_signal< sc_lv<3> > j_1_reg_290;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > tmp_4_cast_cast_fu_196_p1;
    sc_signal< sc_lv<8> > tmp_4_cast_cast_reg_295;
    sc_signal< sc_lv<1> > exitcond2_fu_176_p2;
    sc_signal< sc_lv<11> > tmp_255_cast_fu_209_p3;
    sc_signal< sc_lv<11> > tmp_255_cast_reg_300;
    sc_signal< sc_lv<5> > k_1_fu_227_p2;
    sc_signal< sc_lv<5> > k_1_reg_308;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<11> > tmp_7_fu_242_p2;
    sc_signal< sc_lv<11> > tmp_7_reg_313;
    sc_signal< sc_lv<1> > exitcond_fu_221_p2;
    sc_signal< sc_lv<3> > i_reg_71;
    sc_signal< sc_lv<3> > j_reg_82;
    sc_signal< sc_lv<5> > k_reg_93;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_256_cast_fu_256_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_264_p1;
    sc_signal< sc_lv<10> > p_shl_fu_116_p3;
    sc_signal< sc_lv<8> > p_shl5_fu_128_p3;
    sc_signal< sc_lv<11> > p_shl_cast_fu_124_p1;
    sc_signal< sc_lv<11> > p_shl5_cast_fu_136_p1;
    sc_signal< sc_lv<6> > tmp_s_fu_146_p3;
    sc_signal< sc_lv<4> > tmp_233_fu_158_p3;
    sc_signal< sc_lv<7> > p_shl1_cast_fu_154_p1;
    sc_signal< sc_lv<7> > p_shl2_cast_fu_166_p1;
    sc_signal< sc_lv<7> > tmp_4_fu_188_p3;
    sc_signal< sc_lv<7> > tmp_5_cast_fu_200_p1;
    sc_signal< sc_lv<7> > tmp_235_fu_204_p2;
    sc_signal< sc_lv<8> > k_cast7_cast_fu_217_p1;
    sc_signal< sc_lv<8> > tmp1_fu_233_p2;
    sc_signal< sc_lv<11> > tmp1_cast_fu_238_p1;
    sc_signal< sc_lv<11> > tmp_9_cast_fu_247_p1;
    sc_signal< sc_lv<11> > tmp_236_fu_251_p2;
    sc_signal< sc_lv<32> > tmp_7_cast_fu_261_p1;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond2_fu_176_p2();
    void thread_exitcond3_fu_104_p2();
    void thread_exitcond_fu_221_p2();
    void thread_i_3_fu_110_p2();
    void thread_input_V_address0();
    void thread_input_V_ce0();
    void thread_j_1_fu_182_p2();
    void thread_k_1_fu_227_p2();
    void thread_k_cast7_cast_fu_217_p1();
    void thread_output_V_address0();
    void thread_output_V_ce0();
    void thread_output_V_d0();
    void thread_output_V_we0();
    void thread_p_shl1_cast_fu_154_p1();
    void thread_p_shl2_cast_fu_166_p1();
    void thread_p_shl5_cast_fu_136_p1();
    void thread_p_shl5_fu_128_p3();
    void thread_p_shl_cast_fu_124_p1();
    void thread_p_shl_fu_116_p3();
    void thread_tmp1_cast_fu_238_p1();
    void thread_tmp1_fu_233_p2();
    void thread_tmp_233_fu_158_p3();
    void thread_tmp_234_fu_170_p2();
    void thread_tmp_235_fu_204_p2();
    void thread_tmp_236_fu_251_p2();
    void thread_tmp_255_cast_fu_209_p3();
    void thread_tmp_256_cast_fu_256_p1();
    void thread_tmp_4_cast_cast_fu_196_p1();
    void thread_tmp_4_fu_188_p3();
    void thread_tmp_5_cast_fu_200_p1();
    void thread_tmp_7_cast_fu_261_p1();
    void thread_tmp_7_fu_242_p2();
    void thread_tmp_8_fu_264_p1();
    void thread_tmp_9_cast_fu_247_p1();
    void thread_tmp_fu_140_p2();
    void thread_tmp_s_fu_146_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
