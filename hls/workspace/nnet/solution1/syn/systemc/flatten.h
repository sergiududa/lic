// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _flatten_HH_
#define _flatten_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct flatten : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > output_V_address0;
    sc_out< sc_logic > output_V_ce0;
    sc_out< sc_logic > output_V_we0;
    sc_out< sc_lv<24> > output_V_d0;
    sc_out< sc_lv<10> > input_V_address0;
    sc_out< sc_logic > input_V_ce0;
    sc_in< sc_lv<24> > input_V_q0;


    // Module declarations
    flatten(sc_module_name name);
    SC_HAS_PROCESS(flatten);

    ~flatten();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_3_fu_106_p2;
    sc_signal< sc_lv<3> > i_3_reg_264;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > tmp_fu_136_p2;
    sc_signal< sc_lv<11> > tmp_reg_269;
    sc_signal< sc_lv<1> > exitcond3_fu_100_p2;
    sc_signal< sc_lv<7> > tmp_46_fu_166_p2;
    sc_signal< sc_lv<7> > tmp_46_reg_274;
    sc_signal< sc_lv<3> > j_3_fu_178_p2;
    sc_signal< sc_lv<3> > j_3_reg_282;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > tmp_s_fu_184_p3;
    sc_signal< sc_lv<7> > tmp_s_reg_287;
    sc_signal< sc_lv<1> > exitcond2_fu_172_p2;
    sc_signal< sc_lv<11> > tmp_65_cast_fu_201_p3;
    sc_signal< sc_lv<11> > tmp_65_cast_reg_292;
    sc_signal< sc_lv<5> > k_3_fu_219_p2;
    sc_signal< sc_lv<5> > k_3_reg_300;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<11> > tmp_23_fu_234_p2;
    sc_signal< sc_lv<11> > tmp_23_reg_305;
    sc_signal< sc_lv<1> > exitcond_fu_213_p2;
    sc_signal< sc_lv<3> > i_reg_67;
    sc_signal< sc_lv<3> > j_reg_78;
    sc_signal< sc_lv<5> > k_reg_89;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_66_cast_fu_248_p1;
    sc_signal< sc_lv<64> > tmp_24_fu_256_p1;
    sc_signal< sc_lv<10> > p_shl_fu_112_p3;
    sc_signal< sc_lv<8> > p_shl5_fu_124_p3;
    sc_signal< sc_lv<11> > p_shl_cast_fu_120_p1;
    sc_signal< sc_lv<11> > p_shl5_cast_fu_132_p1;
    sc_signal< sc_lv<6> > tmp_44_fu_142_p3;
    sc_signal< sc_lv<4> > tmp_45_fu_154_p3;
    sc_signal< sc_lv<7> > p_shl1_cast_fu_150_p1;
    sc_signal< sc_lv<7> > p_shl2_cast_fu_162_p1;
    sc_signal< sc_lv<7> > tmp_22_cast_fu_192_p1;
    sc_signal< sc_lv<7> > tmp_47_fu_196_p2;
    sc_signal< sc_lv<7> > k_cast3_fu_209_p1;
    sc_signal< sc_lv<7> > tmp1_fu_225_p2;
    sc_signal< sc_lv<11> > tmp1_cast_fu_230_p1;
    sc_signal< sc_lv<11> > tmp_25_cast_fu_239_p1;
    sc_signal< sc_lv<11> > tmp_48_fu_243_p2;
    sc_signal< sc_lv<32> > tmp_27_cast_fu_253_p1;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond2_fu_172_p2();
    void thread_exitcond3_fu_100_p2();
    void thread_exitcond_fu_213_p2();
    void thread_i_3_fu_106_p2();
    void thread_input_V_address0();
    void thread_input_V_ce0();
    void thread_j_3_fu_178_p2();
    void thread_k_3_fu_219_p2();
    void thread_k_cast3_fu_209_p1();
    void thread_output_V_address0();
    void thread_output_V_ce0();
    void thread_output_V_d0();
    void thread_output_V_we0();
    void thread_p_shl1_cast_fu_150_p1();
    void thread_p_shl2_cast_fu_162_p1();
    void thread_p_shl5_cast_fu_132_p1();
    void thread_p_shl5_fu_124_p3();
    void thread_p_shl_cast_fu_120_p1();
    void thread_p_shl_fu_112_p3();
    void thread_tmp1_cast_fu_230_p1();
    void thread_tmp1_fu_225_p2();
    void thread_tmp_22_cast_fu_192_p1();
    void thread_tmp_23_fu_234_p2();
    void thread_tmp_24_fu_256_p1();
    void thread_tmp_25_cast_fu_239_p1();
    void thread_tmp_27_cast_fu_253_p1();
    void thread_tmp_44_fu_142_p3();
    void thread_tmp_45_fu_154_p3();
    void thread_tmp_46_fu_166_p2();
    void thread_tmp_47_fu_196_p2();
    void thread_tmp_48_fu_243_p2();
    void thread_tmp_65_cast_fu_201_p3();
    void thread_tmp_66_cast_fu_248_p1();
    void thread_tmp_fu_136_p2();
    void thread_tmp_s_fu_184_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
