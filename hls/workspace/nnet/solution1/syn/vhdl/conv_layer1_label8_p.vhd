-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_layer1_label8_p is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    filter_0_i_i : IN STD_LOGIC_VECTOR (3 downto 0);
    output_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    output_V_ce0 : OUT STD_LOGIC;
    output_V_we0 : OUT STD_LOGIC;
    output_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
end;


architecture behav of conv_layer1_label8_p is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv10_349 : STD_LOGIC_VECTOR (9 downto 0) := "1101001001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv10_1D : STD_LOGIC_VECTOR (9 downto 0) := "0000011101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv_layer1_weights_31_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_31_ce0 : STD_LOGIC;
    signal conv_layer1_weights_31_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_29_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_29_ce0 : STD_LOGIC;
    signal conv_layer1_weights_29_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_27_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_27_ce0 : STD_LOGIC;
    signal conv_layer1_weights_27_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_25_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_25_ce0 : STD_LOGIC;
    signal conv_layer1_weights_25_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_23_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_23_ce0 : STD_LOGIC;
    signal conv_layer1_weights_23_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_21_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_21_ce0 : STD_LOGIC;
    signal conv_layer1_weights_21_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_19_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_19_ce0 : STD_LOGIC;
    signal conv_layer1_weights_19_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_17_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_17_ce0 : STD_LOGIC;
    signal conv_layer1_weights_17_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_15_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_15_ce0 : STD_LOGIC;
    signal conv_layer1_weights_15_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_13_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_13_ce0 : STD_LOGIC;
    signal conv_layer1_weights_13_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_11_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_11_ce0 : STD_LOGIC;
    signal conv_layer1_weights_11_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_9_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_9_ce0 : STD_LOGIC;
    signal conv_layer1_weights_9_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_7_ce0 : STD_LOGIC;
    signal conv_layer1_weights_7_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_5_ce0 : STD_LOGIC;
    signal conv_layer1_weights_5_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_3_ce0 : STD_LOGIC;
    signal conv_layer1_weights_3_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_weights_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_weights_1_ce0 : STD_LOGIC;
    signal conv_layer1_weights_1_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal conv_layer1_bias_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_layer1_bias_V_ce0 : STD_LOGIC;
    signal conv_layer1_bias_V_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal image_V_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce0 : STD_LOGIC;
    signal image_V_0_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce1 : STD_LOGIC;
    signal image_V_0_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce2 : STD_LOGIC;
    signal image_V_0_q2 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce3 : STD_LOGIC;
    signal image_V_0_q3 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce4 : STD_LOGIC;
    signal image_V_0_q4 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce5 : STD_LOGIC;
    signal image_V_0_q5 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address6 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce6 : STD_LOGIC;
    signal image_V_0_q6 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address7 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce7 : STD_LOGIC;
    signal image_V_0_q7 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address8 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce8 : STD_LOGIC;
    signal image_V_0_q8 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address9 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce9 : STD_LOGIC;
    signal image_V_0_q9 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address10 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce10 : STD_LOGIC;
    signal image_V_0_q10 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address11 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce11 : STD_LOGIC;
    signal image_V_0_q11 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address12 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce12 : STD_LOGIC;
    signal image_V_0_q12 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address13 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce13 : STD_LOGIC;
    signal image_V_0_q13 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address14 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce14 : STD_LOGIC;
    signal image_V_0_q14 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_address15 : STD_LOGIC_VECTOR (9 downto 0);
    signal image_V_0_ce15 : STD_LOGIC;
    signal image_V_0_q15 : STD_LOGIC_VECTOR (19 downto 0);
    signal indvar_flatten_i_reg_515 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_0_i_i_i_i_reg_526 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter1_i_0_i_i_i_i_reg_526 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter2_i_0_i_i_i_i_reg_526 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_0_i_i_i_i_reg_538 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_549_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_reg_1528 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_84_i_0_cast_i_ca_fu_574_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_0_cast_i_ca_reg_1618 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_84_i_0_1_cast_i_s_fu_578_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_0_1_cast_i_s_reg_1623 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_0_2_cast_i_s_fu_582_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_0_2_cast_i_s_reg_1628 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_0_3_cast_i_s_fu_586_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_0_3_cast_i_s_reg_1633 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_1_cast_i_ca_fu_590_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_1_cast_i_ca_reg_1638 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_1_1_cast_i_s_fu_594_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_1_1_cast_i_s_reg_1643 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_1_2_cast_i_s_fu_598_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_1_2_cast_i_s_reg_1648 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_1_3_cast_i_s_fu_602_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_1_3_cast_i_s_reg_1653 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_2_cast_i_ca_fu_606_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_2_cast_i_ca_reg_1658 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_2_1_cast_i_s_fu_610_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_2_1_cast_i_s_reg_1663 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_2_2_cast_i_s_fu_614_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_2_2_cast_i_s_reg_1668 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_2_3_cast_i_s_fu_618_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_2_3_cast_i_s_reg_1673 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_3_cast_i_ca_fu_622_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_3_cast_i_ca_reg_1678 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_3_1_cast_i_s_fu_626_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_3_1_cast_i_s_reg_1683 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_3_2_cast_i_s_fu_630_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_3_2_cast_i_s_reg_1688 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_3_3_cast_i_s_fu_634_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_84_i_3_3_cast_i_s_reg_1693 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_cast_i_i_fu_638_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_cast_i_i_reg_1698 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_i_fu_642_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_i_reg_1703 : STD_LOGIC_VECTOR (22 downto 0);
    signal exitcond_flatten_i_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond_flatten_i_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_exitcond_flatten_i_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond_flatten_i_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond_flatten_i_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_exitcond_flatten_i_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_exitcond_flatten_i_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_exitcond_flatten_i_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_exitcond_flatten_i_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_exitcond_flatten_i_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_exitcond_flatten_i_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_s_fu_652_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond52_i_i_i9_i_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond52_i_i_i9_i_reg_1717 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond52_i_i_i9_i_reg_1717 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_exitcond52_i_i_i9_i_reg_1717 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_0_i_i_i_mid2_i_fu_664_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_0_i_i_i_mid2_i_reg_1724 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter1_j_0_i_i_i_mid2_i_reg_1724 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter2_j_0_i_i_i_mid2_i_reg_1724 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter3_j_0_i_i_i_mid2_i_reg_1724 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter4_j_0_i_i_i_mid2_i_reg_1724 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter5_j_0_i_i_i_mid2_i_reg_1724 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter6_j_0_i_i_i_mid2_i_reg_1724 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter7_j_0_i_i_i_mid2_i_reg_1724 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter8_j_0_i_i_i_mid2_i_reg_1724 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter9_j_0_i_i_i_mid2_i_reg_1724 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter10_j_0_i_i_i_mid2_i_reg_1724 : STD_LOGIC_VECTOR (4 downto 0);
    signal i2_i_fu_672_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i2_i_reg_1733 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_i_i_mid2_v_i_fu_678_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_i_i_mid2_v_i_reg_1738 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter1_tmp_i_i_mid2_v_i_reg_1738 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter2_tmp_i_i_mid2_v_i_reg_1738 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter3_tmp_i_i_mid2_v_i_reg_1738 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter4_tmp_i_i_mid2_v_i_reg_1738 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter5_tmp_i_i_mid2_v_i_reg_1738 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter6_tmp_i_i_mid2_v_i_reg_1738 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter7_tmp_i_i_mid2_v_i_reg_1738 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter8_tmp_i_i_mid2_v_i_reg_1738 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter9_tmp_i_i_mid2_v_i_reg_1738 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter10_tmp_i_i_mid2_v_i_reg_1738 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_fu_699_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_1750 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter1_j_reg_1750 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter2_j_reg_1750 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter3_j_reg_1750 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter4_j_reg_1750 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter5_j_reg_1750 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_80_i_0_2_i_i_fu_718_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_80_i_0_2_i_i_reg_1763 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter1_tmp_80_i_0_2_i_i_reg_1763 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter2_tmp_80_i_0_2_i_i_reg_1763 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter3_tmp_80_i_0_2_i_i_reg_1763 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter4_tmp_80_i_0_2_i_i_reg_1763 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter5_tmp_80_i_0_2_i_i_reg_1763 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_v_i_fu_743_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_v_i_reg_1775 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter2_p_v_i_reg_1775 : STD_LOGIC_VECTOR (4 downto 0);
    signal image_V_0_load_reg_1787 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal image_V_0_load_1_reg_1792 : STD_LOGIC_VECTOR (19 downto 0);
    signal image_V_0_load_2_reg_1797 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_80_i_0_3_i_i_fu_761_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_80_i_0_3_i_i_reg_1802 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter2_tmp_80_i_0_3_i_i_reg_1802 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter3_tmp_80_i_0_3_i_i_reg_1802 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter4_tmp_80_i_0_3_i_i_reg_1802 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter5_tmp_80_i_0_3_i_i_reg_1802 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter6_tmp_80_i_0_3_i_i_reg_1802 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_88_reg_1814 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_0_1_i_s_fu_1444_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_0_1_i_s_reg_1824 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_0_2_i_s_fu_1449_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_0_2_i_s_reg_1834 : STD_LOGIC_VECTOR (38 downto 0);
    signal image_V_0_load_3_reg_1839 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal image_V_0_load_4_reg_1844 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_78_i_2_i_mid2_v_1_fu_825_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_78_i_2_i_mid2_v_1_reg_1849 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter4_tmp_78_i_2_i_mid2_v_1_reg_1849 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_78_i_3_i_mid2_v_1_fu_838_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_78_i_3_i_mid2_v_1_reg_1856 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter4_tmp_78_i_3_i_mid2_v_1_reg_1856 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter5_tmp_78_i_3_i_mid2_v_1_reg_1856 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter6_tmp_78_i_3_i_mid2_v_1_reg_1856 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_24_i_0_3_i_s_fu_1454_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_0_3_i_s_reg_1874 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_371_i_reg_1879 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_24_i_1_i_i_fu_1459_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_1_i_i_reg_1884 : STD_LOGIC_VECTOR (38 downto 0);
    signal image_V_0_load_5_reg_1889 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal image_V_0_load_6_reg_1894 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_1_1_i_s_fu_1464_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_1_1_i_s_reg_1909 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_373_i_reg_1914 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_24_i_1_2_i_s_fu_1469_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_1_2_i_s_reg_1919 : STD_LOGIC_VECTOR (38 downto 0);
    signal image_V_0_load_7_reg_1924 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal image_V_0_load_8_reg_1929 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_1_3_i_s_fu_1474_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_1_3_i_s_reg_1944 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_375_i_reg_1949 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_24_i_2_i_i_fu_1479_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_2_i_i_reg_1954 : STD_LOGIC_VECTOR (38 downto 0);
    signal image_V_0_load_9_reg_1959 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal image_V_0_load_10_reg_1964 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_2_1_i_s_fu_1484_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_2_1_i_s_reg_1979 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_377_i_reg_1984 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_24_i_2_2_i_s_fu_1489_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_2_2_i_s_reg_1989 : STD_LOGIC_VECTOR (38 downto 0);
    signal image_V_0_load_11_reg_1994 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal image_V_0_load_12_reg_1999 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_2_3_i_s_fu_1494_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_2_3_i_s_reg_2009 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_379_i_reg_2014 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_24_i_3_i_i_fu_1499_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_3_i_i_reg_2019 : STD_LOGIC_VECTOR (38 downto 0);
    signal image_V_0_load_13_reg_2024 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal image_V_0_load_14_reg_2029 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_3_1_i_s_fu_1504_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_3_1_i_s_reg_2034 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_381_i_reg_2039 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_24_i_3_2_i_s_fu_1509_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_3_2_i_s_reg_2044 : STD_LOGIC_VECTOR (38 downto 0);
    signal image_V_0_load_15_reg_2049 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal p_Val2_24_i_3_3_i_s_fu_1514_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_3_3_i_s_reg_2054 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_383_i_reg_2059 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_i1_i_fu_1399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_i_reg_2064 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_V_cast_i_i_fu_1405_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal a_V_cast_i_i_reg_2069 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_phi_mux_i_0_i_i_i_i_phi_fu_530_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_j_0_i_i_i_i_phi_fu_542_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_i_i_fu_553_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_345_i_fu_694_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_351_i_fu_713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_358_i_fu_732_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_346_i_fu_756_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_365_i_fu_773_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_352_i_fu_796_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_359_i_fu_810_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_348_i_fu_851_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_366_i_fu_909_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_354_i_fu_936_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_361_i_fu_947_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_350_i_fu_1017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_368_i_fu_1028_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_356_i_fu_1098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_363_i_fu_1109_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_370_i_fu_1179_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_344_i_fu_1422_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_86_fu_686_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_89_fu_705_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_92_fu_724_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_mid1_i_fu_737_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_87_fu_749_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_94_fu_766_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_24_i_0_i_i_fu_1438_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_90_fu_790_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_93_fu_804_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_78_i_2_i_mid2_v_s_fu_818_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_78_i_3_i_mid2_v_s_fu_831_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_347_i_fu_844_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_91_fu_859_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_0_1_i_1_fu_856_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_0_1_i_i_fu_866_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_25_i_0_1_i_s_fu_870_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_364_i_fu_879_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_24_i_0_2_i_1_fu_876_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_0_2_i_i_fu_889_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_95_fu_903_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_25_i_0_2_i_s_fu_897_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_353_i_fu_930_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_360_i_fu_941_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_24_i_0_3_i_1_fu_952_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_0_3_i_i_fu_955_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_25_i_0_3_i_s_fu_962_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_372_i_fu_971_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_24_i_1_i_ca_fu_968_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_1_i_i_fu_981_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_25_i_1_i_i_fu_989_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_349_i_fu_1011_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_367_i_fu_1022_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_24_i_1_1_i_1_fu_1033_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_1_1_i_i_fu_1036_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_25_i_1_1_i_s_fu_1043_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_374_i_fu_1052_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_24_i_1_2_i_1_fu_1049_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_1_2_i_i_fu_1062_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_25_i_1_2_i_s_fu_1070_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_355_i_fu_1092_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_362_i_fu_1103_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_24_i_1_3_i_1_fu_1114_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_1_3_i_i_fu_1117_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_25_i_1_3_i_s_fu_1124_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_376_i_fu_1133_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_24_i_2_i_ca_fu_1130_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_2_i_i_fu_1143_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_25_i_2_i_i_fu_1151_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_369_i_fu_1173_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_24_i_2_1_i_1_fu_1184_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_2_1_i_i_fu_1187_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_25_i_2_1_i_s_fu_1194_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_378_i_fu_1203_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_24_i_2_2_i_1_fu_1200_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_2_2_i_i_fu_1213_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_25_i_2_2_i_s_fu_1221_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_24_i_2_3_i_1_fu_1243_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_2_3_i_i_fu_1246_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_25_i_2_3_i_s_fu_1253_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_380_i_fu_1262_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_24_i_3_i_ca_fu_1259_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_3_i_i_fu_1272_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_25_i_3_i_i_fu_1280_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_24_i_3_1_i_1_fu_1302_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_3_1_i_i_fu_1305_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_25_i_3_1_i_s_fu_1312_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_382_i_fu_1321_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_24_i_3_2_i_1_fu_1318_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_3_2_i_i_fu_1331_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_25_i_3_2_i_s_fu_1339_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_24_i_3_3_i_1_fu_1358_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_86_i_3_3_i_i_fu_1361_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Val2_25_i_3_3_i_s_fu_1368_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal sum_V_i_3_3_i_i_fu_1374_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_22_i_i_i_fu_1394_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_1_i_fu_1384_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1519_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_85_fu_1416_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal agg_result_V_i_i_fu_1427_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_24_i_0_i_i_fu_1438_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_0_i_i_fu_1438_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_0_1_i_s_fu_1444_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_0_1_i_s_fu_1444_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_0_2_i_s_fu_1449_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_0_2_i_s_fu_1449_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_0_3_i_s_fu_1454_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_0_3_i_s_fu_1454_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_1_i_i_fu_1459_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_1_i_i_fu_1459_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_1_1_i_s_fu_1464_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_1_1_i_s_fu_1464_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_1_2_i_s_fu_1469_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_1_2_i_s_fu_1469_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_1_3_i_s_fu_1474_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_1_3_i_s_fu_1474_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_2_i_i_fu_1479_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_2_i_i_fu_1479_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_2_1_i_s_fu_1484_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_2_1_i_s_fu_1484_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_2_2_i_s_fu_1489_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_2_2_i_s_fu_1489_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_2_3_i_s_fu_1494_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_2_3_i_s_fu_1494_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_3_i_i_fu_1499_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_3_i_i_fu_1499_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_3_1_i_s_fu_1504_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_3_1_i_s_fu_1504_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_3_2_i_s_fu_1509_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_3_2_i_s_fu_1509_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_i_3_3_i_s_fu_1514_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_24_i_3_3_i_s_fu_1514_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1519_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1519_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1519_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1519_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1519_p20 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_24_i_0_1_i_s_fu_1444_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_0_2_i_s_fu_1449_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_0_3_i_s_fu_1454_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_0_i_i_fu_1438_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_1_1_i_s_fu_1464_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_1_2_i_s_fu_1469_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_1_3_i_s_fu_1474_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_1_i_i_fu_1459_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_2_1_i_s_fu_1484_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_2_2_i_s_fu_1489_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_2_3_i_s_fu_1494_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_2_i_i_fu_1479_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_3_1_i_s_fu_1504_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_3_2_i_s_fu_1509_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_3_3_i_s_fu_1514_p10 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_Val2_24_i_3_i_i_fu_1499_p10 : STD_LOGIC_VECTOR (38 downto 0);

    component nnet_mul_mul_19s_tde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component nnet_mac_muladd_5udo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component conv_layer1_labelbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labelcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labeldEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labeleOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labelfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labelg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labelhbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labelibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labeljbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labelkbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labellbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labelmb6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labelncg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labelocq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labelpcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labelqcK IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component conv_layer1_labelrcU IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component conv_layer1_labelsc4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address6 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address7 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address8 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address9 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address10 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce10 : IN STD_LOGIC;
        q10 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address11 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce11 : IN STD_LOGIC;
        q11 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address12 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce12 : IN STD_LOGIC;
        q12 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address13 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce13 : IN STD_LOGIC;
        q13 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address14 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce14 : IN STD_LOGIC;
        q14 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address15 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce15 : IN STD_LOGIC;
        q15 : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;



begin
    conv_layer1_weights_31_U : component conv_layer1_labelbkb
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_31_address0,
        ce0 => conv_layer1_weights_31_ce0,
        q0 => conv_layer1_weights_31_q0);

    conv_layer1_weights_29_U : component conv_layer1_labelcud
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_29_address0,
        ce0 => conv_layer1_weights_29_ce0,
        q0 => conv_layer1_weights_29_q0);

    conv_layer1_weights_27_U : component conv_layer1_labeldEe
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_27_address0,
        ce0 => conv_layer1_weights_27_ce0,
        q0 => conv_layer1_weights_27_q0);

    conv_layer1_weights_25_U : component conv_layer1_labeleOg
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_25_address0,
        ce0 => conv_layer1_weights_25_ce0,
        q0 => conv_layer1_weights_25_q0);

    conv_layer1_weights_23_U : component conv_layer1_labelfYi
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_23_address0,
        ce0 => conv_layer1_weights_23_ce0,
        q0 => conv_layer1_weights_23_q0);

    conv_layer1_weights_21_U : component conv_layer1_labelg8j
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_21_address0,
        ce0 => conv_layer1_weights_21_ce0,
        q0 => conv_layer1_weights_21_q0);

    conv_layer1_weights_19_U : component conv_layer1_labelhbi
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_19_address0,
        ce0 => conv_layer1_weights_19_ce0,
        q0 => conv_layer1_weights_19_q0);

    conv_layer1_weights_17_U : component conv_layer1_labelibs
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_17_address0,
        ce0 => conv_layer1_weights_17_ce0,
        q0 => conv_layer1_weights_17_q0);

    conv_layer1_weights_15_U : component conv_layer1_labeljbC
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_15_address0,
        ce0 => conv_layer1_weights_15_ce0,
        q0 => conv_layer1_weights_15_q0);

    conv_layer1_weights_13_U : component conv_layer1_labelkbM
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_13_address0,
        ce0 => conv_layer1_weights_13_ce0,
        q0 => conv_layer1_weights_13_q0);

    conv_layer1_weights_11_U : component conv_layer1_labellbW
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_11_address0,
        ce0 => conv_layer1_weights_11_ce0,
        q0 => conv_layer1_weights_11_q0);

    conv_layer1_weights_9_U : component conv_layer1_labelmb6
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_9_address0,
        ce0 => conv_layer1_weights_9_ce0,
        q0 => conv_layer1_weights_9_q0);

    conv_layer1_weights_7_U : component conv_layer1_labelncg
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_7_address0,
        ce0 => conv_layer1_weights_7_ce0,
        q0 => conv_layer1_weights_7_q0);

    conv_layer1_weights_5_U : component conv_layer1_labelocq
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_5_address0,
        ce0 => conv_layer1_weights_5_ce0,
        q0 => conv_layer1_weights_5_q0);

    conv_layer1_weights_3_U : component conv_layer1_labelpcA
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_3_address0,
        ce0 => conv_layer1_weights_3_ce0,
        q0 => conv_layer1_weights_3_q0);

    conv_layer1_weights_1_U : component conv_layer1_labelqcK
    generic map (
        DataWidth => 19,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_weights_1_address0,
        ce0 => conv_layer1_weights_1_ce0,
        q0 => conv_layer1_weights_1_q0);

    conv_layer1_bias_V_U : component conv_layer1_labelrcU
    generic map (
        DataWidth => 21,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_layer1_bias_V_address0,
        ce0 => conv_layer1_bias_V_ce0,
        q0 => conv_layer1_bias_V_q0);

    image_V_0_U : component conv_layer1_labelsc4
    generic map (
        DataWidth => 20,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => image_V_0_address0,
        ce0 => image_V_0_ce0,
        q0 => image_V_0_q0,
        address1 => image_V_0_address1,
        ce1 => image_V_0_ce1,
        q1 => image_V_0_q1,
        address2 => image_V_0_address2,
        ce2 => image_V_0_ce2,
        q2 => image_V_0_q2,
        address3 => image_V_0_address3,
        ce3 => image_V_0_ce3,
        q3 => image_V_0_q3,
        address4 => image_V_0_address4,
        ce4 => image_V_0_ce4,
        q4 => image_V_0_q4,
        address5 => image_V_0_address5,
        ce5 => image_V_0_ce5,
        q5 => image_V_0_q5,
        address6 => image_V_0_address6,
        ce6 => image_V_0_ce6,
        q6 => image_V_0_q6,
        address7 => image_V_0_address7,
        ce7 => image_V_0_ce7,
        q7 => image_V_0_q7,
        address8 => image_V_0_address8,
        ce8 => image_V_0_ce8,
        q8 => image_V_0_q8,
        address9 => image_V_0_address9,
        ce9 => image_V_0_ce9,
        q9 => image_V_0_q9,
        address10 => image_V_0_address10,
        ce10 => image_V_0_ce10,
        q10 => image_V_0_q10,
        address11 => image_V_0_address11,
        ce11 => image_V_0_ce11,
        q11 => image_V_0_q11,
        address12 => image_V_0_address12,
        ce12 => image_V_0_ce12,
        q12 => image_V_0_q12,
        address13 => image_V_0_address13,
        ce13 => image_V_0_ce13,
        q13 => image_V_0_q13,
        address14 => image_V_0_address14,
        ce14 => image_V_0_ce14,
        q14 => image_V_0_q14,
        address15 => image_V_0_address15,
        ce15 => image_V_0_ce15,
        q15 => image_V_0_q15);

    nnet_mul_mul_19s_tde_U1 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_0_i_i_fu_1438_p0,
        din1 => p_Val2_24_i_0_i_i_fu_1438_p1,
        dout => p_Val2_24_i_0_i_i_fu_1438_p2);

    nnet_mul_mul_19s_tde_U2 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_0_1_i_s_fu_1444_p0,
        din1 => p_Val2_24_i_0_1_i_s_fu_1444_p1,
        dout => p_Val2_24_i_0_1_i_s_fu_1444_p2);

    nnet_mul_mul_19s_tde_U3 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_0_2_i_s_fu_1449_p0,
        din1 => p_Val2_24_i_0_2_i_s_fu_1449_p1,
        dout => p_Val2_24_i_0_2_i_s_fu_1449_p2);

    nnet_mul_mul_19s_tde_U4 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_0_3_i_s_fu_1454_p0,
        din1 => p_Val2_24_i_0_3_i_s_fu_1454_p1,
        dout => p_Val2_24_i_0_3_i_s_fu_1454_p2);

    nnet_mul_mul_19s_tde_U5 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_1_i_i_fu_1459_p0,
        din1 => p_Val2_24_i_1_i_i_fu_1459_p1,
        dout => p_Val2_24_i_1_i_i_fu_1459_p2);

    nnet_mul_mul_19s_tde_U6 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_1_1_i_s_fu_1464_p0,
        din1 => p_Val2_24_i_1_1_i_s_fu_1464_p1,
        dout => p_Val2_24_i_1_1_i_s_fu_1464_p2);

    nnet_mul_mul_19s_tde_U7 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_1_2_i_s_fu_1469_p0,
        din1 => p_Val2_24_i_1_2_i_s_fu_1469_p1,
        dout => p_Val2_24_i_1_2_i_s_fu_1469_p2);

    nnet_mul_mul_19s_tde_U8 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_1_3_i_s_fu_1474_p0,
        din1 => p_Val2_24_i_1_3_i_s_fu_1474_p1,
        dout => p_Val2_24_i_1_3_i_s_fu_1474_p2);

    nnet_mul_mul_19s_tde_U9 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_2_i_i_fu_1479_p0,
        din1 => p_Val2_24_i_2_i_i_fu_1479_p1,
        dout => p_Val2_24_i_2_i_i_fu_1479_p2);

    nnet_mul_mul_19s_tde_U10 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_2_1_i_s_fu_1484_p0,
        din1 => p_Val2_24_i_2_1_i_s_fu_1484_p1,
        dout => p_Val2_24_i_2_1_i_s_fu_1484_p2);

    nnet_mul_mul_19s_tde_U11 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_2_2_i_s_fu_1489_p0,
        din1 => p_Val2_24_i_2_2_i_s_fu_1489_p1,
        dout => p_Val2_24_i_2_2_i_s_fu_1489_p2);

    nnet_mul_mul_19s_tde_U12 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_2_3_i_s_fu_1494_p0,
        din1 => p_Val2_24_i_2_3_i_s_fu_1494_p1,
        dout => p_Val2_24_i_2_3_i_s_fu_1494_p2);

    nnet_mul_mul_19s_tde_U13 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_3_i_i_fu_1499_p0,
        din1 => p_Val2_24_i_3_i_i_fu_1499_p1,
        dout => p_Val2_24_i_3_i_i_fu_1499_p2);

    nnet_mul_mul_19s_tde_U14 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_3_1_i_s_fu_1504_p0,
        din1 => p_Val2_24_i_3_1_i_s_fu_1504_p1,
        dout => p_Val2_24_i_3_1_i_s_fu_1504_p2);

    nnet_mul_mul_19s_tde_U15 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_3_2_i_s_fu_1509_p0,
        din1 => p_Val2_24_i_3_2_i_s_fu_1509_p1,
        dout => p_Val2_24_i_3_2_i_s_fu_1509_p2);

    nnet_mul_mul_19s_tde_U16 : component nnet_mul_mul_19s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        din0 => p_Val2_24_i_3_3_i_s_fu_1514_p0,
        din1 => p_Val2_24_i_3_3_i_s_fu_1514_p1,
        dout => p_Val2_24_i_3_3_i_s_fu_1514_p2);

    nnet_mac_muladd_5udo_U17 : component nnet_mac_muladd_5udo
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 6,
        din2_WIDTH => 5,
        dout_WIDTH => 10)
    port map (
        din0 => grp_fu_1519_p0,
        din1 => grp_fu_1519_p1,
        din2 => grp_fu_1519_p2,
        dout => grp_fu_1519_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    i_0_i_i_i_i_reg_526_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_0_i_i_i_i_reg_526 <= tmp_i_i_mid2_v_i_reg_1738;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                i_0_i_i_i_i_reg_526 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_i_reg_515_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_i_fu_646_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_i_reg_515 <= indvar_flatten_next_s_fu_652_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten_i_reg_515 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    j_0_i_i_i_i_reg_538_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_0_i_i_i_i_reg_538 <= j_reg_1750;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                j_0_i_i_i_i_reg_538 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter9_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                a_V_cast_i_i_reg_2069 <= a_V_cast_i_i_fu_1405_p2;
                tmp_i1_i_reg_2064 <= tmp_i1_i_fu_1399_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter10_exitcond_flatten_i_reg_1708 <= ap_reg_pp0_iter9_exitcond_flatten_i_reg_1708;
                ap_reg_pp0_iter10_j_0_i_i_i_mid2_i_reg_1724 <= ap_reg_pp0_iter9_j_0_i_i_i_mid2_i_reg_1724;
                ap_reg_pp0_iter10_tmp_i_i_mid2_v_i_reg_1738 <= ap_reg_pp0_iter9_tmp_i_i_mid2_v_i_reg_1738;
                ap_reg_pp0_iter2_exitcond52_i_i_i9_i_reg_1717 <= ap_reg_pp0_iter1_exitcond52_i_i_i9_i_reg_1717;
                ap_reg_pp0_iter2_exitcond_flatten_i_reg_1708 <= ap_reg_pp0_iter1_exitcond_flatten_i_reg_1708;
                ap_reg_pp0_iter2_i_0_i_i_i_i_reg_526 <= ap_reg_pp0_iter1_i_0_i_i_i_i_reg_526;
                ap_reg_pp0_iter2_j_0_i_i_i_mid2_i_reg_1724 <= ap_reg_pp0_iter1_j_0_i_i_i_mid2_i_reg_1724;
                ap_reg_pp0_iter2_j_reg_1750 <= ap_reg_pp0_iter1_j_reg_1750;
                ap_reg_pp0_iter2_p_v_i_reg_1775 <= p_v_i_reg_1775;
                ap_reg_pp0_iter2_tmp_80_i_0_2_i_i_reg_1763 <= ap_reg_pp0_iter1_tmp_80_i_0_2_i_i_reg_1763;
                ap_reg_pp0_iter2_tmp_80_i_0_3_i_i_reg_1802 <= tmp_80_i_0_3_i_i_reg_1802;
                ap_reg_pp0_iter2_tmp_i_i_mid2_v_i_reg_1738 <= ap_reg_pp0_iter1_tmp_i_i_mid2_v_i_reg_1738;
                ap_reg_pp0_iter3_exitcond_flatten_i_reg_1708 <= ap_reg_pp0_iter2_exitcond_flatten_i_reg_1708;
                ap_reg_pp0_iter3_j_0_i_i_i_mid2_i_reg_1724 <= ap_reg_pp0_iter2_j_0_i_i_i_mid2_i_reg_1724;
                ap_reg_pp0_iter3_j_reg_1750 <= ap_reg_pp0_iter2_j_reg_1750;
                ap_reg_pp0_iter3_tmp_80_i_0_2_i_i_reg_1763 <= ap_reg_pp0_iter2_tmp_80_i_0_2_i_i_reg_1763;
                ap_reg_pp0_iter3_tmp_80_i_0_3_i_i_reg_1802 <= ap_reg_pp0_iter2_tmp_80_i_0_3_i_i_reg_1802;
                ap_reg_pp0_iter3_tmp_i_i_mid2_v_i_reg_1738 <= ap_reg_pp0_iter2_tmp_i_i_mid2_v_i_reg_1738;
                ap_reg_pp0_iter4_exitcond_flatten_i_reg_1708 <= ap_reg_pp0_iter3_exitcond_flatten_i_reg_1708;
                ap_reg_pp0_iter4_j_0_i_i_i_mid2_i_reg_1724 <= ap_reg_pp0_iter3_j_0_i_i_i_mid2_i_reg_1724;
                ap_reg_pp0_iter4_j_reg_1750 <= ap_reg_pp0_iter3_j_reg_1750;
                ap_reg_pp0_iter4_tmp_78_i_2_i_mid2_v_1_reg_1849 <= tmp_78_i_2_i_mid2_v_1_reg_1849;
                ap_reg_pp0_iter4_tmp_78_i_3_i_mid2_v_1_reg_1856 <= tmp_78_i_3_i_mid2_v_1_reg_1856;
                ap_reg_pp0_iter4_tmp_80_i_0_2_i_i_reg_1763 <= ap_reg_pp0_iter3_tmp_80_i_0_2_i_i_reg_1763;
                ap_reg_pp0_iter4_tmp_80_i_0_3_i_i_reg_1802 <= ap_reg_pp0_iter3_tmp_80_i_0_3_i_i_reg_1802;
                ap_reg_pp0_iter4_tmp_i_i_mid2_v_i_reg_1738 <= ap_reg_pp0_iter3_tmp_i_i_mid2_v_i_reg_1738;
                ap_reg_pp0_iter5_exitcond_flatten_i_reg_1708 <= ap_reg_pp0_iter4_exitcond_flatten_i_reg_1708;
                ap_reg_pp0_iter5_j_0_i_i_i_mid2_i_reg_1724 <= ap_reg_pp0_iter4_j_0_i_i_i_mid2_i_reg_1724;
                ap_reg_pp0_iter5_j_reg_1750 <= ap_reg_pp0_iter4_j_reg_1750;
                ap_reg_pp0_iter5_tmp_78_i_3_i_mid2_v_1_reg_1856 <= ap_reg_pp0_iter4_tmp_78_i_3_i_mid2_v_1_reg_1856;
                ap_reg_pp0_iter5_tmp_80_i_0_2_i_i_reg_1763 <= ap_reg_pp0_iter4_tmp_80_i_0_2_i_i_reg_1763;
                ap_reg_pp0_iter5_tmp_80_i_0_3_i_i_reg_1802 <= ap_reg_pp0_iter4_tmp_80_i_0_3_i_i_reg_1802;
                ap_reg_pp0_iter5_tmp_i_i_mid2_v_i_reg_1738 <= ap_reg_pp0_iter4_tmp_i_i_mid2_v_i_reg_1738;
                ap_reg_pp0_iter6_exitcond_flatten_i_reg_1708 <= ap_reg_pp0_iter5_exitcond_flatten_i_reg_1708;
                ap_reg_pp0_iter6_j_0_i_i_i_mid2_i_reg_1724 <= ap_reg_pp0_iter5_j_0_i_i_i_mid2_i_reg_1724;
                ap_reg_pp0_iter6_tmp_78_i_3_i_mid2_v_1_reg_1856 <= ap_reg_pp0_iter5_tmp_78_i_3_i_mid2_v_1_reg_1856;
                ap_reg_pp0_iter6_tmp_80_i_0_3_i_i_reg_1802 <= ap_reg_pp0_iter5_tmp_80_i_0_3_i_i_reg_1802;
                ap_reg_pp0_iter6_tmp_i_i_mid2_v_i_reg_1738 <= ap_reg_pp0_iter5_tmp_i_i_mid2_v_i_reg_1738;
                ap_reg_pp0_iter7_exitcond_flatten_i_reg_1708 <= ap_reg_pp0_iter6_exitcond_flatten_i_reg_1708;
                ap_reg_pp0_iter7_j_0_i_i_i_mid2_i_reg_1724 <= ap_reg_pp0_iter6_j_0_i_i_i_mid2_i_reg_1724;
                ap_reg_pp0_iter7_tmp_i_i_mid2_v_i_reg_1738 <= ap_reg_pp0_iter6_tmp_i_i_mid2_v_i_reg_1738;
                ap_reg_pp0_iter8_exitcond_flatten_i_reg_1708 <= ap_reg_pp0_iter7_exitcond_flatten_i_reg_1708;
                ap_reg_pp0_iter8_j_0_i_i_i_mid2_i_reg_1724 <= ap_reg_pp0_iter7_j_0_i_i_i_mid2_i_reg_1724;
                ap_reg_pp0_iter8_tmp_i_i_mid2_v_i_reg_1738 <= ap_reg_pp0_iter7_tmp_i_i_mid2_v_i_reg_1738;
                ap_reg_pp0_iter9_exitcond_flatten_i_reg_1708 <= ap_reg_pp0_iter8_exitcond_flatten_i_reg_1708;
                ap_reg_pp0_iter9_j_0_i_i_i_mid2_i_reg_1724 <= ap_reg_pp0_iter8_j_0_i_i_i_mid2_i_reg_1724;
                ap_reg_pp0_iter9_tmp_i_i_mid2_v_i_reg_1738 <= ap_reg_pp0_iter8_tmp_i_i_mid2_v_i_reg_1738;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_reg_pp0_iter1_exitcond52_i_i_i9_i_reg_1717 <= exitcond52_i_i_i9_i_reg_1717;
                ap_reg_pp0_iter1_exitcond_flatten_i_reg_1708 <= exitcond_flatten_i_reg_1708;
                ap_reg_pp0_iter1_i_0_i_i_i_i_reg_526 <= i_0_i_i_i_i_reg_526;
                ap_reg_pp0_iter1_j_0_i_i_i_mid2_i_reg_1724 <= j_0_i_i_i_mid2_i_reg_1724;
                ap_reg_pp0_iter1_j_reg_1750 <= j_reg_1750;
                ap_reg_pp0_iter1_tmp_80_i_0_2_i_i_reg_1763 <= tmp_80_i_0_2_i_i_reg_1763;
                ap_reg_pp0_iter1_tmp_i_i_mid2_v_i_reg_1738 <= tmp_i_i_mid2_v_i_reg_1738;
                exitcond_flatten_i_reg_1708 <= exitcond_flatten_i_fu_646_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_i_fu_646_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond52_i_i_i9_i_reg_1717 <= exitcond52_i_i_i9_i_fu_658_p2;
                i2_i_reg_1733 <= i2_i_fu_672_p2;
                j_0_i_i_i_mid2_i_reg_1724 <= j_0_i_i_i_mid2_i_fu_664_p3;
                tmp_80_i_0_2_i_i_reg_1763 <= tmp_80_i_0_2_i_i_fu_718_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                image_V_0_load_10_reg_1964 <= image_V_0_q10;
                image_V_0_load_9_reg_1959 <= image_V_0_q9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                image_V_0_load_11_reg_1994 <= image_V_0_q11;
                image_V_0_load_12_reg_1999 <= image_V_0_q12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                image_V_0_load_13_reg_2024 <= image_V_0_q13;
                image_V_0_load_14_reg_2029 <= image_V_0_q14;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter7_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then
                image_V_0_load_15_reg_2049 <= image_V_0_q15;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                image_V_0_load_1_reg_1792 <= image_V_0_q1;
                image_V_0_load_2_reg_1797 <= image_V_0_q2;
                image_V_0_load_reg_1787 <= image_V_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                image_V_0_load_3_reg_1839 <= image_V_0_q3;
                image_V_0_load_4_reg_1844 <= image_V_0_q4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                image_V_0_load_5_reg_1889 <= image_V_0_q5;
                image_V_0_load_6_reg_1894 <= image_V_0_q6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                image_V_0_load_7_reg_1924 <= image_V_0_q7;
                image_V_0_load_8_reg_1929 <= image_V_0_q8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_i_fu_646_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                j_reg_1750 <= j_fu_699_p2;
                tmp_i_i_mid2_v_i_reg_1738 <= tmp_i_i_mid2_v_i_fu_678_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_24_i_0_1_i_s_reg_1824 <= p_Val2_24_i_0_1_i_s_fu_1444_p2;
                p_Val2_24_i_0_2_i_s_reg_1834 <= p_Val2_24_i_0_2_i_s_fu_1449_p2;
                tmp_88_reg_1814 <= p_Val2_24_i_0_i_i_fu_1438_p2(38 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_24_i_0_3_i_s_reg_1874 <= p_Val2_24_i_0_3_i_s_fu_1454_p2;
                p_Val2_24_i_1_i_i_reg_1884 <= p_Val2_24_i_1_i_i_fu_1459_p2;
                tmp_371_i_reg_1879 <= p_Val2_25_i_0_2_i_s_fu_897_p2(43 downto 20);
                tmp_78_i_2_i_mid2_v_1_reg_1849 <= tmp_78_i_2_i_mid2_v_1_fu_825_p2;
                tmp_78_i_3_i_mid2_v_1_reg_1856 <= tmp_78_i_3_i_mid2_v_1_fu_838_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_24_i_1_1_i_s_reg_1909 <= p_Val2_24_i_1_1_i_s_fu_1464_p2;
                p_Val2_24_i_1_2_i_s_reg_1919 <= p_Val2_24_i_1_2_i_s_fu_1469_p2;
                tmp_373_i_reg_1914 <= p_Val2_25_i_1_i_i_fu_989_p2(43 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_24_i_1_3_i_s_reg_1944 <= p_Val2_24_i_1_3_i_s_fu_1474_p2;
                p_Val2_24_i_2_i_i_reg_1954 <= p_Val2_24_i_2_i_i_fu_1479_p2;
                tmp_375_i_reg_1949 <= p_Val2_25_i_1_2_i_s_fu_1070_p2(43 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_24_i_2_1_i_s_reg_1979 <= p_Val2_24_i_2_1_i_s_fu_1484_p2;
                p_Val2_24_i_2_2_i_s_reg_1989 <= p_Val2_24_i_2_2_i_s_fu_1489_p2;
                tmp_377_i_reg_1984 <= p_Val2_25_i_2_i_i_fu_1151_p2(43 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_24_i_2_3_i_s_reg_2009 <= p_Val2_24_i_2_3_i_s_fu_1494_p2;
                p_Val2_24_i_3_i_i_reg_2019 <= p_Val2_24_i_3_i_i_fu_1499_p2;
                tmp_379_i_reg_2014 <= p_Val2_25_i_2_2_i_s_fu_1221_p2(43 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter7_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_24_i_3_1_i_s_reg_2034 <= p_Val2_24_i_3_1_i_s_fu_1504_p2;
                p_Val2_24_i_3_2_i_s_reg_2044 <= p_Val2_24_i_3_2_i_s_fu_1509_p2;
                tmp_381_i_reg_2039 <= p_Val2_25_i_3_i_i_fu_1280_p2(43 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter8_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_24_i_3_3_i_s_reg_2054 <= p_Val2_24_i_3_3_i_s_fu_1514_p2;
                tmp_383_i_reg_2059 <= p_Val2_25_i_3_2_i_s_fu_1339_p2(43 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                p_Val2_cast_i_i_reg_1698 <= p_Val2_cast_i_i_fu_638_p1;
                tmp_84_i_0_1_cast_i_s_reg_1623 <= tmp_84_i_0_1_cast_i_s_fu_578_p1;
                tmp_84_i_0_2_cast_i_s_reg_1628 <= tmp_84_i_0_2_cast_i_s_fu_582_p1;
                tmp_84_i_0_3_cast_i_s_reg_1633 <= tmp_84_i_0_3_cast_i_s_fu_586_p1;
                tmp_84_i_0_cast_i_ca_reg_1618 <= tmp_84_i_0_cast_i_ca_fu_574_p1;
                tmp_84_i_1_1_cast_i_s_reg_1643 <= tmp_84_i_1_1_cast_i_s_fu_594_p1;
                tmp_84_i_1_2_cast_i_s_reg_1648 <= tmp_84_i_1_2_cast_i_s_fu_598_p1;
                tmp_84_i_1_3_cast_i_s_reg_1653 <= tmp_84_i_1_3_cast_i_s_fu_602_p1;
                tmp_84_i_1_cast_i_ca_reg_1638 <= tmp_84_i_1_cast_i_ca_fu_590_p1;
                tmp_84_i_2_1_cast_i_s_reg_1663 <= tmp_84_i_2_1_cast_i_s_fu_610_p1;
                tmp_84_i_2_2_cast_i_s_reg_1668 <= tmp_84_i_2_2_cast_i_s_fu_614_p1;
                tmp_84_i_2_3_cast_i_s_reg_1673 <= tmp_84_i_2_3_cast_i_s_fu_618_p1;
                tmp_84_i_2_cast_i_ca_reg_1658 <= tmp_84_i_2_cast_i_ca_fu_606_p1;
                tmp_84_i_3_1_cast_i_s_reg_1683 <= tmp_84_i_3_1_cast_i_s_fu_626_p1;
                tmp_84_i_3_2_cast_i_s_reg_1688 <= tmp_84_i_3_2_cast_i_s_fu_630_p1;
                tmp_84_i_3_3_cast_i_s_reg_1693 <= tmp_84_i_3_3_cast_i_s_fu_634_p1;
                tmp_84_i_3_cast_i_ca_reg_1678 <= tmp_84_i_3_cast_i_ca_fu_622_p1;
                tmp_i_reg_1703 <= tmp_i_fu_642_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_v_i_reg_1775 <= p_v_i_fu_743_p3;
                tmp_80_i_0_3_i_i_reg_1802 <= tmp_80_i_0_3_i_i_fu_761_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_reg_1528 <= tmp_fu_549_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, exitcond_flatten_i_fu_646_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten_i_fu_646_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten_i_fu_646_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    a_V_cast_i_i_fu_1405_p2 <= std_logic_vector(unsigned(tmp_1_i_fu_1384_p4) + unsigned(tmp_i_reg_1703));
    agg_result_V_i_i_fu_1427_p3 <= 
        a_V_cast_i_i_reg_2069 when (tmp_i1_i_reg_2064(0) = '1') else 
        ap_const_lv23_0;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state15 <= ap_CS_fsm(3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_flatten_i_fu_646_p2)
    begin
        if ((exitcond_flatten_i_fu_646_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_0_i_i_i_i_phi_fu_530_p4_assign_proc : process(i_0_i_i_i_i_reg_526, ap_CS_fsm_pp0_stage0, exitcond_flatten_i_reg_1708, tmp_i_i_mid2_v_i_reg_1738, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_0_i_i_i_i_phi_fu_530_p4 <= tmp_i_i_mid2_v_i_reg_1738;
        else 
            ap_phi_mux_i_0_i_i_i_i_phi_fu_530_p4 <= i_0_i_i_i_i_reg_526;
        end if; 
    end process;


    ap_phi_mux_j_0_i_i_i_i_phi_fu_542_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, j_0_i_i_i_i_reg_538, exitcond_flatten_i_reg_1708, j_reg_1750, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_j_0_i_i_i_i_phi_fu_542_p4 <= j_reg_1750;
        else 
            ap_phi_mux_j_0_i_i_i_i_phi_fu_542_p4 <= j_0_i_i_i_i_reg_538;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_bias_V_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_bias_V_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_bias_V_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_11_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_11_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_11_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_13_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_13_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_13_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_15_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_15_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_15_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_17_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_17_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_17_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_19_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_19_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_19_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_1_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_1_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_1_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_21_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_21_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_21_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_23_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_23_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_23_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_25_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_25_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_25_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_27_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_27_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_27_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_29_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_29_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_29_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_31_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_31_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_31_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_3_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_3_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_3_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_5_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_5_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_5_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_7_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_7_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_7_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_layer1_weights_9_address0 <= tmp_i_i_fu_553_p1(3 - 1 downto 0);

    conv_layer1_weights_9_ce0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_layer1_weights_9_ce0 <= ap_const_logic_1;
        else 
            conv_layer1_weights_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond52_i_i_i9_i_fu_658_p2 <= "1" when (ap_phi_mux_j_0_i_i_i_i_phi_fu_542_p4 = ap_const_lv5_1D) else "0";
    exitcond_flatten_i_fu_646_p2 <= "1" when (indvar_flatten_i_reg_515 = ap_const_lv10_349) else "0";
    grp_fu_1519_p0 <= grp_fu_1519_p00(5 - 1 downto 0);
    grp_fu_1519_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter10_tmp_i_i_mid2_v_i_reg_1738),10));
    grp_fu_1519_p1 <= ap_const_lv10_1D(6 - 1 downto 0);
    grp_fu_1519_p2 <= grp_fu_1519_p20(5 - 1 downto 0);
    grp_fu_1519_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter10_j_0_i_i_i_mid2_i_reg_1724),10));
    i2_i_fu_672_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_i_i_i_i_phi_fu_530_p4) + unsigned(ap_const_lv5_1));
    i_mid1_i_fu_737_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i_reg_526) + unsigned(ap_const_lv5_2));
    image_V_0_address0 <= tmp_345_i_fu_694_p1(10 - 1 downto 0);
    image_V_0_address1 <= tmp_351_i_fu_713_p1(10 - 1 downto 0);
    image_V_0_address10 <= tmp_361_i_fu_947_p1(10 - 1 downto 0);
    image_V_0_address11 <= tmp_368_i_fu_1028_p1(10 - 1 downto 0);
    image_V_0_address12 <= tmp_350_i_fu_1017_p1(10 - 1 downto 0);
    image_V_0_address13 <= tmp_356_i_fu_1098_p1(10 - 1 downto 0);
    image_V_0_address14 <= tmp_363_i_fu_1109_p1(10 - 1 downto 0);
    image_V_0_address15 <= tmp_370_i_fu_1179_p1(10 - 1 downto 0);
    image_V_0_address2 <= tmp_358_i_fu_732_p1(10 - 1 downto 0);
    image_V_0_address3 <= tmp_365_i_fu_773_p1(10 - 1 downto 0);
    image_V_0_address4 <= tmp_346_i_fu_756_p1(10 - 1 downto 0);
    image_V_0_address5 <= tmp_352_i_fu_796_p1(10 - 1 downto 0);
    image_V_0_address6 <= tmp_359_i_fu_810_p1(10 - 1 downto 0);
    image_V_0_address7 <= tmp_366_i_fu_909_p1(10 - 1 downto 0);
    image_V_0_address8 <= tmp_348_i_fu_851_p1(10 - 1 downto 0);
    image_V_0_address9 <= tmp_354_i_fu_936_p1(10 - 1 downto 0);

    image_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            image_V_0_ce0 <= ap_const_logic_1;
        else 
            image_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            image_V_0_ce1 <= ap_const_logic_1;
        else 
            image_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce10_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            image_V_0_ce10 <= ap_const_logic_1;
        else 
            image_V_0_ce10 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce11_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            image_V_0_ce11 <= ap_const_logic_1;
        else 
            image_V_0_ce11 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce12_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            image_V_0_ce12 <= ap_const_logic_1;
        else 
            image_V_0_ce12 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce13_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            image_V_0_ce13 <= ap_const_logic_1;
        else 
            image_V_0_ce13 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce14_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            image_V_0_ce14 <= ap_const_logic_1;
        else 
            image_V_0_ce14 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce15_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            image_V_0_ce15 <= ap_const_logic_1;
        else 
            image_V_0_ce15 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            image_V_0_ce2 <= ap_const_logic_1;
        else 
            image_V_0_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            image_V_0_ce3 <= ap_const_logic_1;
        else 
            image_V_0_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            image_V_0_ce4 <= ap_const_logic_1;
        else 
            image_V_0_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce5_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_V_0_ce5 <= ap_const_logic_1;
        else 
            image_V_0_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce6_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            image_V_0_ce6 <= ap_const_logic_1;
        else 
            image_V_0_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce7_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            image_V_0_ce7 <= ap_const_logic_1;
        else 
            image_V_0_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce8_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            image_V_0_ce8 <= ap_const_logic_1;
        else 
            image_V_0_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    image_V_0_ce9_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            image_V_0_ce9 <= ap_const_logic_1;
        else 
            image_V_0_ce9 <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_s_fu_652_p2 <= std_logic_vector(unsigned(indvar_flatten_i_reg_515) + unsigned(ap_const_lv10_1));
    j_0_i_i_i_mid2_i_fu_664_p3 <= 
        ap_const_lv5_0 when (exitcond52_i_i_i9_i_fu_658_p2(0) = '1') else 
        ap_phi_mux_j_0_i_i_i_i_phi_fu_542_p4;
    j_fu_699_p2 <= std_logic_vector(unsigned(j_0_i_i_i_mid2_i_fu_664_p3) + unsigned(ap_const_lv5_1));
    output_V_address0 <= tmp_344_i_fu_1422_p1(13 - 1 downto 0);

    output_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            output_V_ce0 <= ap_const_logic_1;
        else 
            output_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_V_d0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(agg_result_V_i_i_fu_1427_p3),24));

    output_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_reg_pp0_iter10_exitcond_flatten_i_reg_1708, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_reg_pp0_iter10_exitcond_flatten_i_reg_1708 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            output_V_we0 <= ap_const_logic_1;
        else 
            output_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Val2_22_i_i_i_fu_1394_p2 <= std_logic_vector(signed(p_Val2_cast_i_i_reg_1698) + signed(sum_V_i_3_3_i_i_fu_1374_p4));
        p_Val2_24_i_0_1_i_1_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_0_1_i_s_reg_1824),44));

    p_Val2_24_i_0_1_i_s_fu_1444_p0 <= tmp_84_i_0_1_cast_i_s_reg_1623(19 - 1 downto 0);
    p_Val2_24_i_0_1_i_s_fu_1444_p1 <= p_Val2_24_i_0_1_i_s_fu_1444_p10(20 - 1 downto 0);
    p_Val2_24_i_0_1_i_s_fu_1444_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_1_reg_1792),39));
        p_Val2_24_i_0_2_i_1_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_0_2_i_s_reg_1834),44));

    p_Val2_24_i_0_2_i_s_fu_1449_p0 <= tmp_84_i_0_2_cast_i_s_reg_1628(19 - 1 downto 0);
    p_Val2_24_i_0_2_i_s_fu_1449_p1 <= p_Val2_24_i_0_2_i_s_fu_1449_p10(20 - 1 downto 0);
    p_Val2_24_i_0_2_i_s_fu_1449_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_2_reg_1797),39));
        p_Val2_24_i_0_3_i_1_fu_952_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_0_3_i_s_reg_1874),44));

    p_Val2_24_i_0_3_i_s_fu_1454_p0 <= tmp_84_i_0_3_cast_i_s_reg_1633(19 - 1 downto 0);
    p_Val2_24_i_0_3_i_s_fu_1454_p1 <= p_Val2_24_i_0_3_i_s_fu_1454_p10(20 - 1 downto 0);
    p_Val2_24_i_0_3_i_s_fu_1454_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_3_reg_1839),39));
    p_Val2_24_i_0_i_i_fu_1438_p0 <= tmp_84_i_0_cast_i_ca_reg_1618(19 - 1 downto 0);
    p_Val2_24_i_0_i_i_fu_1438_p1 <= p_Val2_24_i_0_i_i_fu_1438_p10(20 - 1 downto 0);
    p_Val2_24_i_0_i_i_fu_1438_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_reg_1787),39));
        p_Val2_24_i_1_1_i_1_fu_1033_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_1_1_i_s_reg_1909),44));

    p_Val2_24_i_1_1_i_s_fu_1464_p0 <= tmp_84_i_1_1_cast_i_s_reg_1643(19 - 1 downto 0);
    p_Val2_24_i_1_1_i_s_fu_1464_p1 <= p_Val2_24_i_1_1_i_s_fu_1464_p10(20 - 1 downto 0);
    p_Val2_24_i_1_1_i_s_fu_1464_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_5_reg_1889),39));
        p_Val2_24_i_1_2_i_1_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_1_2_i_s_reg_1919),44));

    p_Val2_24_i_1_2_i_s_fu_1469_p0 <= tmp_84_i_1_2_cast_i_s_reg_1648(19 - 1 downto 0);
    p_Val2_24_i_1_2_i_s_fu_1469_p1 <= p_Val2_24_i_1_2_i_s_fu_1469_p10(20 - 1 downto 0);
    p_Val2_24_i_1_2_i_s_fu_1469_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_6_reg_1894),39));
        p_Val2_24_i_1_3_i_1_fu_1114_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_1_3_i_s_reg_1944),44));

    p_Val2_24_i_1_3_i_s_fu_1474_p0 <= tmp_84_i_1_3_cast_i_s_reg_1653(19 - 1 downto 0);
    p_Val2_24_i_1_3_i_s_fu_1474_p1 <= p_Val2_24_i_1_3_i_s_fu_1474_p10(20 - 1 downto 0);
    p_Val2_24_i_1_3_i_s_fu_1474_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_7_reg_1924),39));
        p_Val2_24_i_1_i_ca_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_1_i_i_reg_1884),44));

    p_Val2_24_i_1_i_i_fu_1459_p0 <= tmp_84_i_1_cast_i_ca_reg_1638(19 - 1 downto 0);
    p_Val2_24_i_1_i_i_fu_1459_p1 <= p_Val2_24_i_1_i_i_fu_1459_p10(20 - 1 downto 0);
    p_Val2_24_i_1_i_i_fu_1459_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_4_reg_1844),39));
        p_Val2_24_i_2_1_i_1_fu_1184_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_2_1_i_s_reg_1979),44));

    p_Val2_24_i_2_1_i_s_fu_1484_p0 <= tmp_84_i_2_1_cast_i_s_reg_1663(19 - 1 downto 0);
    p_Val2_24_i_2_1_i_s_fu_1484_p1 <= p_Val2_24_i_2_1_i_s_fu_1484_p10(20 - 1 downto 0);
    p_Val2_24_i_2_1_i_s_fu_1484_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_9_reg_1959),39));
        p_Val2_24_i_2_2_i_1_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_2_2_i_s_reg_1989),44));

    p_Val2_24_i_2_2_i_s_fu_1489_p0 <= tmp_84_i_2_2_cast_i_s_reg_1668(19 - 1 downto 0);
    p_Val2_24_i_2_2_i_s_fu_1489_p1 <= p_Val2_24_i_2_2_i_s_fu_1489_p10(20 - 1 downto 0);
    p_Val2_24_i_2_2_i_s_fu_1489_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_10_reg_1964),39));
        p_Val2_24_i_2_3_i_1_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_2_3_i_s_reg_2009),44));

    p_Val2_24_i_2_3_i_s_fu_1494_p0 <= tmp_84_i_2_3_cast_i_s_reg_1673(19 - 1 downto 0);
    p_Val2_24_i_2_3_i_s_fu_1494_p1 <= p_Val2_24_i_2_3_i_s_fu_1494_p10(20 - 1 downto 0);
    p_Val2_24_i_2_3_i_s_fu_1494_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_11_reg_1994),39));
        p_Val2_24_i_2_i_ca_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_2_i_i_reg_1954),44));

    p_Val2_24_i_2_i_i_fu_1479_p0 <= tmp_84_i_2_cast_i_ca_reg_1658(19 - 1 downto 0);
    p_Val2_24_i_2_i_i_fu_1479_p1 <= p_Val2_24_i_2_i_i_fu_1479_p10(20 - 1 downto 0);
    p_Val2_24_i_2_i_i_fu_1479_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_8_reg_1929),39));
        p_Val2_24_i_3_1_i_1_fu_1302_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_3_1_i_s_reg_2034),44));

    p_Val2_24_i_3_1_i_s_fu_1504_p0 <= tmp_84_i_3_1_cast_i_s_reg_1683(19 - 1 downto 0);
    p_Val2_24_i_3_1_i_s_fu_1504_p1 <= p_Val2_24_i_3_1_i_s_fu_1504_p10(20 - 1 downto 0);
    p_Val2_24_i_3_1_i_s_fu_1504_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_13_reg_2024),39));
        p_Val2_24_i_3_2_i_1_fu_1318_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_3_2_i_s_reg_2044),44));

    p_Val2_24_i_3_2_i_s_fu_1509_p0 <= tmp_84_i_3_2_cast_i_s_reg_1688(19 - 1 downto 0);
    p_Val2_24_i_3_2_i_s_fu_1509_p1 <= p_Val2_24_i_3_2_i_s_fu_1509_p10(20 - 1 downto 0);
    p_Val2_24_i_3_2_i_s_fu_1509_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_14_reg_2029),39));
        p_Val2_24_i_3_3_i_1_fu_1358_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_3_3_i_s_reg_2054),44));

    p_Val2_24_i_3_3_i_s_fu_1514_p0 <= tmp_84_i_3_3_cast_i_s_reg_1693(19 - 1 downto 0);
    p_Val2_24_i_3_3_i_s_fu_1514_p1 <= p_Val2_24_i_3_3_i_s_fu_1514_p10(20 - 1 downto 0);
    p_Val2_24_i_3_3_i_s_fu_1514_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_15_reg_2049),39));
        p_Val2_24_i_3_i_ca_fu_1259_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_i_3_i_i_reg_2019),44));

    p_Val2_24_i_3_i_i_fu_1499_p0 <= tmp_84_i_3_cast_i_ca_reg_1678(19 - 1 downto 0);
    p_Val2_24_i_3_i_i_fu_1499_p1 <= p_Val2_24_i_3_i_i_fu_1499_p10(20 - 1 downto 0);
    p_Val2_24_i_3_i_i_fu_1499_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(image_V_0_load_12_reg_1999),39));
    p_Val2_25_i_0_1_i_s_fu_870_p2 <= std_logic_vector(signed(p_Val2_24_i_0_1_i_1_fu_856_p1) + signed(tmp_86_i_0_1_i_i_fu_866_p1));
    p_Val2_25_i_0_2_i_s_fu_897_p2 <= std_logic_vector(signed(p_Val2_24_i_0_2_i_1_fu_876_p1) + signed(tmp_86_i_0_2_i_i_fu_889_p3));
    p_Val2_25_i_0_3_i_s_fu_962_p2 <= std_logic_vector(signed(p_Val2_24_i_0_3_i_1_fu_952_p1) + signed(tmp_86_i_0_3_i_i_fu_955_p3));
    p_Val2_25_i_1_1_i_s_fu_1043_p2 <= std_logic_vector(signed(p_Val2_24_i_1_1_i_1_fu_1033_p1) + signed(tmp_86_i_1_1_i_i_fu_1036_p3));
    p_Val2_25_i_1_2_i_s_fu_1070_p2 <= std_logic_vector(signed(p_Val2_24_i_1_2_i_1_fu_1049_p1) + signed(tmp_86_i_1_2_i_i_fu_1062_p3));
    p_Val2_25_i_1_3_i_s_fu_1124_p2 <= std_logic_vector(signed(p_Val2_24_i_1_3_i_1_fu_1114_p1) + signed(tmp_86_i_1_3_i_i_fu_1117_p3));
    p_Val2_25_i_1_i_i_fu_989_p2 <= std_logic_vector(signed(p_Val2_24_i_1_i_ca_fu_968_p1) + signed(tmp_86_i_1_i_i_fu_981_p3));
    p_Val2_25_i_2_1_i_s_fu_1194_p2 <= std_logic_vector(signed(p_Val2_24_i_2_1_i_1_fu_1184_p1) + signed(tmp_86_i_2_1_i_i_fu_1187_p3));
    p_Val2_25_i_2_2_i_s_fu_1221_p2 <= std_logic_vector(signed(p_Val2_24_i_2_2_i_1_fu_1200_p1) + signed(tmp_86_i_2_2_i_i_fu_1213_p3));
    p_Val2_25_i_2_3_i_s_fu_1253_p2 <= std_logic_vector(signed(p_Val2_24_i_2_3_i_1_fu_1243_p1) + signed(tmp_86_i_2_3_i_i_fu_1246_p3));
    p_Val2_25_i_2_i_i_fu_1151_p2 <= std_logic_vector(signed(p_Val2_24_i_2_i_ca_fu_1130_p1) + signed(tmp_86_i_2_i_i_fu_1143_p3));
    p_Val2_25_i_3_1_i_s_fu_1312_p2 <= std_logic_vector(signed(p_Val2_24_i_3_1_i_1_fu_1302_p1) + signed(tmp_86_i_3_1_i_i_fu_1305_p3));
    p_Val2_25_i_3_2_i_s_fu_1339_p2 <= std_logic_vector(signed(p_Val2_24_i_3_2_i_1_fu_1318_p1) + signed(tmp_86_i_3_2_i_i_fu_1331_p3));
    p_Val2_25_i_3_3_i_s_fu_1368_p2 <= std_logic_vector(signed(p_Val2_24_i_3_3_i_1_fu_1358_p1) + signed(tmp_86_i_3_3_i_i_fu_1361_p3));
    p_Val2_25_i_3_i_i_fu_1280_p2 <= std_logic_vector(signed(p_Val2_24_i_3_i_ca_fu_1259_p1) + signed(tmp_86_i_3_i_i_fu_1272_p3));
        p_Val2_cast_i_i_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_bias_V_q0),24));

    p_v_i_fu_743_p3 <= 
        i_mid1_i_fu_737_p2 when (exitcond52_i_i_i9_i_reg_1717(0) = '1') else 
        i2_i_reg_1733;
    sum_V_i_3_3_i_i_fu_1374_p4 <= p_Val2_25_i_3_3_i_s_fu_1368_p2(43 downto 20);
    tmp_1_i_fu_1384_p4 <= p_Val2_25_i_3_3_i_s_fu_1368_p2(42 downto 20);
    tmp_344_i_fu_1422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_85_fu_1416_p3),64));
    tmp_345_i_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_86_fu_686_p3),64));
    tmp_346_i_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_87_fu_749_p3),64));
    tmp_347_i_fu_844_p3 <= (tmp_78_i_2_i_mid2_v_1_fu_825_p2 & ap_reg_pp0_iter2_j_0_i_i_i_mid2_i_reg_1724);
    tmp_348_i_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_347_i_fu_844_p3),64));
    tmp_349_i_fu_1011_p3 <= (ap_reg_pp0_iter4_tmp_78_i_3_i_mid2_v_1_reg_1856 & ap_reg_pp0_iter4_j_0_i_i_i_mid2_i_reg_1724);
    tmp_350_i_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_349_i_fu_1011_p3),64));
    tmp_351_i_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_89_fu_705_p3),64));
    tmp_352_i_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_90_fu_790_p3),64));
    tmp_353_i_fu_930_p3 <= (tmp_78_i_2_i_mid2_v_1_reg_1849 & ap_reg_pp0_iter3_j_reg_1750);
    tmp_354_i_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_353_i_fu_930_p3),64));
    tmp_355_i_fu_1092_p3 <= (ap_reg_pp0_iter5_tmp_78_i_3_i_mid2_v_1_reg_1856 & ap_reg_pp0_iter5_j_reg_1750);
    tmp_356_i_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_355_i_fu_1092_p3),64));
    tmp_358_i_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_92_fu_724_p3),64));
    tmp_359_i_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_93_fu_804_p3),64));
    tmp_360_i_fu_941_p3 <= (tmp_78_i_2_i_mid2_v_1_reg_1849 & ap_reg_pp0_iter3_tmp_80_i_0_2_i_i_reg_1763);
    tmp_361_i_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_360_i_fu_941_p3),64));
    tmp_362_i_fu_1103_p3 <= (ap_reg_pp0_iter5_tmp_78_i_3_i_mid2_v_1_reg_1856 & ap_reg_pp0_iter5_tmp_80_i_0_2_i_i_reg_1763);
    tmp_363_i_fu_1109_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_362_i_fu_1103_p3),64));
    tmp_364_i_fu_879_p4 <= p_Val2_25_i_0_1_i_s_fu_870_p2(43 downto 20);
    tmp_365_i_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_94_fu_766_p3),64));
    tmp_366_i_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_95_fu_903_p3),64));
    tmp_367_i_fu_1022_p3 <= (ap_reg_pp0_iter4_tmp_78_i_2_i_mid2_v_1_reg_1849 & ap_reg_pp0_iter4_tmp_80_i_0_3_i_i_reg_1802);
    tmp_368_i_fu_1028_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_367_i_fu_1022_p3),64));
    tmp_369_i_fu_1173_p3 <= (ap_reg_pp0_iter6_tmp_78_i_3_i_mid2_v_1_reg_1856 & ap_reg_pp0_iter6_tmp_80_i_0_3_i_i_reg_1802);
    tmp_370_i_fu_1179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_369_i_fu_1173_p3),64));
    tmp_372_i_fu_971_p4 <= p_Val2_25_i_0_3_i_s_fu_962_p2(43 downto 20);
    tmp_374_i_fu_1052_p4 <= p_Val2_25_i_1_1_i_s_fu_1043_p2(43 downto 20);
    tmp_376_i_fu_1133_p4 <= p_Val2_25_i_1_3_i_s_fu_1124_p2(43 downto 20);
    tmp_378_i_fu_1203_p4 <= p_Val2_25_i_2_1_i_s_fu_1194_p2(43 downto 20);
    tmp_380_i_fu_1262_p4 <= p_Val2_25_i_2_3_i_s_fu_1253_p2(43 downto 20);
    tmp_382_i_fu_1321_p4 <= p_Val2_25_i_3_1_i_s_fu_1312_p2(43 downto 20);
    tmp_78_i_2_i_mid2_v_1_fu_825_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter2_i_0_i_i_i_i_reg_526) + unsigned(tmp_78_i_2_i_mid2_v_s_fu_818_p3));
    tmp_78_i_2_i_mid2_v_s_fu_818_p3 <= 
        ap_const_lv5_3 when (ap_reg_pp0_iter2_exitcond52_i_i_i9_i_reg_1717(0) = '1') else 
        ap_const_lv5_2;
    tmp_78_i_3_i_mid2_v_1_fu_838_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter2_i_0_i_i_i_i_reg_526) + unsigned(tmp_78_i_3_i_mid2_v_s_fu_831_p3));
    tmp_78_i_3_i_mid2_v_s_fu_831_p3 <= 
        ap_const_lv5_4 when (ap_reg_pp0_iter2_exitcond52_i_i_i9_i_reg_1717(0) = '1') else 
        ap_const_lv5_3;
    tmp_80_i_0_2_i_i_fu_718_p2 <= std_logic_vector(unsigned(j_0_i_i_i_mid2_i_fu_664_p3) + unsigned(ap_const_lv5_2));
    tmp_80_i_0_3_i_i_fu_761_p2 <= std_logic_vector(unsigned(j_0_i_i_i_mid2_i_reg_1724) + unsigned(ap_const_lv5_3));
        tmp_84_i_0_1_cast_i_s_fu_578_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_29_q0),39));

        tmp_84_i_0_2_cast_i_s_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_27_q0),39));

        tmp_84_i_0_3_cast_i_s_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_25_q0),39));

        tmp_84_i_0_cast_i_ca_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_31_q0),39));

        tmp_84_i_1_1_cast_i_s_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_21_q0),39));

        tmp_84_i_1_2_cast_i_s_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_19_q0),39));

        tmp_84_i_1_3_cast_i_s_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_17_q0),39));

        tmp_84_i_1_cast_i_ca_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_23_q0),39));

        tmp_84_i_2_1_cast_i_s_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_13_q0),39));

        tmp_84_i_2_2_cast_i_s_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_11_q0),39));

        tmp_84_i_2_3_cast_i_s_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_9_q0),39));

        tmp_84_i_2_cast_i_ca_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_15_q0),39));

        tmp_84_i_3_1_cast_i_s_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_5_q0),39));

        tmp_84_i_3_2_cast_i_s_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_3_q0),39));

        tmp_84_i_3_3_cast_i_s_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_1_q0),39));

        tmp_84_i_3_cast_i_ca_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_weights_7_q0),39));

    tmp_85_fu_1416_p3 <= (grp_fu_1519_p3 & tmp_reg_1528);
    tmp_86_fu_686_p3 <= (tmp_i_i_mid2_v_i_fu_678_p3 & j_0_i_i_i_mid2_i_fu_664_p3);
        tmp_86_i_0_1_i_i_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_91_fu_859_p3),44));

    tmp_86_i_0_2_i_i_fu_889_p3 <= (tmp_364_i_fu_879_p4 & ap_const_lv20_0);
    tmp_86_i_0_3_i_i_fu_955_p3 <= (tmp_371_i_reg_1879 & ap_const_lv20_0);
    tmp_86_i_1_1_i_i_fu_1036_p3 <= (tmp_373_i_reg_1914 & ap_const_lv20_0);
    tmp_86_i_1_2_i_i_fu_1062_p3 <= (tmp_374_i_fu_1052_p4 & ap_const_lv20_0);
    tmp_86_i_1_3_i_i_fu_1117_p3 <= (tmp_375_i_reg_1949 & ap_const_lv20_0);
    tmp_86_i_1_i_i_fu_981_p3 <= (tmp_372_i_fu_971_p4 & ap_const_lv20_0);
    tmp_86_i_2_1_i_i_fu_1187_p3 <= (tmp_377_i_reg_1984 & ap_const_lv20_0);
    tmp_86_i_2_2_i_i_fu_1213_p3 <= (tmp_378_i_fu_1203_p4 & ap_const_lv20_0);
    tmp_86_i_2_3_i_i_fu_1246_p3 <= (tmp_379_i_reg_2014 & ap_const_lv20_0);
    tmp_86_i_2_i_i_fu_1143_p3 <= (tmp_376_i_fu_1133_p4 & ap_const_lv20_0);
    tmp_86_i_3_1_i_i_fu_1305_p3 <= (tmp_381_i_reg_2039 & ap_const_lv20_0);
    tmp_86_i_3_2_i_i_fu_1331_p3 <= (tmp_382_i_fu_1321_p4 & ap_const_lv20_0);
    tmp_86_i_3_3_i_i_fu_1361_p3 <= (tmp_383_i_reg_2059 & ap_const_lv20_0);
    tmp_86_i_3_i_i_fu_1272_p3 <= (tmp_380_i_fu_1262_p4 & ap_const_lv20_0);
    tmp_87_fu_749_p3 <= (p_v_i_fu_743_p3 & j_0_i_i_i_mid2_i_reg_1724);
    tmp_89_fu_705_p3 <= (tmp_i_i_mid2_v_i_fu_678_p3 & j_fu_699_p2);
    tmp_90_fu_790_p3 <= (p_v_i_reg_1775 & ap_reg_pp0_iter1_j_reg_1750);
    tmp_91_fu_859_p3 <= (tmp_88_reg_1814 & ap_const_lv20_0);
    tmp_92_fu_724_p3 <= (tmp_i_i_mid2_v_i_fu_678_p3 & tmp_80_i_0_2_i_i_fu_718_p2);
    tmp_93_fu_804_p3 <= (p_v_i_reg_1775 & ap_reg_pp0_iter1_tmp_80_i_0_2_i_i_reg_1763);
    tmp_94_fu_766_p3 <= (tmp_i_i_mid2_v_i_reg_1738 & tmp_80_i_0_3_i_i_fu_761_p2);
    tmp_95_fu_903_p3 <= (ap_reg_pp0_iter2_p_v_i_reg_1775 & ap_reg_pp0_iter2_tmp_80_i_0_3_i_i_reg_1802);
    tmp_fu_549_p1 <= filter_0_i_i(3 - 1 downto 0);
    tmp_i1_i_fu_1399_p2 <= "1" when (signed(p_Val2_22_i_i_i_fu_1394_p2) > signed(ap_const_lv24_0)) else "0";
        tmp_i_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_layer1_bias_V_q0),23));

    tmp_i_i_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_549_p1),64));
    tmp_i_i_mid2_v_i_fu_678_p3 <= 
        i2_i_fu_672_p2 when (exitcond52_i_i_i9_i_fu_658_p2(0) = '1') else 
        ap_phi_mux_i_0_i_i_i_i_phi_fu_530_p4;
end behav;
