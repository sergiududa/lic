// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pool_layer2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        image_V_address0,
        image_V_ce0,
        image_V_q0,
        image_V_address1,
        image_V_ce1,
        image_V_q1
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_pp0_stage0 = 23'd2;
parameter    ap_ST_fsm_pp0_stage1 = 23'd4;
parameter    ap_ST_fsm_pp0_stage2 = 23'd8;
parameter    ap_ST_fsm_pp0_stage3 = 23'd16;
parameter    ap_ST_fsm_pp0_stage4 = 23'd32;
parameter    ap_ST_fsm_pp0_stage5 = 23'd64;
parameter    ap_ST_fsm_pp0_stage6 = 23'd128;
parameter    ap_ST_fsm_pp0_stage7 = 23'd256;
parameter    ap_ST_fsm_pp0_stage8 = 23'd512;
parameter    ap_ST_fsm_pp0_stage9 = 23'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 23'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 23'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 23'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 23'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 23'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 23'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 23'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 23'd262144;
parameter    ap_ST_fsm_pp0_stage18 = 23'd524288;
parameter    ap_ST_fsm_pp0_stage19 = 23'd1048576;
parameter    ap_ST_fsm_pp0_stage20 = 23'd2097152;
parameter    ap_ST_fsm_state50 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [22:0] output_V_d0;
output  [11:0] image_V_address0;
output   image_V_ce0;
input  [22:0] image_V_q0;
output  [11:0] image_V_address1;
output   image_V_ce1;
input  [22:0] image_V_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] output_V_address0;
reg output_V_ce0;
reg output_V_we0;
reg[22:0] output_V_d0;
reg[11:0] image_V_address0;
reg image_V_ce0;
reg[11:0] image_V_address1;
reg image_V_ce1;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten_reg_496;
reg   [4:0] channel_reg_507;
reg   [3:0] i_reg_518;
reg   [22:0] reg_535;
wire    ap_CS_fsm_pp0_stage14;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state16_pp0_stage14_iter0;
wire    ap_block_state37_pp0_stage14_iter1;
wire    ap_block_pp0_stage14_11001;
reg   [0:0] exitcond_flatten_reg_1437;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state18_pp0_stage16_iter0;
wire    ap_block_state39_pp0_stage16_iter1;
wire    ap_block_pp0_stage16_11001;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state19_pp0_stage17_iter0;
wire    ap_block_state40_pp0_stage17_iter1;
wire    ap_block_pp0_stage17_11001;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state24_pp0_stage1_iter1;
wire    ap_block_state45_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_1437;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_state29_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
reg   [22:0] reg_541;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state25_pp0_stage2_iter1;
wire    ap_block_state46_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state26_pp0_stage3_iter1;
wire    ap_block_state47_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_state30_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_state33_pp0_stage10_iter1;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_state36_pp0_stage13_iter1;
wire    ap_block_pp0_stage13_11001;
reg   [22:0] reg_546;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_state31_pp0_stage8_iter1;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_state32_pp0_stage9_iter1;
wire    ap_block_pp0_stage9_11001;
reg   [22:0] reg_552;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state27_pp0_stage4_iter1;
wire    ap_block_state48_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state28_pp0_stage5_iter1;
wire    ap_block_state49_pp0_stage5_iter2;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_state34_pp0_stage11_iter1;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_state35_pp0_stage12_iter1;
wire    ap_block_pp0_stage12_11001;
reg   [22:0] reg_558;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state17_pp0_stage15_iter0;
wire    ap_block_state38_pp0_stage15_iter1;
wire    ap_block_pp0_stage15_11001;
wire   [0:0] exitcond_flatten_fu_569_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state23_pp0_stage0_iter1;
wire    ap_block_state44_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten_reg_1437;
wire   [6:0] indvar_flatten_next_fu_575_p2;
reg   [6:0] indvar_flatten_next_reg_1441;
wire   [3:0] i_mid2_fu_593_p3;
reg   [3:0] i_mid2_reg_1446;
wire   [4:0] tmp_1_mid2_v_fu_601_p3;
reg   [4:0] tmp_1_mid2_v_reg_1451;
reg   [4:0] ap_reg_pp0_iter1_tmp_1_mid2_v_reg_1451;
reg   [4:0] ap_reg_pp0_iter2_tmp_1_mid2_v_reg_1451;
wire   [11:0] tmp_1_fu_613_p2;
reg   [11:0] tmp_1_reg_1461;
reg   [11:0] ap_reg_pp0_iter1_tmp_1_reg_1461;
reg   [2:0] tmp_25_reg_1477;
reg   [2:0] ap_reg_pp0_iter1_tmp_25_reg_1477;
wire   [11:0] tmp_52_fu_639_p2;
reg   [11:0] tmp_52_reg_1483;
reg   [11:0] ap_reg_pp0_iter1_tmp_52_reg_1483;
wire   [11:0] tmp_1_mid2_cast_fu_645_p1;
reg   [11:0] tmp_1_mid2_cast_reg_1499;
wire   [11:0] tmp_4_fu_648_p2;
reg   [11:0] tmp_4_reg_1526;
wire   [11:0] tmp_6_fu_663_p2;
reg   [11:0] tmp_6_reg_1536;
wire   [11:0] tmp_8_fu_678_p2;
reg   [11:0] tmp_8_reg_1546;
wire   [11:0] image_V_load_max_V_1_fu_694_p3;
reg   [11:0] image_V_load_max_V_1_reg_1556;
wire   [11:0] tmp_2_fu_705_p2;
reg   [11:0] tmp_2_reg_1562;
wire   [11:0] tmp_53_fu_715_p2;
reg   [11:0] tmp_53_reg_1572;
wire   [11:0] image_V_load_max_V_1_3_fu_734_p3;
reg   [11:0] image_V_load_max_V_1_3_reg_1587;
wire   [11:0] tmp_57_fu_745_p2;
reg   [11:0] tmp_57_reg_1593;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state20_pp0_stage18_iter0;
wire    ap_block_state41_pp0_stage18_iter1;
wire    ap_block_pp0_stage18_11001;
wire   [11:0] image_V_load_max_V_1_1_fu_761_p3;
reg   [11:0] image_V_load_max_V_1_1_reg_1603;
wire   [11:0] tmp_55_fu_776_p2;
reg   [11:0] tmp_55_reg_1614;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state21_pp0_stage19_iter0;
wire    ap_block_state42_pp0_stage19_iter1;
wire    ap_block_pp0_stage19_11001;
wire   [11:0] image_V_load_max_V_1_4_fu_790_p3;
reg   [11:0] image_V_load_max_V_1_4_reg_1629;
wire   [11:0] tmp_59_fu_801_p2;
reg   [11:0] tmp_59_reg_1635;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state22_pp0_stage20_iter0;
wire    ap_block_state43_pp0_stage20_iter1;
wire    ap_block_pp0_stage20_11001;
wire   [11:0] image_V_load_max_V_1_2_fu_811_p3;
reg   [11:0] image_V_load_max_V_1_2_reg_1645;
wire   [3:0] i_1_fu_821_p2;
reg   [3:0] i_1_reg_1655;
wire   [11:0] image_V_load_max_V_1_5_fu_830_p3;
reg   [11:0] image_V_load_max_V_1_5_reg_1665;
wire   [11:0] tmp_10_fu_841_p2;
reg   [11:0] tmp_10_reg_1670;
wire   [11:0] tmp_65_fu_856_p2;
reg   [11:0] tmp_65_reg_1680;
wire   [11:0] tmp_12_fu_871_p2;
reg   [11:0] tmp_12_reg_1690;
wire   [11:0] tmp_63_fu_886_p2;
reg   [11:0] tmp_63_reg_1700;
wire   [11:0] tmp_61_fu_901_p2;
reg   [11:0] tmp_61_reg_1710;
wire   [11:0] tmp_69_fu_916_p2;
reg   [11:0] tmp_69_reg_1720;
wire   [11:0] image_V_load_max_V_1_6_fu_932_p3;
reg   [11:0] image_V_load_max_V_1_6_reg_1730;
wire   [11:0] tmp_14_fu_943_p2;
reg   [11:0] tmp_14_reg_1736;
wire   [11:0] tmp_16_fu_962_p2;
reg   [11:0] tmp_16_reg_1751;
wire   [11:0] tmp_73_fu_977_p2;
reg   [11:0] tmp_73_reg_1761;
wire   [11:0] image_V_load_max_V_1_7_fu_993_p3;
reg   [11:0] image_V_load_max_V_1_7_reg_1771;
wire   [10:0] tmp_28_fu_1021_p2;
reg   [10:0] tmp_28_reg_1777;
wire   [11:0] tmp_67_fu_1064_p2;
reg   [11:0] tmp_67_reg_1785;
wire   [11:0] image_V_load_max_V_1_9_fu_1084_p3;
reg   [11:0] image_V_load_max_V_1_9_reg_1800;
wire   [11:0] tmp_20_fu_1095_p2;
reg   [11:0] tmp_20_reg_1806;
wire   [11:0] image_V_load_max_V_1_8_fu_1105_p3;
reg   [11:0] image_V_load_max_V_1_8_reg_1816;
wire   [11:0] tmp_18_fu_1120_p2;
reg   [11:0] tmp_18_reg_1826;
wire   [11:0] image_V_load_max_V_1_27_fu_1140_p3;
reg   [11:0] image_V_load_max_V_1_27_reg_1841;
wire   [11:0] tmp_71_fu_1151_p2;
reg   [11:0] tmp_71_reg_1847;
wire   [11:0] image_V_load_max_V_1_11_fu_1171_p3;
reg   [11:0] image_V_load_max_V_1_11_reg_1862;
wire   [11:0] tmp_22_fu_1182_p2;
reg   [11:0] tmp_22_reg_1868;
wire   [11:0] tmp_24_fu_1192_p2;
reg   [11:0] tmp_24_reg_1874;
wire   [11:0] tmp_75_fu_1207_p2;
reg   [11:0] tmp_75_reg_1884;
wire   [11:0] image_V_load_max_V_1_10_fu_1212_p3;
reg   [11:0] image_V_load_max_V_1_10_reg_1890;
wire   [11:0] image_V_load_max_V_1_12_fu_1236_p3;
reg   [11:0] image_V_load_max_V_1_12_reg_1910;
wire   [11:0] image_V_load_max_V_1_14_fu_1256_p3;
reg   [11:0] image_V_load_max_V_1_14_reg_1926;
wire   [11:0] image_V_load_max_V_1_13_fu_1262_p3;
reg   [11:0] image_V_load_max_V_1_13_reg_1932;
wire   [11:0] image_V_load_max_V_1_15_fu_1282_p3;
reg   [11:0] image_V_load_max_V_1_15_reg_1947;
wire   [11:0] image_V_load_max_V_1_16_fu_1298_p3;
reg   [11:0] image_V_load_max_V_1_16_reg_1958;
reg   [22:0] image_V_load_41_reg_1968;
wire   [10:0] tmp_1_mid2_cast1_fu_1312_p1;
reg   [10:0] tmp_1_mid2_cast1_reg_1978;
wire   [4:0] tmp_46_fu_1382_p2;
reg   [4:0] tmp_46_reg_1984;
reg   [6:0] tmp_47_reg_1989;
wire   [10:0] tmp_51_fu_1417_p2;
reg   [10:0] tmp_51_reg_1994;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage5_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [6:0] ap_phi_mux_indvar_flatten_phi_fu_500_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_channel_phi_fu_511_p4;
reg   [3:0] ap_phi_mux_i_phi_fu_522_p4;
wire   [63:0] tmp_4_cast_fu_653_p1;
wire    ap_block_pp0_stage13;
wire   [63:0] tmp_6_cast_fu_668_p1;
wire    ap_block_pp0_stage14;
wire   [63:0] tmp_8_cast_fu_683_p1;
wire    ap_block_pp0_stage15;
wire   [63:0] tmp_10_cast_fu_710_p1;
wire    ap_block_pp0_stage16;
wire   [63:0] tmp_53_cast_fu_719_p1;
wire   [63:0] image_V_load_max_V_1_17_fu_724_p1;
wire    ap_block_pp0_stage17;
wire   [63:0] tmp_57_cast_fu_750_p1;
wire    ap_block_pp0_stage18;
wire   [63:0] image_V_load_max_V_1_20_fu_767_p1;
wire   [63:0] tmp_55_cast_fu_781_p1;
wire    ap_block_pp0_stage19;
wire   [63:0] image_V_load_max_V_1_18_fu_786_p1;
wire   [63:0] tmp_59_cast_fu_806_p1;
wire    ap_block_pp0_stage20;
wire   [63:0] image_V_load_max_V_1_21_fu_817_p1;
wire   [63:0] image_V_load_max_V_1_19_fu_826_p1;
wire   [63:0] tmp_12_cast_fu_846_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] tmp_65_cast_fu_861_p1;
wire   [63:0] tmp_14_cast_fu_876_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_63_cast_fu_891_p1;
wire   [63:0] tmp_61_cast_fu_906_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_69_cast_fu_921_p1;
wire   [63:0] tmp_16_cast_fu_948_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] image_V_load_max_V_1_23_fu_953_p1;
wire   [63:0] tmp_18_cast_fu_967_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] tmp_73_cast_fu_982_p1;
wire  signed [63:0] tmp_33_fu_1054_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] tmp_67_cast_fu_1069_p1;
wire   [63:0] image_V_load_max_V_1_24_fu_1074_p1;
wire   [63:0] tmp_22_cast_fu_1100_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] image_V_load_max_V_1_26_fu_1111_p1;
wire   [63:0] tmp_20_cast_fu_1125_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] image_V_load_max_V_1_25_fu_1130_p1;
wire   [63:0] tmp_71_cast_fu_1156_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] image_V_load_max_V_1_28_fu_1161_p1;
wire   [63:0] tmp_26_cast_fu_1197_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] image_V_load_max_V_1_30_fu_1218_p1;
wire   [63:0] tmp_24_cast_fu_1222_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] image_V_load_max_V_1_29_fu_1226_p1;
wire   [63:0] tmp_75_cast_fu_1242_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] image_V_load_max_V_1_31_fu_1246_p1;
wire   [63:0] image_V_load_max_V_1_33_fu_1268_p1;
wire   [63:0] image_V_load_max_V_1_32_fu_1272_p1;
wire   [63:0] image_V_load_max_V_1_34_fu_1288_p1;
wire   [63:0] image_V_load_max_V_1_35_fu_1304_p1;
wire   [63:0] image_V_load_max_V_1_22_fu_1308_p1;
wire  signed [63:0] tmp_37_cast_fu_1326_p1;
wire  signed [63:0] tmp_41_fu_1367_p1;
wire  signed [63:0] tmp_44_cast_fu_1407_p1;
wire  signed [63:0] tmp_49_fu_1428_p1;
wire  signed [63:0] tmp_51_cast_fu_1433_p1;
wire   [0:0] tmp_s_fu_587_p2;
wire   [4:0] channel_1_fu_581_p2;
wire   [3:0] tmp_1_fu_613_p1;
wire   [3:0] tmp_9_0_s_fu_629_p2;
wire   [3:0] tmp_52_fu_639_p1;
wire   [11:0] tmp_5_fu_658_p2;
wire   [11:0] tmp_7_fu_673_p2;
wire   [0:0] tmp_13_0_0_1_fu_688_p2;
wire   [11:0] tmp_9_fu_700_p2;
wire   [0:0] tmp_13_1_0_1_fu_728_p2;
wire   [11:0] tmp_56_fu_740_p2;
wire   [0:0] tmp_13_0_1_fu_755_p2;
wire   [11:0] tmp_54_fu_771_p2;
wire   [0:0] grp_fu_529_p2;
wire   [11:0] tmp_58_fu_796_p2;
wire   [11:0] tmp_3_fu_836_p2;
wire   [11:0] tmp_64_fu_851_p2;
wire   [11:0] tmp_11_fu_866_p2;
wire   [11:0] tmp_62_fu_881_p2;
wire   [11:0] tmp_60_fu_896_p2;
wire   [11:0] tmp_68_fu_911_p2;
wire   [0:0] tmp_13_2_0_1_fu_926_p2;
wire   [11:0] tmp_13_fu_938_p2;
wire   [11:0] tmp_15_fu_957_p2;
wire   [11:0] tmp_72_fu_972_p2;
wire   [0:0] tmp_13_2_1_fu_987_p2;
wire   [9:0] tmp_26_fu_999_p3;
wire   [7:0] tmp_27_fu_1010_p3;
wire   [10:0] p_shl_cast_fu_1006_p1;
wire   [10:0] p_shl6_cast_fu_1017_p1;
wire   [4:0] tmp_29_fu_1027_p1;
wire   [5:0] tmp_31_fu_1036_p4;
wire   [4:0] tmp_30_fu_1031_p2;
wire   [10:0] tmp_32_fu_1046_p3;
wire   [11:0] tmp_66_fu_1059_p2;
wire   [0:0] tmp_13_3_0_1_fu_1078_p2;
wire   [11:0] tmp_19_fu_1090_p2;
wire   [0:0] grp_fu_563_p2;
wire   [11:0] tmp_17_fu_1115_p2;
wire   [0:0] tmp_13_3_1_fu_1134_p2;
wire   [11:0] tmp_70_fu_1146_p2;
wire   [0:0] tmp_13_4_0_1_fu_1165_p2;
wire   [11:0] tmp_21_fu_1177_p2;
wire   [11:0] tmp_23_fu_1187_p2;
wire   [11:0] tmp_74_fu_1202_p2;
wire   [0:0] tmp_13_4_1_fu_1230_p2;
wire   [0:0] tmp_13_5_0_1_fu_1250_p2;
wire   [0:0] tmp_13_5_1_fu_1276_p2;
wire   [0:0] tmp_13_5_1_1_fu_1292_p2;
wire   [10:0] tmp_34_fu_1315_p2;
wire   [10:0] tmp_35_fu_1320_p2;
wire  signed [11:0] tmp_31_cast_fu_1331_p1;
wire   [11:0] tmp_36_fu_1334_p2;
wire   [4:0] tmp_37_fu_1340_p1;
wire   [6:0] tmp_39_fu_1349_p4;
wire   [4:0] tmp_38_fu_1344_p2;
wire   [11:0] tmp_40_fu_1359_p3;
wire   [11:0] tmp_44_fu_1372_p2;
wire   [4:0] tmp_45_fu_1378_p1;
wire   [10:0] tmp_42_fu_1397_p2;
wire   [10:0] tmp_43_fu_1402_p2;
wire   [10:0] tmp_50_fu_1412_p2;
wire   [11:0] tmp_48_fu_1422_p3;
wire    ap_CS_fsm_state50;
reg   [22:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [11:0] tmp_1_fu_613_p10;
wire   [11:0] tmp_52_fu_639_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage20_subdone) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage20_subdone) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        channel_reg_507 <= tmp_1_mid2_v_reg_1451;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        channel_reg_507 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_reg_518 <= i_1_reg_1655;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_518 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_496 <= indvar_flatten_next_reg_1441;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_496 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        reg_535 <= image_V_q1;
    end else if ((((1'b0 == ap_block_pp0_stage16_11001) & (exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond_flatten_reg_1437 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_535 <= image_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_541 <= image_V_q1;
    end else if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        reg_541 <= image_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        reg_546 <= image_V_q0;
    end else if ((((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_546 <= image_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_552 <= image_V_q1;
    end else if ((((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_552 <= image_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_1437 <= exitcond_flatten_reg_1437;
        ap_reg_pp0_iter1_tmp_1_mid2_v_reg_1451 <= tmp_1_mid2_v_reg_1451;
        ap_reg_pp0_iter1_tmp_1_reg_1461 <= tmp_1_reg_1461;
        ap_reg_pp0_iter1_tmp_25_reg_1477 <= tmp_25_reg_1477;
        ap_reg_pp0_iter1_tmp_52_reg_1483[11 : 1] <= tmp_52_reg_1483[11 : 1];
        ap_reg_pp0_iter2_exitcond_flatten_reg_1437 <= ap_reg_pp0_iter1_exitcond_flatten_reg_1437;
        ap_reg_pp0_iter2_tmp_1_mid2_v_reg_1451 <= ap_reg_pp0_iter1_tmp_1_mid2_v_reg_1451;
        exitcond_flatten_reg_1437 <= exitcond_flatten_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        i_1_reg_1655 <= i_1_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_569_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_mid2_reg_1446 <= i_mid2_fu_593_p3;
        tmp_1_reg_1461 <= tmp_1_fu_613_p2;
        tmp_25_reg_1477 <= {{i_mid2_fu_593_p3[3:1]}};
        tmp_52_reg_1483[11 : 1] <= tmp_52_fu_639_p2[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_load_41_reg_1968 <= image_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        image_V_load_max_V_1_10_reg_1890 <= image_V_load_max_V_1_10_fu_1212_p3;
        tmp_22_reg_1868 <= tmp_22_fu_1182_p2;
        tmp_24_reg_1874 <= tmp_24_fu_1192_p2;
        tmp_75_reg_1884 <= tmp_75_fu_1207_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        image_V_load_max_V_1_11_reg_1862 <= image_V_load_max_V_1_11_fu_1171_p3;
        tmp_71_reg_1847 <= tmp_71_fu_1151_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        image_V_load_max_V_1_12_reg_1910 <= image_V_load_max_V_1_12_fu_1236_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        image_V_load_max_V_1_13_reg_1932 <= image_V_load_max_V_1_13_fu_1262_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        image_V_load_max_V_1_14_reg_1926 <= image_V_load_max_V_1_14_fu_1256_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        image_V_load_max_V_1_15_reg_1947 <= image_V_load_max_V_1_15_fu_1282_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        image_V_load_max_V_1_16_reg_1958 <= image_V_load_max_V_1_16_fu_1298_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        image_V_load_max_V_1_1_reg_1603 <= image_V_load_max_V_1_1_fu_761_p3;
        tmp_57_reg_1593 <= tmp_57_fu_745_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        image_V_load_max_V_1_27_reg_1841 <= image_V_load_max_V_1_27_fu_1140_p3;
        tmp_18_reg_1826 <= tmp_18_fu_1120_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        image_V_load_max_V_1_2_reg_1645 <= image_V_load_max_V_1_2_fu_811_p3;
        tmp_59_reg_1635 <= tmp_59_fu_801_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        image_V_load_max_V_1_3_reg_1587 <= image_V_load_max_V_1_3_fu_734_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        image_V_load_max_V_1_4_reg_1629 <= image_V_load_max_V_1_4_fu_790_p3;
        tmp_55_reg_1614 <= tmp_55_fu_776_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_V_load_max_V_1_5_reg_1665 <= image_V_load_max_V_1_5_fu_830_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        image_V_load_max_V_1_6_reg_1730 <= image_V_load_max_V_1_6_fu_932_p3;
        tmp_61_reg_1710 <= tmp_61_fu_901_p2;
        tmp_69_reg_1720 <= tmp_69_fu_916_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        image_V_load_max_V_1_7_reg_1771 <= image_V_load_max_V_1_7_fu_993_p3;
        tmp_16_reg_1751 <= tmp_16_fu_962_p2;
        tmp_73_reg_1761 <= tmp_73_fu_977_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        image_V_load_max_V_1_8_reg_1816 <= image_V_load_max_V_1_8_fu_1105_p3;
        tmp_20_reg_1806 <= tmp_20_fu_1095_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        image_V_load_max_V_1_9_reg_1800 <= image_V_load_max_V_1_9_fu_1084_p3;
        tmp_28_reg_1777[10 : 5] <= tmp_28_fu_1021_p2[10 : 5];
        tmp_67_reg_1785 <= tmp_67_fu_1064_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        image_V_load_max_V_1_reg_1556 <= image_V_load_max_V_1_fu_694_p3;
        tmp_8_reg_1546 <= tmp_8_fu_678_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next_reg_1441 <= indvar_flatten_next_fu_575_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_558 <= image_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_10_reg_1670 <= tmp_10_fu_841_p2;
        tmp_65_reg_1680 <= tmp_65_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_12_reg_1690 <= tmp_12_fu_871_p2;
        tmp_63_reg_1700 <= tmp_63_fu_886_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_14_reg_1736 <= tmp_14_fu_943_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_1_mid2_cast1_reg_1978[4 : 0] <= tmp_1_mid2_cast1_fu_1312_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        tmp_1_mid2_cast_reg_1499[4 : 0] <= tmp_1_mid2_cast_fu_645_p1[4 : 0];
        tmp_4_reg_1526 <= tmp_4_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_569_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1_mid2_v_reg_1451 <= tmp_1_mid2_v_fu_601_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        tmp_2_reg_1562 <= tmp_2_fu_705_p2;
        tmp_53_reg_1572 <= tmp_53_fu_715_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_46_reg_1984 <= tmp_46_fu_1382_p2;
        tmp_47_reg_1989 <= {{tmp_44_fu_1372_p2[11:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp_51_reg_1994 <= tmp_51_fu_1417_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        tmp_6_reg_1536 <= tmp_6_fu_663_p2;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_569_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_channel_phi_fu_511_p4 = tmp_1_mid2_v_reg_1451;
    end else begin
        ap_phi_mux_channel_phi_fu_511_p4 = channel_reg_507;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_phi_fu_522_p4 = i_1_reg_1655;
    end else begin
        ap_phi_mux_i_phi_fu_522_p4 = i_reg_518;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_500_p4 = indvar_flatten_next_reg_1441;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_500_p4 = indvar_flatten_reg_496;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address0 = image_V_load_max_V_1_31_fu_1246_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address0 = image_V_load_max_V_1_29_fu_1226_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address0 = image_V_load_max_V_1_30_fu_1218_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address0 = image_V_load_max_V_1_28_fu_1161_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address0 = image_V_load_max_V_1_25_fu_1130_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address0 = image_V_load_max_V_1_26_fu_1111_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address0 = image_V_load_max_V_1_24_fu_1074_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address0 = tmp_18_cast_fu_967_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address0 = image_V_load_max_V_1_23_fu_953_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address0 = tmp_61_cast_fu_906_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address0 = tmp_14_cast_fu_876_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_V_address0 = tmp_12_cast_fu_846_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address0 = image_V_load_max_V_1_19_fu_826_p1;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        image_V_address0 = image_V_load_max_V_1_21_fu_817_p1;
    end else if (((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        image_V_address0 = image_V_load_max_V_1_18_fu_786_p1;
    end else if (((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        image_V_address0 = image_V_load_max_V_1_20_fu_767_p1;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        image_V_address0 = image_V_load_max_V_1_17_fu_724_p1;
    end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        image_V_address0 = tmp_53_cast_fu_719_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        image_V_address0 = tmp_8_cast_fu_683_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        image_V_address0 = tmp_6_cast_fu_668_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        image_V_address0 = tmp_4_cast_fu_653_p1;
    end else begin
        image_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_V_address1 = image_V_load_max_V_1_22_fu_1308_p1;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        image_V_address1 = image_V_load_max_V_1_35_fu_1304_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address1 = image_V_load_max_V_1_34_fu_1288_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address1 = image_V_load_max_V_1_32_fu_1272_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address1 = image_V_load_max_V_1_33_fu_1268_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address1 = tmp_75_cast_fu_1242_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address1 = tmp_24_cast_fu_1222_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address1 = tmp_26_cast_fu_1197_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address1 = tmp_71_cast_fu_1156_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address1 = tmp_20_cast_fu_1125_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address1 = tmp_22_cast_fu_1100_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address1 = tmp_67_cast_fu_1069_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address1 = tmp_73_cast_fu_982_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address1 = tmp_16_cast_fu_948_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address1 = tmp_69_cast_fu_921_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        image_V_address1 = tmp_63_cast_fu_891_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_V_address1 = tmp_65_cast_fu_861_p1;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        image_V_address1 = tmp_59_cast_fu_806_p1;
    end else if (((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        image_V_address1 = tmp_55_cast_fu_781_p1;
    end else if (((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        image_V_address1 = tmp_57_cast_fu_750_p1;
    end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        image_V_address1 = tmp_10_cast_fu_710_p1;
    end else begin
        image_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        image_V_ce0 = 1'b1;
    end else begin
        image_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)))) begin
        image_V_ce1 = 1'b1;
    end else begin
        image_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        output_V_address0 = tmp_51_cast_fu_1433_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        output_V_address0 = tmp_49_fu_1428_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        output_V_address0 = tmp_44_cast_fu_1407_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        output_V_address0 = tmp_41_fu_1367_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_V_address0 = tmp_37_cast_fu_1326_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        output_V_address0 = tmp_33_fu_1054_p1;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        output_V_d0 = image_V_load_41_reg_1968;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        output_V_d0 = reg_558;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        output_V_d0 = reg_552;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        output_V_d0 = reg_546;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_V_d0 = image_V_q1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        output_V_d0 = reg_535;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_pp0_iter2_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((ap_reg_pp0_iter2_exitcond_flatten_reg_1437 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_reg_pp0_iter2_exitcond_flatten_reg_1437 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_reg_pp0_iter2_exitcond_flatten_reg_1437 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_reg_pp0_iter1_exitcond_flatten_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_reg_pp0_iter2_exitcond_flatten_reg_1437 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_569_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_569_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((~((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd22];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage16_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage17_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage18_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage19_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage20_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign channel_1_fu_581_p2 = (5'd1 + ap_phi_mux_channel_phi_fu_511_p4);

assign exitcond_flatten_fu_569_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_500_p4 == 7'd96) ? 1'b1 : 1'b0);

assign grp_fu_529_p2 = ((image_V_q1 > image_V_q0) ? 1'b1 : 1'b0);

assign grp_fu_563_p2 = ((reg_541 > image_V_q0) ? 1'b1 : 1'b0);

assign i_1_fu_821_p2 = (4'd2 + i_mid2_reg_1446);

assign i_mid2_fu_593_p3 = ((tmp_s_fu_587_p2[0:0] === 1'b1) ? ap_phi_mux_i_phi_fu_522_p4 : 4'd0);

assign image_V_load_max_V_1_10_fu_1212_p3 = ((grp_fu_563_p2[0:0] === 1'b1) ? tmp_67_reg_1785 : image_V_load_max_V_1_27_reg_1841);

assign image_V_load_max_V_1_11_fu_1171_p3 = ((tmp_13_4_0_1_fu_1165_p2[0:0] === 1'b1) ? tmp_20_reg_1806 : tmp_18_reg_1826);

assign image_V_load_max_V_1_12_fu_1236_p3 = ((tmp_13_4_1_fu_1230_p2[0:0] === 1'b1) ? tmp_69_reg_1720 : image_V_load_max_V_1_11_reg_1862);

assign image_V_load_max_V_1_13_fu_1262_p3 = ((grp_fu_563_p2[0:0] === 1'b1) ? tmp_71_reg_1847 : image_V_load_max_V_1_12_reg_1910);

assign image_V_load_max_V_1_14_fu_1256_p3 = ((tmp_13_5_0_1_fu_1250_p2[0:0] === 1'b1) ? tmp_24_reg_1874 : tmp_22_reg_1868);

assign image_V_load_max_V_1_15_fu_1282_p3 = ((tmp_13_5_1_fu_1276_p2[0:0] === 1'b1) ? tmp_73_reg_1761 : image_V_load_max_V_1_14_reg_1926);

assign image_V_load_max_V_1_16_fu_1298_p3 = ((tmp_13_5_1_1_fu_1292_p2[0:0] === 1'b1) ? tmp_75_reg_1884 : image_V_load_max_V_1_15_reg_1947);

assign image_V_load_max_V_1_17_fu_724_p1 = image_V_load_max_V_1_reg_1556;

assign image_V_load_max_V_1_18_fu_786_p1 = image_V_load_max_V_1_1_reg_1603;

assign image_V_load_max_V_1_19_fu_826_p1 = image_V_load_max_V_1_2_reg_1645;

assign image_V_load_max_V_1_1_fu_761_p3 = ((tmp_13_0_1_fu_755_p2[0:0] === 1'b1) ? tmp_53_reg_1572 : image_V_load_max_V_1_reg_1556);

assign image_V_load_max_V_1_20_fu_767_p1 = image_V_load_max_V_1_3_reg_1587;

assign image_V_load_max_V_1_21_fu_817_p1 = image_V_load_max_V_1_4_reg_1629;

assign image_V_load_max_V_1_22_fu_1308_p1 = image_V_load_max_V_1_5_reg_1665;

assign image_V_load_max_V_1_23_fu_953_p1 = image_V_load_max_V_1_6_reg_1730;

assign image_V_load_max_V_1_24_fu_1074_p1 = image_V_load_max_V_1_7_reg_1771;

assign image_V_load_max_V_1_25_fu_1130_p1 = image_V_load_max_V_1_8_reg_1816;

assign image_V_load_max_V_1_26_fu_1111_p1 = image_V_load_max_V_1_9_reg_1800;

assign image_V_load_max_V_1_27_fu_1140_p3 = ((tmp_13_3_1_fu_1134_p2[0:0] === 1'b1) ? tmp_65_reg_1680 : image_V_load_max_V_1_9_reg_1800);

assign image_V_load_max_V_1_28_fu_1161_p1 = image_V_load_max_V_1_27_reg_1841;

assign image_V_load_max_V_1_29_fu_1226_p1 = image_V_load_max_V_1_10_reg_1890;

assign image_V_load_max_V_1_2_fu_811_p3 = ((grp_fu_529_p2[0:0] === 1'b1) ? tmp_55_reg_1614 : image_V_load_max_V_1_1_reg_1603);

assign image_V_load_max_V_1_30_fu_1218_p1 = image_V_load_max_V_1_11_reg_1862;

assign image_V_load_max_V_1_31_fu_1246_p1 = image_V_load_max_V_1_12_reg_1910;

assign image_V_load_max_V_1_32_fu_1272_p1 = image_V_load_max_V_1_13_reg_1932;

assign image_V_load_max_V_1_33_fu_1268_p1 = image_V_load_max_V_1_14_reg_1926;

assign image_V_load_max_V_1_34_fu_1288_p1 = image_V_load_max_V_1_15_reg_1947;

assign image_V_load_max_V_1_35_fu_1304_p1 = image_V_load_max_V_1_16_reg_1958;

assign image_V_load_max_V_1_3_fu_734_p3 = ((tmp_13_1_0_1_fu_728_p2[0:0] === 1'b1) ? tmp_2_reg_1562 : tmp_8_reg_1546);

assign image_V_load_max_V_1_4_fu_790_p3 = ((grp_fu_529_p2[0:0] === 1'b1) ? tmp_57_reg_1593 : image_V_load_max_V_1_3_reg_1587);

assign image_V_load_max_V_1_5_fu_830_p3 = ((grp_fu_529_p2[0:0] === 1'b1) ? tmp_59_reg_1635 : image_V_load_max_V_1_4_reg_1629);

assign image_V_load_max_V_1_6_fu_932_p3 = ((tmp_13_2_0_1_fu_926_p2[0:0] === 1'b1) ? tmp_12_reg_1690 : tmp_10_reg_1670);

assign image_V_load_max_V_1_7_fu_993_p3 = ((tmp_13_2_1_fu_987_p2[0:0] === 1'b1) ? tmp_61_reg_1710 : image_V_load_max_V_1_6_reg_1730);

assign image_V_load_max_V_1_8_fu_1105_p3 = ((grp_fu_563_p2[0:0] === 1'b1) ? tmp_63_reg_1700 : image_V_load_max_V_1_7_reg_1771);

assign image_V_load_max_V_1_9_fu_1084_p3 = ((tmp_13_3_0_1_fu_1078_p2[0:0] === 1'b1) ? tmp_16_reg_1751 : tmp_14_reg_1736);

assign image_V_load_max_V_1_fu_694_p3 = ((tmp_13_0_0_1_fu_688_p2[0:0] === 1'b1) ? tmp_6_reg_1536 : tmp_4_reg_1526);

assign indvar_flatten_next_fu_575_p2 = (ap_phi_mux_indvar_flatten_phi_fu_500_p4 + 7'd1);

assign p_shl6_cast_fu_1017_p1 = tmp_27_fu_1010_p3;

assign p_shl_cast_fu_1006_p1 = tmp_26_fu_999_p3;

assign tmp_10_cast_fu_710_p1 = tmp_2_fu_705_p2;

assign tmp_10_fu_841_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_3_fu_836_p2);

assign tmp_11_fu_866_p2 = (12'd80 + ap_reg_pp0_iter1_tmp_1_reg_1461);

assign tmp_12_cast_fu_846_p1 = tmp_10_fu_841_p2;

assign tmp_12_fu_871_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_11_fu_866_p2);

assign tmp_13_0_0_1_fu_688_p2 = ((image_V_q0 > reg_535) ? 1'b1 : 1'b0);

assign tmp_13_0_1_fu_755_p2 = ((reg_535 > image_V_q0) ? 1'b1 : 1'b0);

assign tmp_13_1_0_1_fu_728_p2 = ((image_V_q1 > reg_535) ? 1'b1 : 1'b0);

assign tmp_13_2_0_1_fu_926_p2 = ((image_V_q0 > reg_541) ? 1'b1 : 1'b0);

assign tmp_13_2_1_fu_987_p2 = ((reg_552 > image_V_q0) ? 1'b1 : 1'b0);

assign tmp_13_3_0_1_fu_1078_p2 = ((image_V_q0 > reg_552) ? 1'b1 : 1'b0);

assign tmp_13_3_1_fu_1134_p2 = ((reg_546 > image_V_q0) ? 1'b1 : 1'b0);

assign tmp_13_4_0_1_fu_1165_p2 = ((reg_546 > image_V_q1) ? 1'b1 : 1'b0);

assign tmp_13_4_1_fu_1230_p2 = ((reg_558 > image_V_q0) ? 1'b1 : 1'b0);

assign tmp_13_5_0_1_fu_1250_p2 = ((reg_552 > image_V_q1) ? 1'b1 : 1'b0);

assign tmp_13_5_1_1_fu_1292_p2 = ((reg_541 > image_V_q1) ? 1'b1 : 1'b0);

assign tmp_13_5_1_fu_1276_p2 = ((reg_535 > image_V_q1) ? 1'b1 : 1'b0);

assign tmp_13_fu_938_p2 = (12'd96 + ap_reg_pp0_iter1_tmp_1_reg_1461);

assign tmp_14_cast_fu_876_p1 = tmp_12_fu_871_p2;

assign tmp_14_fu_943_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_13_fu_938_p2);

assign tmp_15_fu_957_p2 = (12'd112 + ap_reg_pp0_iter1_tmp_1_reg_1461);

assign tmp_16_cast_fu_948_p1 = tmp_14_fu_943_p2;

assign tmp_16_fu_962_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_15_fu_957_p2);

assign tmp_17_fu_1115_p2 = (12'd128 + ap_reg_pp0_iter1_tmp_1_reg_1461);

assign tmp_18_cast_fu_967_p1 = tmp_16_fu_962_p2;

assign tmp_18_fu_1120_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_17_fu_1115_p2);

assign tmp_19_fu_1090_p2 = (12'd144 + ap_reg_pp0_iter1_tmp_1_reg_1461);

assign tmp_1_fu_613_p1 = tmp_1_fu_613_p10;

assign tmp_1_fu_613_p10 = i_mid2_fu_593_p3;

assign tmp_1_fu_613_p2 = (12'd208 * tmp_1_fu_613_p1);

assign tmp_1_mid2_cast1_fu_1312_p1 = ap_reg_pp0_iter2_tmp_1_mid2_v_reg_1451;

assign tmp_1_mid2_cast_fu_645_p1 = tmp_1_mid2_v_reg_1451;

assign tmp_1_mid2_v_fu_601_p3 = ((tmp_s_fu_587_p2[0:0] === 1'b1) ? ap_phi_mux_channel_phi_fu_511_p4 : channel_1_fu_581_p2);

assign tmp_20_cast_fu_1125_p1 = tmp_18_fu_1120_p2;

assign tmp_20_fu_1095_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_19_fu_1090_p2);

assign tmp_21_fu_1177_p2 = (12'd160 + ap_reg_pp0_iter1_tmp_1_reg_1461);

assign tmp_22_cast_fu_1100_p1 = tmp_20_fu_1095_p2;

assign tmp_22_fu_1182_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_21_fu_1177_p2);

assign tmp_23_fu_1187_p2 = (12'd176 + ap_reg_pp0_iter1_tmp_1_reg_1461);

assign tmp_24_cast_fu_1222_p1 = tmp_22_reg_1868;

assign tmp_24_fu_1192_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_23_fu_1187_p2);

assign tmp_26_cast_fu_1197_p1 = tmp_24_fu_1192_p2;

assign tmp_26_fu_999_p3 = {{ap_reg_pp0_iter1_tmp_25_reg_1477}, {7'd0}};

assign tmp_27_fu_1010_p3 = {{ap_reg_pp0_iter1_tmp_25_reg_1477}, {5'd0}};

assign tmp_28_fu_1021_p2 = (p_shl_cast_fu_1006_p1 - p_shl6_cast_fu_1017_p1);

assign tmp_29_fu_1027_p1 = tmp_28_fu_1021_p2[4:0];

assign tmp_2_fu_705_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_9_fu_700_p2);

assign tmp_30_fu_1031_p2 = (tmp_29_fu_1027_p1 | ap_reg_pp0_iter1_tmp_1_mid2_v_reg_1451);

assign tmp_31_cast_fu_1331_p1 = $signed(tmp_28_reg_1777);

assign tmp_31_fu_1036_p4 = {{tmp_28_fu_1021_p2[10:5]}};

assign tmp_32_fu_1046_p3 = {{tmp_31_fu_1036_p4}, {tmp_30_fu_1031_p2}};

assign tmp_33_fu_1054_p1 = $signed(tmp_32_fu_1046_p3);

assign tmp_34_fu_1315_p2 = (tmp_28_reg_1777 | 11'd16);

assign tmp_35_fu_1320_p2 = (tmp_1_mid2_cast1_fu_1312_p1 + tmp_34_fu_1315_p2);

assign tmp_36_fu_1334_p2 = ($signed(12'd32) + $signed(tmp_31_cast_fu_1331_p1));

assign tmp_37_cast_fu_1326_p1 = $signed(tmp_35_fu_1320_p2);

assign tmp_37_fu_1340_p1 = tmp_36_fu_1334_p2[4:0];

assign tmp_38_fu_1344_p2 = (tmp_37_fu_1340_p1 | ap_reg_pp0_iter2_tmp_1_mid2_v_reg_1451);

assign tmp_39_fu_1349_p4 = {{tmp_36_fu_1334_p2[11:5]}};

assign tmp_3_fu_836_p2 = (12'd64 + ap_reg_pp0_iter1_tmp_1_reg_1461);

assign tmp_40_fu_1359_p3 = {{tmp_39_fu_1349_p4}, {tmp_38_fu_1344_p2}};

assign tmp_41_fu_1367_p1 = $signed(tmp_40_fu_1359_p3);

assign tmp_42_fu_1397_p2 = (11'd48 + tmp_28_reg_1777);

assign tmp_43_fu_1402_p2 = (tmp_1_mid2_cast1_reg_1978 + tmp_42_fu_1397_p2);

assign tmp_44_cast_fu_1407_p1 = $signed(tmp_43_fu_1402_p2);

assign tmp_44_fu_1372_p2 = ($signed(12'd64) + $signed(tmp_31_cast_fu_1331_p1));

assign tmp_45_fu_1378_p1 = tmp_44_fu_1372_p2[4:0];

assign tmp_46_fu_1382_p2 = (tmp_45_fu_1378_p1 | ap_reg_pp0_iter2_tmp_1_mid2_v_reg_1451);

assign tmp_48_fu_1422_p3 = {{tmp_47_reg_1989}, {tmp_46_reg_1984}};

assign tmp_49_fu_1428_p1 = $signed(tmp_48_fu_1422_p3);

assign tmp_4_cast_fu_653_p1 = tmp_4_fu_648_p2;

assign tmp_4_fu_648_p2 = (tmp_1_mid2_cast_fu_645_p1 + tmp_1_reg_1461);

assign tmp_50_fu_1412_p2 = (11'd80 + tmp_28_reg_1777);

assign tmp_51_cast_fu_1433_p1 = $signed(tmp_51_reg_1994);

assign tmp_51_fu_1417_p2 = (tmp_1_mid2_cast1_reg_1978 + tmp_50_fu_1412_p2);

assign tmp_52_fu_639_p1 = tmp_52_fu_639_p10;

assign tmp_52_fu_639_p10 = tmp_9_0_s_fu_629_p2;

assign tmp_52_fu_639_p2 = (12'd208 * tmp_52_fu_639_p1);

assign tmp_53_cast_fu_719_p1 = tmp_53_fu_715_p2;

assign tmp_53_fu_715_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_52_reg_1483);

assign tmp_54_fu_771_p2 = (12'd16 + tmp_52_reg_1483);

assign tmp_55_cast_fu_781_p1 = tmp_55_fu_776_p2;

assign tmp_55_fu_776_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_54_fu_771_p2);

assign tmp_56_fu_740_p2 = (12'd32 + tmp_52_reg_1483);

assign tmp_57_cast_fu_750_p1 = tmp_57_fu_745_p2;

assign tmp_57_fu_745_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_56_fu_740_p2);

assign tmp_58_fu_796_p2 = (12'd48 + tmp_52_reg_1483);

assign tmp_59_cast_fu_806_p1 = tmp_59_fu_801_p2;

assign tmp_59_fu_801_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_58_fu_796_p2);

assign tmp_5_fu_658_p2 = (12'd16 + tmp_1_reg_1461);

assign tmp_60_fu_896_p2 = (12'd64 + ap_reg_pp0_iter1_tmp_52_reg_1483);

assign tmp_61_cast_fu_906_p1 = tmp_61_fu_901_p2;

assign tmp_61_fu_901_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_60_fu_896_p2);

assign tmp_62_fu_881_p2 = (12'd80 + ap_reg_pp0_iter1_tmp_52_reg_1483);

assign tmp_63_cast_fu_891_p1 = tmp_63_fu_886_p2;

assign tmp_63_fu_886_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_62_fu_881_p2);

assign tmp_64_fu_851_p2 = (12'd96 + ap_reg_pp0_iter1_tmp_52_reg_1483);

assign tmp_65_cast_fu_861_p1 = tmp_65_fu_856_p2;

assign tmp_65_fu_856_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_64_fu_851_p2);

assign tmp_66_fu_1059_p2 = (12'd112 + ap_reg_pp0_iter1_tmp_52_reg_1483);

assign tmp_67_cast_fu_1069_p1 = tmp_67_fu_1064_p2;

assign tmp_67_fu_1064_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_66_fu_1059_p2);

assign tmp_68_fu_911_p2 = (12'd128 + ap_reg_pp0_iter1_tmp_52_reg_1483);

assign tmp_69_cast_fu_921_p1 = tmp_69_fu_916_p2;

assign tmp_69_fu_916_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_68_fu_911_p2);

assign tmp_6_cast_fu_668_p1 = tmp_6_fu_663_p2;

assign tmp_6_fu_663_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_5_fu_658_p2);

assign tmp_70_fu_1146_p2 = (12'd144 + ap_reg_pp0_iter1_tmp_52_reg_1483);

assign tmp_71_cast_fu_1156_p1 = tmp_71_fu_1151_p2;

assign tmp_71_fu_1151_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_70_fu_1146_p2);

assign tmp_72_fu_972_p2 = (12'd160 + ap_reg_pp0_iter1_tmp_52_reg_1483);

assign tmp_73_cast_fu_982_p1 = tmp_73_fu_977_p2;

assign tmp_73_fu_977_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_72_fu_972_p2);

assign tmp_74_fu_1202_p2 = (12'd176 + ap_reg_pp0_iter1_tmp_52_reg_1483);

assign tmp_75_cast_fu_1242_p1 = tmp_75_reg_1884;

assign tmp_75_fu_1207_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_74_fu_1202_p2);

assign tmp_7_fu_673_p2 = (12'd32 + tmp_1_reg_1461);

assign tmp_8_cast_fu_683_p1 = tmp_8_fu_678_p2;

assign tmp_8_fu_678_p2 = (tmp_1_mid2_cast_reg_1499 + tmp_7_fu_673_p2);

assign tmp_9_0_s_fu_629_p2 = (i_mid2_fu_593_p3 | 4'd1);

assign tmp_9_fu_700_p2 = (12'd48 + tmp_1_reg_1461);

assign tmp_s_fu_587_p2 = ((ap_phi_mux_i_phi_fu_522_p4 < 4'd12) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_52_reg_1483[0] <= 1'b0;
    ap_reg_pp0_iter1_tmp_52_reg_1483[0] <= 1'b0;
    tmp_1_mid2_cast_reg_1499[11:5] <= 7'b0000000;
    tmp_28_reg_1777[4:0] <= 5'b00000;
    tmp_1_mid2_cast1_reg_1978[10:5] <= 6'b000000;
end

endmodule //pool_layer2
