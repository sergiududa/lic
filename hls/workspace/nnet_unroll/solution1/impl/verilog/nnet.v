// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nnet,hls_ip_2017_4_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.446750,HLS_SYN_LAT=381295,HLS_SYN_TPT=none,HLS_SYN_MEM=181,HLS_SYN_DSP=51,HLS_SYN_FF=10034,HLS_SYN_LUT=16069}" *)

module nnet (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_layer1_out_V_address0,
        conv_layer1_out_V_ce0,
        conv_layer1_out_V_we0,
        conv_layer1_out_V_d0,
        conv_layer1_out_V_q0,
        conv_layer1_out_V_address1,
        conv_layer1_out_V_ce1,
        conv_layer1_out_V_q1,
        conv_layer2_out_V_address0,
        conv_layer2_out_V_ce0,
        conv_layer2_out_V_we0,
        conv_layer2_out_V_d0,
        conv_layer2_out_V_q0,
        conv_layer2_out_V_address1,
        conv_layer2_out_V_ce1,
        conv_layer2_out_V_q1,
        pool_layer1_out_V_address0,
        pool_layer1_out_V_ce0,
        pool_layer1_out_V_we0,
        pool_layer1_out_V_d0,
        pool_layer1_out_V_q0,
        pool_layer1_out_V_address1,
        pool_layer1_out_V_ce1,
        pool_layer1_out_V_we1,
        pool_layer1_out_V_d1,
        pool_layer1_out_V_q1,
        pool_layer2_out_V_address0,
        pool_layer2_out_V_ce0,
        pool_layer2_out_V_we0,
        pool_layer2_out_V_d0,
        pool_layer2_out_V_q0,
        pool_layer2_out_V_address1,
        pool_layer2_out_V_ce1,
        pool_layer2_out_V_we1,
        pool_layer2_out_V_d1,
        fc_layer1_out_V_address0,
        fc_layer1_out_V_ce0,
        fc_layer1_out_V_we0,
        fc_layer1_out_V_d0,
        fc_layer1_out_V_q0,
        fc_layer2_out_V_address0,
        fc_layer2_out_V_ce0,
        fc_layer2_out_V_we0,
        fc_layer2_out_V_d0,
        fc_layer2_out_V_q0,
        fc_layer3_out_V_address0,
        fc_layer3_out_V_ce0,
        fc_layer3_out_V_we0,
        fc_layer3_out_V_d0
);

parameter    ap_ST_fsm_state1 = 26'd1;
parameter    ap_ST_fsm_state2 = 26'd2;
parameter    ap_ST_fsm_state3 = 26'd4;
parameter    ap_ST_fsm_state4 = 26'd8;
parameter    ap_ST_fsm_state5 = 26'd16;
parameter    ap_ST_fsm_state6 = 26'd32;
parameter    ap_ST_fsm_state7 = 26'd64;
parameter    ap_ST_fsm_state8 = 26'd128;
parameter    ap_ST_fsm_state9 = 26'd256;
parameter    ap_ST_fsm_state10 = 26'd512;
parameter    ap_ST_fsm_state11 = 26'd1024;
parameter    ap_ST_fsm_state12 = 26'd2048;
parameter    ap_ST_fsm_state13 = 26'd4096;
parameter    ap_ST_fsm_state14 = 26'd8192;
parameter    ap_ST_fsm_state15 = 26'd16384;
parameter    ap_ST_fsm_state16 = 26'd32768;
parameter    ap_ST_fsm_state17 = 26'd65536;
parameter    ap_ST_fsm_state18 = 26'd131072;
parameter    ap_ST_fsm_state19 = 26'd262144;
parameter    ap_ST_fsm_state20 = 26'd524288;
parameter    ap_ST_fsm_state21 = 26'd1048576;
parameter    ap_ST_fsm_state22 = 26'd2097152;
parameter    ap_ST_fsm_state23 = 26'd4194304;
parameter    ap_ST_fsm_state24 = 26'd8388608;
parameter    ap_ST_fsm_state25 = 26'd16777216;
parameter    ap_ST_fsm_state26 = 26'd33554432;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] conv_layer1_out_V_address0;
output   conv_layer1_out_V_ce0;
output   conv_layer1_out_V_we0;
output  [23:0] conv_layer1_out_V_d0;
input  [23:0] conv_layer1_out_V_q0;
output  [12:0] conv_layer1_out_V_address1;
output   conv_layer1_out_V_ce1;
input  [23:0] conv_layer1_out_V_q1;
output  [11:0] conv_layer2_out_V_address0;
output   conv_layer2_out_V_ce0;
output   conv_layer2_out_V_we0;
output  [23:0] conv_layer2_out_V_d0;
input  [23:0] conv_layer2_out_V_q0;
output  [11:0] conv_layer2_out_V_address1;
output   conv_layer2_out_V_ce1;
input  [23:0] conv_layer2_out_V_q1;
output  [10:0] pool_layer1_out_V_address0;
output   pool_layer1_out_V_ce0;
output   pool_layer1_out_V_we0;
output  [23:0] pool_layer1_out_V_d0;
input  [23:0] pool_layer1_out_V_q0;
output  [10:0] pool_layer1_out_V_address1;
output   pool_layer1_out_V_ce1;
output   pool_layer1_out_V_we1;
output  [23:0] pool_layer1_out_V_d1;
input  [23:0] pool_layer1_out_V_q1;
output  [9:0] pool_layer2_out_V_address0;
output   pool_layer2_out_V_ce0;
output   pool_layer2_out_V_we0;
output  [23:0] pool_layer2_out_V_d0;
input  [23:0] pool_layer2_out_V_q0;
output  [9:0] pool_layer2_out_V_address1;
output   pool_layer2_out_V_ce1;
output   pool_layer2_out_V_we1;
output  [23:0] pool_layer2_out_V_d1;
output  [6:0] fc_layer1_out_V_address0;
output   fc_layer1_out_V_ce0;
output   fc_layer1_out_V_we0;
output  [23:0] fc_layer1_out_V_d0;
input  [23:0] fc_layer1_out_V_q0;
output  [6:0] fc_layer2_out_V_address0;
output   fc_layer2_out_V_ce0;
output   fc_layer2_out_V_we0;
output  [23:0] fc_layer2_out_V_d0;
input  [23:0] fc_layer2_out_V_q0;
output  [3:0] fc_layer3_out_V_address0;
output   fc_layer3_out_V_ce0;
output   fc_layer3_out_V_we0;
output  [23:0] fc_layer3_out_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[12:0] conv_layer1_out_V_address0;
reg conv_layer1_out_V_ce0;
reg conv_layer1_out_V_we0;
reg conv_layer1_out_V_ce1;
reg[11:0] conv_layer2_out_V_address0;
reg conv_layer2_out_V_ce0;
reg conv_layer2_out_V_we0;
reg conv_layer2_out_V_ce1;
reg[10:0] pool_layer1_out_V_address0;
reg pool_layer1_out_V_ce0;
reg pool_layer1_out_V_we0;
reg[10:0] pool_layer1_out_V_address1;
reg pool_layer1_out_V_ce1;
reg pool_layer1_out_V_we1;
reg[9:0] pool_layer2_out_V_address0;
reg pool_layer2_out_V_ce0;
reg pool_layer2_out_V_we0;
reg pool_layer2_out_V_ce1;
reg pool_layer2_out_V_we1;
reg[6:0] fc_layer1_out_V_address0;
reg fc_layer1_out_V_ce0;
reg fc_layer1_out_V_we0;
reg[23:0] fc_layer1_out_V_d0;
reg[6:0] fc_layer2_out_V_address0;
reg fc_layer2_out_V_ce0;
reg fc_layer2_out_V_we0;
reg[23:0] fc_layer2_out_V_d0;
reg fc_layer3_out_V_ce0;
reg fc_layer3_out_V_we0;
reg[23:0] fc_layer3_out_V_d0;

(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [16:0] fc_layer1_weights_V_address0;
reg    fc_layer1_weights_V_ce0;
wire   [17:0] fc_layer1_weights_V_q0;
wire   [13:0] fc_layer2_weights_V_address0;
reg    fc_layer2_weights_V_ce0;
wire   [18:0] fc_layer2_weights_V_q0;
wire   [9:0] fc_layer3_weights_V_address0;
reg    fc_layer3_weights_V_ce0;
wire   [19:0] fc_layer3_weights_V_q0;
wire   [6:0] i_fu_567_p2;
reg   [6:0] i_reg_960;
wire    ap_CS_fsm_state9;
wire   [17:0] tmp_i_cast_fu_578_p1;
reg   [17:0] tmp_i_cast_reg_965;
wire   [0:0] exitcond7_i_fu_561_p2;
reg   [6:0] fc_layer1_out_V_addr_reg_970;
wire   [9:0] j_fu_588_p2;
reg   [9:0] j_reg_978;
wire    ap_CS_fsm_state10;
wire   [0:0] exitcond_i_fu_582_p2;
reg  signed [17:0] fc_layer1_weights_V_1_reg_993;
wire    ap_CS_fsm_state11;
reg  signed [23:0] pool_layer2_out_V_lo_reg_998;
wire  signed [40:0] p_Val2_1_fu_945_p2;
reg  signed [40:0] p_Val2_1_reg_1003;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [6:0] i_3_fu_701_p2;
reg   [6:0] i_3_reg_1016;
wire    ap_CS_fsm_state15;
wire   [13:0] tmp_i9_cast_fu_712_p1;
reg   [13:0] tmp_i9_cast_reg_1021;
wire   [0:0] exitcond6_i_fu_695_p2;
reg   [6:0] fc_layer2_out_V_addr_reg_1026;
wire   [6:0] j_3_fu_722_p2;
reg   [6:0] j_3_reg_1034;
wire    ap_CS_fsm_state16;
wire   [13:0] next_mul_fu_733_p2;
reg   [13:0] next_mul_reg_1039;
wire   [0:0] exitcond_i1_fu_716_p2;
reg  signed [18:0] fc_layer2_weights_V_1_reg_1054;
wire    ap_CS_fsm_state17;
reg  signed [23:0] fc_layer1_out_V_load_reg_1059;
wire  signed [41:0] p_Val2_4_fu_951_p2;
reg  signed [41:0] p_Val2_4_reg_1064;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire   [3:0] i_4_fu_811_p2;
reg   [3:0] i_4_reg_1077;
wire    ap_CS_fsm_state21;
wire   [10:0] tmp_i1_cast_fu_822_p1;
reg   [10:0] tmp_i1_cast_reg_1082;
wire   [0:0] exitcond5_i_fu_805_p2;
reg   [3:0] fc_layer3_out_V_addr_reg_1087;
wire   [6:0] j_4_fu_832_p2;
reg   [6:0] j_4_reg_1095;
wire    ap_CS_fsm_state22;
wire   [0:0] exitcond_i2_fu_826_p2;
reg   [19:0] fc_layer3_weights_V_1_reg_1110;
wire    ap_CS_fsm_state23;
reg   [23:0] fc_layer2_out_V_load_reg_1115;
wire   [42:0] p_Val2_7_fu_889_p2;
reg   [42:0] p_Val2_7_reg_1120;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    grp_pool_layer2_fu_429_ap_start;
wire    grp_pool_layer2_fu_429_ap_done;
wire    grp_pool_layer2_fu_429_ap_idle;
wire    grp_pool_layer2_fu_429_ap_ready;
wire   [9:0] grp_pool_layer2_fu_429_output_V_address0;
wire    grp_pool_layer2_fu_429_output_V_ce0;
wire    grp_pool_layer2_fu_429_output_V_we0;
wire   [23:0] grp_pool_layer2_fu_429_output_V_d0;
wire   [9:0] grp_pool_layer2_fu_429_output_V_address1;
wire    grp_pool_layer2_fu_429_output_V_ce1;
wire    grp_pool_layer2_fu_429_output_V_we1;
wire   [23:0] grp_pool_layer2_fu_429_output_V_d1;
wire   [11:0] grp_pool_layer2_fu_429_image_V_address0;
wire    grp_pool_layer2_fu_429_image_V_ce0;
wire   [11:0] grp_pool_layer2_fu_429_image_V_address1;
wire    grp_pool_layer2_fu_429_image_V_ce1;
wire    grp_conv_layer2_fu_437_ap_start;
wire    grp_conv_layer2_fu_437_ap_done;
wire    grp_conv_layer2_fu_437_ap_idle;
wire    grp_conv_layer2_fu_437_ap_ready;
wire   [11:0] grp_conv_layer2_fu_437_output_V_address0;
wire    grp_conv_layer2_fu_437_output_V_ce0;
wire    grp_conv_layer2_fu_437_output_V_we0;
wire   [23:0] grp_conv_layer2_fu_437_output_V_d0;
wire   [10:0] grp_conv_layer2_fu_437_image_V_address0;
wire    grp_conv_layer2_fu_437_image_V_ce0;
wire   [10:0] grp_conv_layer2_fu_437_image_V_address1;
wire    grp_conv_layer2_fu_437_image_V_ce1;
wire    grp_pool_layer1_fu_511_ap_start;
wire    grp_pool_layer1_fu_511_ap_done;
wire    grp_pool_layer1_fu_511_ap_idle;
wire    grp_pool_layer1_fu_511_ap_ready;
wire   [10:0] grp_pool_layer1_fu_511_output_V_address0;
wire    grp_pool_layer1_fu_511_output_V_ce0;
wire    grp_pool_layer1_fu_511_output_V_we0;
wire   [23:0] grp_pool_layer1_fu_511_output_V_d0;
wire   [10:0] grp_pool_layer1_fu_511_output_V_address1;
wire    grp_pool_layer1_fu_511_output_V_ce1;
wire    grp_pool_layer1_fu_511_output_V_we1;
wire   [23:0] grp_pool_layer1_fu_511_output_V_d1;
wire   [12:0] grp_pool_layer1_fu_511_image_V_address0;
wire    grp_pool_layer1_fu_511_image_V_ce0;
wire   [12:0] grp_pool_layer1_fu_511_image_V_address1;
wire    grp_pool_layer1_fu_511_image_V_ce1;
wire    grp_conv_layer1_fu_519_ap_start;
wire    grp_conv_layer1_fu_519_ap_done;
wire    grp_conv_layer1_fu_519_ap_idle;
wire    grp_conv_layer1_fu_519_ap_ready;
wire   [12:0] grp_conv_layer1_fu_519_output_V_address0;
wire    grp_conv_layer1_fu_519_output_V_ce0;
wire    grp_conv_layer1_fu_519_output_V_we0;
wire   [23:0] grp_conv_layer1_fu_519_output_V_d0;
reg   [6:0] i_i_reg_313;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state14;
reg   [23:0] p_Val2_s_reg_324;
reg   [9:0] j_i_reg_337;
reg   [6:0] i_i7_reg_348;
wire    ap_CS_fsm_state20;
reg   [23:0] p_Val2_3_reg_359;
reg   [6:0] j_i1_reg_372;
reg   [13:0] phi_mul_reg_383;
reg   [3:0] i_i1_reg_394;
wire    ap_CS_fsm_state26;
reg   [23:0] p_Val2_6_reg_405;
reg   [6:0] j_i2_reg_418;
reg    ap_reg_grp_pool_layer2_fu_429_ap_start;
wire    ap_CS_fsm_state7;
reg    ap_reg_grp_conv_layer2_fu_437_ap_start;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    ap_reg_grp_pool_layer1_fu_511_ap_start;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    ap_reg_grp_conv_layer1_fu_519_ap_start;
wire    ap_CS_fsm_state2;
wire   [63:0] tmp_i_fu_573_p1;
wire  signed [63:0] tmp_3_cast_fu_634_p1;
wire   [63:0] tmp_i_21_fu_594_p1;
wire   [63:0] tmp_i9_fu_707_p1;
wire   [63:0] tmp_5_cast_fu_744_p1;
wire   [63:0] tmp_i1_fu_728_p1;
wire   [63:0] tmp_i1_27_fu_817_p1;
wire   [63:0] tmp_9_cast_fu_878_p1;
wire   [63:0] tmp_i2_fu_838_p1;
wire   [23:0] a_V_i_i_cast_fu_690_p1;
wire   [23:0] a_V_i_i1_cast_fu_800_p1;
wire   [23:0] a_V_i_i2_cast_fu_940_p1;
wire   [16:0] tmp_fu_599_p3;
wire   [12:0] tmp_1_fu_611_p3;
wire   [17:0] p_shl_cast_fu_607_p1;
wire   [17:0] p_shl1_cast_fu_619_p1;
wire   [17:0] tmp_2_fu_623_p2;
wire   [17:0] tmp_3_fu_629_p2;
wire  signed [43:0] tmp_18_i_cast_fu_653_p1;
wire   [43:0] tmp_17_i_fu_645_p3;
wire   [43:0] p_Val2_2_fu_656_p2;
wire   [0:0] tmp_i_i_fu_676_p2;
wire   [22:0] tmp_4_fu_672_p1;
wire   [22:0] a_V_i_i_fu_682_p3;
wire   [13:0] tmp_5_fu_739_p2;
wire  signed [43:0] tmp_13_i_cast_fu_763_p1;
wire   [43:0] tmp_12_i_fu_755_p3;
wire   [43:0] p_Val2_5_fu_766_p2;
wire   [0:0] tmp_i_i1_fu_786_p2;
wire   [22:0] tmp_10_fu_782_p1;
wire   [22:0] a_V_i_i1_fu_792_p3;
wire   [9:0] tmp_6_fu_843_p3;
wire   [7:0] tmp_7_fu_855_p3;
wire   [10:0] p_shl3_cast_fu_863_p1;
wire   [10:0] p_shl2_cast_fu_851_p1;
wire   [10:0] tmp_8_fu_867_p2;
wire   [10:0] tmp_9_fu_873_p2;
wire  signed [23:0] p_Val2_7_fu_889_p0;
wire  signed [19:0] p_Val2_7_fu_889_p1;
wire  signed [43:0] tmp_8_i_cast_fu_903_p1;
wire   [43:0] tmp_7_i_fu_895_p3;
wire   [43:0] p_Val2_8_fu_906_p2;
wire   [0:0] tmp_i_i2_fu_926_p2;
wire   [22:0] tmp_11_fu_922_p1;
wire   [22:0] a_V_i_i2_fu_932_p3;
reg   [25:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'd1;
#0 ap_reg_grp_pool_layer2_fu_429_ap_start = 1'b0;
#0 ap_reg_grp_conv_layer2_fu_437_ap_start = 1'b0;
#0 ap_reg_grp_pool_layer1_fu_511_ap_start = 1'b0;
#0 ap_reg_grp_conv_layer1_fu_519_ap_start = 1'b0;
end

nnet_fc_layer1_we1iI #(
    .DataWidth( 18 ),
    .AddressRange( 69120 ),
    .AddressWidth( 17 ))
fc_layer1_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer1_weights_V_address0),
    .ce0(fc_layer1_weights_V_ce0),
    .q0(fc_layer1_weights_V_q0)
);

nnet_fc_layer2_we2iS #(
    .DataWidth( 19 ),
    .AddressRange( 10080 ),
    .AddressWidth( 14 ))
fc_layer2_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer2_weights_V_address0),
    .ce0(fc_layer2_weights_V_ce0),
    .q0(fc_layer2_weights_V_q0)
);

nnet_fc_layer3_we3i2 #(
    .DataWidth( 20 ),
    .AddressRange( 840 ),
    .AddressWidth( 10 ))
fc_layer3_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_layer3_weights_V_address0),
    .ce0(fc_layer3_weights_V_ce0),
    .q0(fc_layer3_weights_V_q0)
);

pool_layer2 grp_pool_layer2_fu_429(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pool_layer2_fu_429_ap_start),
    .ap_done(grp_pool_layer2_fu_429_ap_done),
    .ap_idle(grp_pool_layer2_fu_429_ap_idle),
    .ap_ready(grp_pool_layer2_fu_429_ap_ready),
    .output_V_address0(grp_pool_layer2_fu_429_output_V_address0),
    .output_V_ce0(grp_pool_layer2_fu_429_output_V_ce0),
    .output_V_we0(grp_pool_layer2_fu_429_output_V_we0),
    .output_V_d0(grp_pool_layer2_fu_429_output_V_d0),
    .output_V_address1(grp_pool_layer2_fu_429_output_V_address1),
    .output_V_ce1(grp_pool_layer2_fu_429_output_V_ce1),
    .output_V_we1(grp_pool_layer2_fu_429_output_V_we1),
    .output_V_d1(grp_pool_layer2_fu_429_output_V_d1),
    .image_V_address0(grp_pool_layer2_fu_429_image_V_address0),
    .image_V_ce0(grp_pool_layer2_fu_429_image_V_ce0),
    .image_V_q0(conv_layer2_out_V_q0),
    .image_V_address1(grp_pool_layer2_fu_429_image_V_address1),
    .image_V_ce1(grp_pool_layer2_fu_429_image_V_ce1),
    .image_V_q1(conv_layer2_out_V_q1)
);

conv_layer2 grp_conv_layer2_fu_437(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv_layer2_fu_437_ap_start),
    .ap_done(grp_conv_layer2_fu_437_ap_done),
    .ap_idle(grp_conv_layer2_fu_437_ap_idle),
    .ap_ready(grp_conv_layer2_fu_437_ap_ready),
    .output_V_address0(grp_conv_layer2_fu_437_output_V_address0),
    .output_V_ce0(grp_conv_layer2_fu_437_output_V_ce0),
    .output_V_we0(grp_conv_layer2_fu_437_output_V_we0),
    .output_V_d0(grp_conv_layer2_fu_437_output_V_d0),
    .image_V_address0(grp_conv_layer2_fu_437_image_V_address0),
    .image_V_ce0(grp_conv_layer2_fu_437_image_V_ce0),
    .image_V_q0(pool_layer1_out_V_q0),
    .image_V_address1(grp_conv_layer2_fu_437_image_V_address1),
    .image_V_ce1(grp_conv_layer2_fu_437_image_V_ce1),
    .image_V_q1(pool_layer1_out_V_q1)
);

pool_layer1 grp_pool_layer1_fu_511(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pool_layer1_fu_511_ap_start),
    .ap_done(grp_pool_layer1_fu_511_ap_done),
    .ap_idle(grp_pool_layer1_fu_511_ap_idle),
    .ap_ready(grp_pool_layer1_fu_511_ap_ready),
    .output_V_address0(grp_pool_layer1_fu_511_output_V_address0),
    .output_V_ce0(grp_pool_layer1_fu_511_output_V_ce0),
    .output_V_we0(grp_pool_layer1_fu_511_output_V_we0),
    .output_V_d0(grp_pool_layer1_fu_511_output_V_d0),
    .output_V_address1(grp_pool_layer1_fu_511_output_V_address1),
    .output_V_ce1(grp_pool_layer1_fu_511_output_V_ce1),
    .output_V_we1(grp_pool_layer1_fu_511_output_V_we1),
    .output_V_d1(grp_pool_layer1_fu_511_output_V_d1),
    .image_V_address0(grp_pool_layer1_fu_511_image_V_address0),
    .image_V_ce0(grp_pool_layer1_fu_511_image_V_ce0),
    .image_V_q0(conv_layer1_out_V_q0),
    .image_V_address1(grp_pool_layer1_fu_511_image_V_address1),
    .image_V_ce1(grp_pool_layer1_fu_511_image_V_ce1),
    .image_V_q1(conv_layer1_out_V_q1)
);

conv_layer1 grp_conv_layer1_fu_519(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv_layer1_fu_519_ap_start),
    .ap_done(grp_conv_layer1_fu_519_ap_done),
    .ap_idle(grp_conv_layer1_fu_519_ap_idle),
    .ap_ready(grp_conv_layer1_fu_519_ap_ready),
    .output_V_address0(grp_conv_layer1_fu_519_output_V_address0),
    .output_V_ce0(grp_conv_layer1_fu_519_output_V_ce0),
    .output_V_we0(grp_conv_layer1_fu_519_output_V_we0),
    .output_V_d0(grp_conv_layer1_fu_519_output_V_d0)
);

nnet_mul_mul_24s_4jc #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 41 ))
nnet_mul_mul_24s_4jc_U109(
    .din0(pool_layer2_out_V_lo_reg_998),
    .din1(fc_layer1_weights_V_1_reg_993),
    .dout(p_Val2_1_fu_945_p2)
);

nnet_mul_mul_24s_5jm #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 42 ))
nnet_mul_mul_24s_5jm_U110(
    .din0(fc_layer1_out_V_load_reg_1059),
    .din1(fc_layer2_weights_V_1_reg_1054),
    .dout(p_Val2_4_fu_951_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_conv_layer1_fu_519_ap_start <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_reg_grp_conv_layer1_fu_519_ap_start <= 1'b1;
        end else if ((grp_conv_layer1_fu_519_ap_ready == 1'b1)) begin
            ap_reg_grp_conv_layer1_fu_519_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_conv_layer2_fu_437_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_reg_grp_conv_layer2_fu_437_ap_start <= 1'b1;
        end else if ((grp_conv_layer2_fu_437_ap_ready == 1'b1)) begin
            ap_reg_grp_conv_layer2_fu_437_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_pool_layer1_fu_511_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_reg_grp_pool_layer1_fu_511_ap_start <= 1'b1;
        end else if ((grp_pool_layer1_fu_511_ap_ready == 1'b1)) begin
            ap_reg_grp_pool_layer1_fu_511_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_pool_layer2_fu_429_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_reg_grp_pool_layer2_fu_429_ap_start <= 1'b1;
        end else if ((grp_pool_layer2_fu_429_ap_ready == 1'b1)) begin
            ap_reg_grp_pool_layer2_fu_429_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (exitcond6_i_fu_695_p2 == 1'd1))) begin
        i_i1_reg_394 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        i_i1_reg_394 <= i_4_reg_1077;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (exitcond7_i_fu_561_p2 == 1'd1))) begin
        i_i7_reg_348 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        i_i7_reg_348 <= i_3_reg_1016;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_i_reg_313 <= i_reg_960;
    end else if (((grp_pool_layer2_fu_429_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_i_reg_313 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j_i1_reg_372 <= j_3_reg_1034;
    end else if (((1'b1 == ap_CS_fsm_state15) & (exitcond6_i_fu_695_p2 == 1'd0))) begin
        j_i1_reg_372 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        j_i2_reg_418 <= j_4_reg_1095;
    end else if (((1'b1 == ap_CS_fsm_state21) & (exitcond5_i_fu_805_p2 == 1'd0))) begin
        j_i2_reg_418 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j_i_reg_337 <= j_reg_978;
    end else if (((1'b1 == ap_CS_fsm_state9) & (exitcond7_i_fu_561_p2 == 1'd0))) begin
        j_i_reg_337 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p_Val2_3_reg_359 <= {{p_Val2_5_fu_766_p2[43:20]}};
    end else if (((1'b1 == ap_CS_fsm_state15) & (exitcond6_i_fu_695_p2 == 1'd0))) begin
        p_Val2_3_reg_359 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        p_Val2_6_reg_405 <= {{p_Val2_8_fu_906_p2[43:20]}};
    end else if (((1'b1 == ap_CS_fsm_state21) & (exitcond5_i_fu_805_p2 == 1'd0))) begin
        p_Val2_6_reg_405 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_Val2_s_reg_324 <= {{p_Val2_2_fu_656_p2[43:20]}};
    end else if (((1'b1 == ap_CS_fsm_state9) & (exitcond7_i_fu_561_p2 == 1'd0))) begin
        p_Val2_s_reg_324 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        phi_mul_reg_383 <= next_mul_reg_1039;
    end else if (((1'b1 == ap_CS_fsm_state15) & (exitcond6_i_fu_695_p2 == 1'd0))) begin
        phi_mul_reg_383 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (exitcond7_i_fu_561_p2 == 1'd0))) begin
        fc_layer1_out_V_addr_reg_970 <= tmp_i_fu_573_p1;
        tmp_i_cast_reg_965[6 : 0] <= tmp_i_cast_fu_578_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        fc_layer1_out_V_load_reg_1059 <= fc_layer1_out_V_q0;
        fc_layer2_weights_V_1_reg_1054 <= fc_layer2_weights_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_layer1_weights_V_1_reg_993 <= fc_layer1_weights_V_q0;
        pool_layer2_out_V_lo_reg_998 <= pool_layer2_out_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (exitcond6_i_fu_695_p2 == 1'd0))) begin
        fc_layer2_out_V_addr_reg_1026 <= tmp_i9_fu_707_p1;
        tmp_i9_cast_reg_1021[6 : 0] <= tmp_i9_cast_fu_712_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        fc_layer2_out_V_load_reg_1115 <= fc_layer2_out_V_q0;
        fc_layer3_weights_V_1_reg_1110 <= fc_layer3_weights_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (exitcond5_i_fu_805_p2 == 1'd0))) begin
        fc_layer3_out_V_addr_reg_1087 <= tmp_i1_27_fu_817_p1;
        tmp_i1_cast_reg_1082[3 : 0] <= tmp_i1_cast_fu_822_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_3_reg_1016 <= i_3_fu_701_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_4_reg_1077 <= i_4_fu_811_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_reg_960 <= i_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        j_3_reg_1034 <= j_3_fu_722_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        j_4_reg_1095 <= j_4_fu_832_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j_reg_978 <= j_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond_i1_fu_716_p2 == 1'd0))) begin
        next_mul_reg_1039 <= next_mul_fu_733_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_Val2_1_reg_1003 <= p_Val2_1_fu_945_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        p_Val2_4_reg_1064 <= p_Val2_4_fu_951_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        p_Val2_7_reg_1120 <= p_Val2_7_fu_889_p2;
    end
end

always @ (*) begin
    if (((exitcond5_i_fu_805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_i_fu_805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_layer1_out_V_address0 = grp_conv_layer1_fu_519_output_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_layer1_out_V_address0 = grp_pool_layer1_fu_511_image_V_address0;
    end else begin
        conv_layer1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_layer1_out_V_ce0 = grp_conv_layer1_fu_519_output_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_layer1_out_V_ce0 = grp_pool_layer1_fu_511_image_V_ce0;
    end else begin
        conv_layer1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_layer1_out_V_ce1 = grp_pool_layer1_fu_511_image_V_ce1;
    end else begin
        conv_layer1_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_layer1_out_V_we0 = grp_conv_layer1_fu_519_output_V_we0;
    end else begin
        conv_layer1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_layer2_out_V_address0 = grp_conv_layer2_fu_437_output_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_layer2_out_V_address0 = grp_pool_layer2_fu_429_image_V_address0;
    end else begin
        conv_layer2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_layer2_out_V_ce0 = grp_conv_layer2_fu_437_output_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_layer2_out_V_ce0 = grp_pool_layer2_fu_429_image_V_ce0;
    end else begin
        conv_layer2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_layer2_out_V_ce1 = grp_pool_layer2_fu_429_image_V_ce1;
    end else begin
        conv_layer2_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_layer2_out_V_we0 = grp_conv_layer2_fu_437_output_V_we0;
    end else begin
        conv_layer2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        fc_layer1_out_V_address0 = tmp_i1_fu_728_p1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10))) begin
        fc_layer1_out_V_address0 = fc_layer1_out_V_addr_reg_970;
    end else begin
        fc_layer1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state10))) begin
        fc_layer1_out_V_ce0 = 1'b1;
    end else begin
        fc_layer1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        fc_layer1_out_V_d0 = a_V_i_i_cast_fu_690_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_layer1_out_V_d0 = p_Val2_s_reg_324;
    end else begin
        fc_layer1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10))) begin
        fc_layer1_out_V_we0 = 1'b1;
    end else begin
        fc_layer1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_layer1_weights_V_ce0 = 1'b1;
    end else begin
        fc_layer1_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        fc_layer2_out_V_address0 = tmp_i2_fu_838_p1;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16))) begin
        fc_layer2_out_V_address0 = fc_layer2_out_V_addr_reg_1026;
    end else begin
        fc_layer2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16))) begin
        fc_layer2_out_V_ce0 = 1'b1;
    end else begin
        fc_layer2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        fc_layer2_out_V_d0 = a_V_i_i1_cast_fu_800_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        fc_layer2_out_V_d0 = p_Val2_3_reg_359;
    end else begin
        fc_layer2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16))) begin
        fc_layer2_out_V_we0 = 1'b1;
    end else begin
        fc_layer2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        fc_layer2_weights_V_ce0 = 1'b1;
    end else begin
        fc_layer2_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22))) begin
        fc_layer3_out_V_ce0 = 1'b1;
    end else begin
        fc_layer3_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        fc_layer3_out_V_d0 = a_V_i_i2_cast_fu_940_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        fc_layer3_out_V_d0 = p_Val2_6_reg_405;
    end else begin
        fc_layer3_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22))) begin
        fc_layer3_out_V_we0 = 1'b1;
    end else begin
        fc_layer3_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        fc_layer3_weights_V_ce0 = 1'b1;
    end else begin
        fc_layer3_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        pool_layer1_out_V_address0 = grp_pool_layer1_fu_511_output_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pool_layer1_out_V_address0 = grp_conv_layer2_fu_437_image_V_address0;
    end else begin
        pool_layer1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        pool_layer1_out_V_address1 = grp_pool_layer1_fu_511_output_V_address1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pool_layer1_out_V_address1 = grp_conv_layer2_fu_437_image_V_address1;
    end else begin
        pool_layer1_out_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        pool_layer1_out_V_ce0 = grp_pool_layer1_fu_511_output_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pool_layer1_out_V_ce0 = grp_conv_layer2_fu_437_image_V_ce0;
    end else begin
        pool_layer1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        pool_layer1_out_V_ce1 = grp_pool_layer1_fu_511_output_V_ce1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pool_layer1_out_V_ce1 = grp_conv_layer2_fu_437_image_V_ce1;
    end else begin
        pool_layer1_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        pool_layer1_out_V_we0 = grp_pool_layer1_fu_511_output_V_we0;
    end else begin
        pool_layer1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        pool_layer1_out_V_we1 = grp_pool_layer1_fu_511_output_V_we1;
    end else begin
        pool_layer1_out_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        pool_layer2_out_V_address0 = tmp_i_21_fu_594_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        pool_layer2_out_V_address0 = grp_pool_layer2_fu_429_output_V_address0;
    end else begin
        pool_layer2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        pool_layer2_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        pool_layer2_out_V_ce0 = grp_pool_layer2_fu_429_output_V_ce0;
    end else begin
        pool_layer2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        pool_layer2_out_V_ce1 = grp_pool_layer2_fu_429_output_V_ce1;
    end else begin
        pool_layer2_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        pool_layer2_out_V_we0 = grp_pool_layer2_fu_429_output_V_we0;
    end else begin
        pool_layer2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        pool_layer2_out_V_we1 = grp_pool_layer2_fu_429_output_V_we1;
    end else begin
        pool_layer2_out_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_conv_layer1_fu_519_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_pool_layer1_fu_511_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_conv_layer2_fu_437_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_pool_layer2_fu_429_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (exitcond7_i_fu_561_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (exitcond_i_fu_582_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (exitcond6_i_fu_695_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((exitcond_i1_fu_716_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state21 : begin
            if (((exitcond5_i_fu_805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((exitcond_i2_fu_826_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_V_i_i1_cast_fu_800_p1 = a_V_i_i1_fu_792_p3;

assign a_V_i_i1_fu_792_p3 = ((tmp_i_i1_fu_786_p2[0:0] === 1'b1) ? tmp_10_fu_782_p1 : 23'd0);

assign a_V_i_i2_cast_fu_940_p1 = a_V_i_i2_fu_932_p3;

assign a_V_i_i2_fu_932_p3 = ((tmp_i_i2_fu_926_p2[0:0] === 1'b1) ? tmp_11_fu_922_p1 : 23'd0);

assign a_V_i_i_cast_fu_690_p1 = a_V_i_i_fu_682_p3;

assign a_V_i_i_fu_682_p3 = ((tmp_i_i_fu_676_p2[0:0] === 1'b1) ? tmp_4_fu_672_p1 : 23'd0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign conv_layer1_out_V_address1 = grp_pool_layer1_fu_511_image_V_address1;

assign conv_layer1_out_V_d0 = grp_conv_layer1_fu_519_output_V_d0;

assign conv_layer2_out_V_address1 = grp_pool_layer2_fu_429_image_V_address1;

assign conv_layer2_out_V_d0 = grp_conv_layer2_fu_437_output_V_d0;

assign exitcond5_i_fu_805_p2 = ((i_i1_reg_394 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond6_i_fu_695_p2 = ((i_i7_reg_348 == 7'd84) ? 1'b1 : 1'b0);

assign exitcond7_i_fu_561_p2 = ((i_i_reg_313 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_716_p2 = ((j_i1_reg_372 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond_i2_fu_826_p2 = ((j_i2_reg_418 == 7'd84) ? 1'b1 : 1'b0);

assign exitcond_i_fu_582_p2 = ((j_i_reg_337 == 10'd576) ? 1'b1 : 1'b0);

assign fc_layer1_weights_V_address0 = tmp_3_cast_fu_634_p1;

assign fc_layer2_weights_V_address0 = tmp_5_cast_fu_744_p1;

assign fc_layer3_out_V_address0 = fc_layer3_out_V_addr_reg_1087;

assign fc_layer3_weights_V_address0 = tmp_9_cast_fu_878_p1;

assign grp_conv_layer1_fu_519_ap_start = ap_reg_grp_conv_layer1_fu_519_ap_start;

assign grp_conv_layer2_fu_437_ap_start = ap_reg_grp_conv_layer2_fu_437_ap_start;

assign grp_pool_layer1_fu_511_ap_start = ap_reg_grp_pool_layer1_fu_511_ap_start;

assign grp_pool_layer2_fu_429_ap_start = ap_reg_grp_pool_layer2_fu_429_ap_start;

assign i_3_fu_701_p2 = (i_i7_reg_348 + 7'd1);

assign i_4_fu_811_p2 = (i_i1_reg_394 + 4'd1);

assign i_fu_567_p2 = (i_i_reg_313 + 7'd1);

assign j_3_fu_722_p2 = (j_i1_reg_372 + 7'd1);

assign j_4_fu_832_p2 = (j_i2_reg_418 + 7'd1);

assign j_fu_588_p2 = (j_i_reg_337 + 10'd1);

assign next_mul_fu_733_p2 = (phi_mul_reg_383 + 14'd84);

assign p_Val2_2_fu_656_p2 = ($signed(tmp_18_i_cast_fu_653_p1) + $signed(tmp_17_i_fu_645_p3));

assign p_Val2_5_fu_766_p2 = ($signed(tmp_13_i_cast_fu_763_p1) + $signed(tmp_12_i_fu_755_p3));

assign p_Val2_7_fu_889_p0 = fc_layer2_out_V_load_reg_1115;

assign p_Val2_7_fu_889_p1 = fc_layer3_weights_V_1_reg_1110;

assign p_Val2_7_fu_889_p2 = ($signed(p_Val2_7_fu_889_p0) * $signed(p_Val2_7_fu_889_p1));

assign p_Val2_8_fu_906_p2 = ($signed(tmp_8_i_cast_fu_903_p1) + $signed(tmp_7_i_fu_895_p3));

assign p_shl1_cast_fu_619_p1 = tmp_1_fu_611_p3;

assign p_shl2_cast_fu_851_p1 = tmp_6_fu_843_p3;

assign p_shl3_cast_fu_863_p1 = tmp_7_fu_855_p3;

assign p_shl_cast_fu_607_p1 = tmp_fu_599_p3;

assign pool_layer1_out_V_d0 = grp_pool_layer1_fu_511_output_V_d0;

assign pool_layer1_out_V_d1 = grp_pool_layer1_fu_511_output_V_d1;

assign pool_layer2_out_V_address1 = grp_pool_layer2_fu_429_output_V_address1;

assign pool_layer2_out_V_d0 = grp_pool_layer2_fu_429_output_V_d0;

assign pool_layer2_out_V_d1 = grp_pool_layer2_fu_429_output_V_d1;

assign tmp_10_fu_782_p1 = p_Val2_3_reg_359[22:0];

assign tmp_11_fu_922_p1 = p_Val2_6_reg_405[22:0];

assign tmp_12_i_fu_755_p3 = {{p_Val2_3_reg_359}, {20'd0}};

assign tmp_13_i_cast_fu_763_p1 = p_Val2_4_reg_1064;

assign tmp_17_i_fu_645_p3 = {{p_Val2_s_reg_324}, {20'd0}};

assign tmp_18_i_cast_fu_653_p1 = p_Val2_1_reg_1003;

assign tmp_1_fu_611_p3 = {{j_i_reg_337}, {3'd0}};

assign tmp_2_fu_623_p2 = (p_shl_cast_fu_607_p1 - p_shl1_cast_fu_619_p1);

assign tmp_3_cast_fu_634_p1 = $signed(tmp_3_fu_629_p2);

assign tmp_3_fu_629_p2 = (tmp_2_fu_623_p2 + tmp_i_cast_reg_965);

assign tmp_4_fu_672_p1 = p_Val2_s_reg_324[22:0];

assign tmp_5_cast_fu_744_p1 = tmp_5_fu_739_p2;

assign tmp_5_fu_739_p2 = (phi_mul_reg_383 + tmp_i9_cast_reg_1021);

assign tmp_6_fu_843_p3 = {{j_i2_reg_418}, {3'd0}};

assign tmp_7_fu_855_p3 = {{j_i2_reg_418}, {1'd0}};

assign tmp_7_i_fu_895_p3 = {{p_Val2_6_reg_405}, {20'd0}};

assign tmp_8_fu_867_p2 = (p_shl3_cast_fu_863_p1 + p_shl2_cast_fu_851_p1);

assign tmp_8_i_cast_fu_903_p1 = $signed(p_Val2_7_reg_1120);

assign tmp_9_cast_fu_878_p1 = tmp_9_fu_873_p2;

assign tmp_9_fu_873_p2 = (tmp_8_fu_867_p2 + tmp_i1_cast_reg_1082);

assign tmp_fu_599_p3 = {{j_i_reg_337}, {7'd0}};

assign tmp_i1_27_fu_817_p1 = i_i1_reg_394;

assign tmp_i1_cast_fu_822_p1 = i_i1_reg_394;

assign tmp_i1_fu_728_p1 = j_i1_reg_372;

assign tmp_i2_fu_838_p1 = j_i2_reg_418;

assign tmp_i9_cast_fu_712_p1 = i_i7_reg_348;

assign tmp_i9_fu_707_p1 = i_i7_reg_348;

assign tmp_i_21_fu_594_p1 = j_i_reg_337;

assign tmp_i_cast_fu_578_p1 = i_i_reg_313;

assign tmp_i_fu_573_p1 = i_i_reg_313;

assign tmp_i_i1_fu_786_p2 = (($signed(p_Val2_3_reg_359) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign tmp_i_i2_fu_926_p2 = (($signed(p_Val2_6_reg_405) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign tmp_i_i_fu_676_p2 = (($signed(p_Val2_s_reg_324) > $signed(24'd0)) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_i_cast_reg_965[17:7] <= 11'b00000000000;
    tmp_i9_cast_reg_1021[13:7] <= 7'b0000000;
    tmp_i1_cast_reg_1082[10:4] <= 7'b0000000;
end

endmodule //nnet
