// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_layer1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state15 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [23:0] output_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg output_V_ce0;
reg output_V_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] image_V_address0;
reg    image_V_ce0;
wire   [19:0] image_V_q0;
wire   [9:0] image_V_address1;
reg    image_V_ce1;
wire   [19:0] image_V_q1;
wire   [9:0] image_V_address2;
reg    image_V_ce2;
wire   [19:0] image_V_q2;
wire   [9:0] image_V_address3;
reg    image_V_ce3;
wire   [19:0] image_V_q3;
wire   [9:0] image_V_address4;
reg    image_V_ce4;
wire   [19:0] image_V_q4;
wire   [9:0] image_V_address5;
reg    image_V_ce5;
wire   [19:0] image_V_q5;
wire   [9:0] image_V_address6;
reg    image_V_ce6;
wire   [19:0] image_V_q6;
wire   [9:0] image_V_address7;
reg    image_V_ce7;
wire   [19:0] image_V_q7;
wire   [9:0] image_V_address8;
reg    image_V_ce8;
wire   [19:0] image_V_q8;
wire   [9:0] image_V_address9;
reg    image_V_ce9;
wire   [19:0] image_V_q9;
wire   [9:0] image_V_address10;
reg    image_V_ce10;
wire   [19:0] image_V_q10;
wire   [9:0] image_V_address11;
reg    image_V_ce11;
wire   [19:0] image_V_q11;
wire   [9:0] image_V_address12;
reg    image_V_ce12;
wire   [19:0] image_V_q12;
wire   [9:0] image_V_address13;
reg    image_V_ce13;
wire   [19:0] image_V_q13;
wire   [9:0] image_V_address14;
reg    image_V_ce14;
wire   [19:0] image_V_q14;
wire   [9:0] image_V_address15;
reg    image_V_ce15;
wire   [19:0] image_V_q15;
wire   [2:0] conv_layer1_weights_31_address0;
reg    conv_layer1_weights_31_ce0;
wire   [18:0] conv_layer1_weights_31_q0;
wire   [2:0] conv_layer1_weights_29_address0;
reg    conv_layer1_weights_29_ce0;
wire   [18:0] conv_layer1_weights_29_q0;
wire   [2:0] conv_layer1_weights_27_address0;
reg    conv_layer1_weights_27_ce0;
wire   [18:0] conv_layer1_weights_27_q0;
wire   [2:0] conv_layer1_weights_25_address0;
reg    conv_layer1_weights_25_ce0;
wire   [18:0] conv_layer1_weights_25_q0;
wire   [2:0] conv_layer1_weights_23_address0;
reg    conv_layer1_weights_23_ce0;
wire   [18:0] conv_layer1_weights_23_q0;
wire   [2:0] conv_layer1_weights_21_address0;
reg    conv_layer1_weights_21_ce0;
wire   [18:0] conv_layer1_weights_21_q0;
wire   [2:0] conv_layer1_weights_19_address0;
reg    conv_layer1_weights_19_ce0;
wire   [18:0] conv_layer1_weights_19_q0;
wire   [2:0] conv_layer1_weights_17_address0;
reg    conv_layer1_weights_17_ce0;
wire   [18:0] conv_layer1_weights_17_q0;
wire   [2:0] conv_layer1_weights_15_address0;
reg    conv_layer1_weights_15_ce0;
wire   [18:0] conv_layer1_weights_15_q0;
wire   [2:0] conv_layer1_weights_13_address0;
reg    conv_layer1_weights_13_ce0;
wire   [18:0] conv_layer1_weights_13_q0;
wire   [2:0] conv_layer1_weights_11_address0;
reg    conv_layer1_weights_11_ce0;
wire   [18:0] conv_layer1_weights_11_q0;
wire   [2:0] conv_layer1_weights_9_address0;
reg    conv_layer1_weights_9_ce0;
wire   [18:0] conv_layer1_weights_9_q0;
wire   [2:0] conv_layer1_weights_7_address0;
reg    conv_layer1_weights_7_ce0;
wire   [18:0] conv_layer1_weights_7_q0;
wire   [2:0] conv_layer1_weights_5_address0;
reg    conv_layer1_weights_5_ce0;
wire   [18:0] conv_layer1_weights_5_q0;
wire   [2:0] conv_layer1_weights_3_address0;
reg    conv_layer1_weights_3_ce0;
wire   [18:0] conv_layer1_weights_3_q0;
wire   [2:0] conv_layer1_weights_1_address0;
reg    conv_layer1_weights_1_ce0;
wire   [18:0] conv_layer1_weights_1_q0;
wire   [2:0] conv_layer1_bias_V_address0;
reg    conv_layer1_bias_V_ce0;
wire   [20:0] conv_layer1_bias_V_q0;
reg   [12:0] indvar_flatten2_reg_525;
reg   [4:0] i_reg_536;
reg   [12:0] contor_reg_548;
reg   [8:0] indvar_flatten_reg_559;
reg   [4:0] j_reg_570;
reg   [12:0] contor_1_reg_582;
reg   [3:0] filter_reg_594;
reg   [12:0] contor_2_reg_605;
wire   [4:0] i_6_fu_617_p2;
reg   [4:0] i_6_reg_1747;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] tmp_869_2_fu_623_p2;
reg   [4:0] tmp_869_2_reg_1754;
wire   [4:0] tmp_869_3_fu_629_p2;
reg   [4:0] tmp_869_3_reg_1762;
wire   [0:0] exitcond_flatten2_fu_635_p2;
reg   [0:0] exitcond_flatten2_reg_1770;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten2_reg_1770;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten2_reg_1770;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten2_reg_1770;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten2_reg_1770;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten2_reg_1770;
reg   [0:0] ap_reg_pp0_iter6_exitcond_flatten2_reg_1770;
reg   [0:0] ap_reg_pp0_iter7_exitcond_flatten2_reg_1770;
reg   [0:0] ap_reg_pp0_iter8_exitcond_flatten2_reg_1770;
reg   [0:0] ap_reg_pp0_iter9_exitcond_flatten2_reg_1770;
reg   [0:0] ap_reg_pp0_iter10_exitcond_flatten2_reg_1770;
reg   [0:0] ap_reg_pp0_iter11_exitcond_flatten2_reg_1770;
wire   [12:0] indvar_flatten_next2_fu_641_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [12:0] contor_5_dup_fu_647_p2;
reg   [12:0] contor_5_dup_reg_1779;
wire   [0:0] exitcond_flatten_fu_653_p2;
reg   [0:0] exitcond_flatten_reg_1785;
wire   [0:0] exitcond5_mid_fu_679_p2;
reg   [0:0] exitcond5_mid_reg_1798;
wire   [4:0] i_mid2_fu_685_p3;
reg   [4:0] i_mid2_reg_1808;
wire   [12:0] contor_mid2_fu_693_p3;
wire   [4:0] j_6_fu_701_p2;
reg   [4:0] j_6_reg_1819;
wire   [3:0] filter_mid2_fu_713_p3;
reg   [3:0] filter_mid2_reg_1827;
wire   [4:0] j_mid2_fu_721_p3;
reg   [4:0] j_mid2_reg_1832;
wire   [3:0] filter_2_fu_729_p2;
wire   [8:0] indvar_flatten_next_fu_741_p3;
wire   [12:0] contor_2_mid2_fu_875_p3;
reg   [12:0] contor_2_mid2_reg_1847;
reg   [12:0] ap_reg_pp0_iter2_contor_2_mid2_reg_1847;
reg   [12:0] ap_reg_pp0_iter3_contor_2_mid2_reg_1847;
reg   [12:0] ap_reg_pp0_iter4_contor_2_mid2_reg_1847;
reg   [12:0] ap_reg_pp0_iter5_contor_2_mid2_reg_1847;
reg   [12:0] ap_reg_pp0_iter6_contor_2_mid2_reg_1847;
reg   [12:0] ap_reg_pp0_iter7_contor_2_mid2_reg_1847;
reg   [12:0] ap_reg_pp0_iter8_contor_2_mid2_reg_1847;
reg   [12:0] ap_reg_pp0_iter9_contor_2_mid2_reg_1847;
reg   [12:0] ap_reg_pp0_iter10_contor_2_mid2_reg_1847;
reg   [12:0] ap_reg_pp0_iter11_contor_2_mid2_reg_1847;
wire   [9:0] tmp_93_cast_mid2_v_v_fu_888_p3;
reg   [9:0] tmp_93_cast_mid2_v_v_reg_1852;
wire   [9:0] tmp_93_1_cast_mid2_v_1_fu_929_p3;
reg   [9:0] tmp_93_1_cast_mid2_v_1_reg_1872;
reg   [9:0] ap_reg_pp0_iter2_tmp_93_1_cast_mid2_v_1_reg_1872;
reg   [9:0] ap_reg_pp0_iter3_tmp_93_1_cast_mid2_v_1_reg_1872;
wire   [9:0] tmp_93_2_cast_mid2_v_1_fu_943_p3;
reg   [9:0] tmp_93_2_cast_mid2_v_1_reg_1880;
reg   [9:0] ap_reg_pp0_iter2_tmp_93_2_cast_mid2_v_1_reg_1880;
reg   [9:0] ap_reg_pp0_iter3_tmp_93_2_cast_mid2_v_1_reg_1880;
reg   [9:0] ap_reg_pp0_iter4_tmp_93_2_cast_mid2_v_1_reg_1880;
reg   [9:0] ap_reg_pp0_iter5_tmp_93_2_cast_mid2_v_1_reg_1880;
wire   [9:0] tmp_93_3_cast_mid2_v_1_fu_957_p3;
reg   [9:0] tmp_93_3_cast_mid2_v_1_reg_1888;
reg   [9:0] ap_reg_pp0_iter2_tmp_93_3_cast_mid2_v_1_reg_1888;
reg   [9:0] ap_reg_pp0_iter3_tmp_93_3_cast_mid2_v_1_reg_1888;
reg   [9:0] ap_reg_pp0_iter4_tmp_93_3_cast_mid2_v_1_reg_1888;
reg   [9:0] ap_reg_pp0_iter5_tmp_93_3_cast_mid2_v_1_reg_1888;
reg   [9:0] ap_reg_pp0_iter6_tmp_93_3_cast_mid2_v_1_reg_1888;
reg   [9:0] ap_reg_pp0_iter7_tmp_93_3_cast_mid2_v_1_reg_1888;
wire   [12:0] contor_1_mid2_fu_964_p3;
reg   [12:0] contor_1_mid2_reg_1896;
reg    ap_enable_reg_pp0_iter1;
wire   [63:0] tmp_s_fu_971_p1;
reg   [63:0] tmp_s_reg_1901;
reg   [63:0] ap_reg_pp0_iter2_tmp_s_reg_1901;
reg   [63:0] ap_reg_pp0_iter3_tmp_s_reg_1901;
reg   [63:0] ap_reg_pp0_iter4_tmp_s_reg_1901;
reg   [63:0] ap_reg_pp0_iter5_tmp_s_reg_1901;
reg   [63:0] ap_reg_pp0_iter6_tmp_s_reg_1901;
wire   [12:0] tmp_23_fu_977_p2;
reg   [12:0] tmp_23_reg_1934;
reg   [19:0] image_V_load_reg_1939;
reg    ap_enable_reg_pp0_iter2;
reg   [19:0] image_V_load_245_reg_1944;
reg   [19:0] image_V_load_246_reg_1949;
reg  signed [18:0] conv_layer1_weights_1_reg_1964;
reg  signed [18:0] conv_layer1_weights_3_reg_1969;
reg  signed [18:0] conv_layer1_weights_5_reg_1974;
reg   [19:0] image_V_load_247_reg_1989;
reg    ap_enable_reg_pp0_iter3;
reg   [19:0] image_V_load_248_reg_1994;
wire  signed [38:0] p_Val2_24_0_1_fu_1657_p2;
reg  signed [38:0] p_Val2_24_0_1_reg_2009;
reg   [18:0] tmp_62_reg_2014;
wire  signed [38:0] p_Val2_24_0_2_fu_1663_p2;
reg  signed [38:0] p_Val2_24_0_2_reg_2019;
reg  signed [18:0] conv_layer1_weights_7_reg_2024;
reg  signed [18:0] conv_layer1_weights_9_reg_2029;
reg   [19:0] image_V_load_249_reg_2044;
reg    ap_enable_reg_pp0_iter4;
reg   [19:0] image_V_load_250_reg_2049;
wire  signed [38:0] p_Val2_24_0_3_fu_1669_p2;
reg  signed [38:0] p_Val2_24_0_3_reg_2064;
reg   [23:0] tmp_49_reg_2069;
wire  signed [38:0] p_Val2_24_1_fu_1675_p2;
reg  signed [38:0] p_Val2_24_1_reg_2074;
reg  signed [18:0] conv_layer1_weights_11_reg_2079;
reg  signed [18:0] conv_layer1_weights_13_reg_2084;
reg   [19:0] image_V_load_251_reg_2099;
reg    ap_enable_reg_pp0_iter5;
reg   [19:0] image_V_load_252_reg_2104;
wire  signed [38:0] p_Val2_24_1_1_fu_1681_p2;
reg  signed [38:0] p_Val2_24_1_1_reg_2119;
reg   [23:0] tmp_51_reg_2124;
wire  signed [38:0] p_Val2_24_1_2_fu_1687_p2;
reg  signed [38:0] p_Val2_24_1_2_reg_2129;
reg  signed [18:0] conv_layer1_weights_15_reg_2134;
reg  signed [18:0] conv_layer1_weights_17_reg_2139;
reg   [19:0] image_V_load_253_reg_2154;
reg    ap_enable_reg_pp0_iter6;
reg   [19:0] image_V_load_254_reg_2159;
wire  signed [38:0] p_Val2_24_1_3_fu_1693_p2;
reg  signed [38:0] p_Val2_24_1_3_reg_2174;
reg   [23:0] tmp_53_reg_2179;
wire  signed [38:0] p_Val2_24_2_fu_1699_p2;
reg  signed [38:0] p_Val2_24_2_reg_2184;
reg  signed [18:0] conv_layer1_weights_19_reg_2189;
reg  signed [18:0] conv_layer1_weights_21_reg_2194;
reg   [19:0] image_V_load_255_reg_2209;
reg    ap_enable_reg_pp0_iter7;
reg   [19:0] image_V_load_256_reg_2214;
wire  signed [38:0] p_Val2_24_2_1_fu_1705_p2;
reg  signed [38:0] p_Val2_24_2_1_reg_2229;
reg   [23:0] tmp_55_reg_2234;
wire  signed [38:0] p_Val2_24_2_2_fu_1711_p2;
reg  signed [38:0] p_Val2_24_2_2_reg_2239;
reg  signed [18:0] conv_layer1_weights_23_reg_2244;
reg  signed [18:0] conv_layer1_weights_25_reg_2249;
reg   [19:0] image_V_load_257_reg_2274;
reg    ap_enable_reg_pp0_iter8;
reg   [19:0] image_V_load_258_reg_2279;
wire  signed [38:0] p_Val2_24_2_3_fu_1717_p2;
reg  signed [38:0] p_Val2_24_2_3_reg_2289;
reg   [23:0] tmp_57_reg_2294;
wire  signed [38:0] p_Val2_24_3_fu_1723_p2;
reg  signed [38:0] p_Val2_24_3_reg_2299;
reg  signed [18:0] conv_layer1_weights_27_reg_2304;
reg  signed [18:0] conv_layer1_weights_29_reg_2309;
reg   [18:0] conv_layer1_weights_31_reg_2314;
reg  signed [18:0] ap_reg_pp0_iter9_conv_layer1_weights_31_reg_2314;
reg   [20:0] p_Val2_s_reg_2319;
reg   [20:0] ap_reg_pp0_iter9_p_Val2_s_reg_2319;
reg   [20:0] ap_reg_pp0_iter10_p_Val2_s_reg_2319;
reg   [19:0] image_V_load_259_reg_2325;
reg    ap_enable_reg_pp0_iter9;
wire  signed [38:0] p_Val2_24_3_1_fu_1729_p2;
reg  signed [38:0] p_Val2_24_3_1_reg_2330;
reg   [23:0] tmp_59_reg_2335;
wire  signed [38:0] p_Val2_24_3_2_fu_1735_p2;
reg  signed [38:0] p_Val2_24_3_2_reg_2340;
wire  signed [38:0] p_Val2_24_3_3_fu_1741_p2;
reg  signed [38:0] p_Val2_24_3_3_reg_2345;
reg   [23:0] tmp_61_reg_2350;
wire   [22:0] p_Val2_cast_34_fu_1623_p2;
reg   [22:0] p_Val2_cast_34_reg_2355;
wire   [0:0] tmp_i_fu_1629_p2;
reg   [0:0] tmp_i_reg_2360;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg   [4:0] ap_phi_mux_i_phi_fu_540_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_j_phi_fu_574_p4;
reg   [12:0] ap_phi_mux_contor_1_phi_fu_586_p4;
reg   [12:0] ap_phi_mux_contor_2_phi_fu_609_p4;
wire   [63:0] tmp_93_cast_mid2_v_fu_895_p1;
wire   [63:0] tmp_93_0_1_cast_mid2_4_fu_906_p1;
wire   [63:0] tmp_93_0_2_cast_mid2_4_fu_917_p1;
wire   [63:0] tmp_93_0_3_cast_mid2_4_fu_988_p1;
wire   [63:0] tmp_93_1_cast_mid2_v_fu_993_p1;
wire   [63:0] tmp_93_1_1_cast_mid2_4_fu_1011_p1;
wire   [63:0] tmp_93_1_2_cast_mid2_4_fu_1021_p1;
wire   [63:0] tmp_93_1_3_cast_mid2_4_fu_1055_p1;
wire   [63:0] tmp_93_2_cast_mid2_v_fu_1060_p1;
wire   [63:0] tmp_93_2_1_cast_mid2_4_fu_1138_p1;
wire   [63:0] tmp_93_2_2_cast_mid2_4_fu_1148_p1;
wire   [63:0] tmp_93_2_3_cast_mid2_4_fu_1223_p1;
wire   [63:0] tmp_93_3_cast_mid2_v_fu_1228_p1;
wire   [63:0] tmp_93_3_1_cast_mid2_4_fu_1302_p1;
wire   [63:0] tmp_93_3_2_cast_mid2_4_fu_1312_p1;
wire   [63:0] tmp_93_3_3_cast_mid2_4_fu_1387_p1;
wire   [63:0] tmp_24_fu_1635_p1;
wire   [0:0] exitcond_fu_673_p2;
wire   [0:0] not_exitcond_flatten_fu_667_p2;
wire   [4:0] j_mid_fu_659_p3;
wire   [0:0] tmp_fu_707_p2;
wire   [8:0] indvar_flatten_op_fu_735_p2;
wire   [4:0] tmp_869_3_mid1_fu_771_p2;
wire   [9:0] tmp_21_mid_fu_783_p3;
wire   [9:0] tmp_47_fu_790_p3;
wire   [9:0] tmp_90_1_mid_fu_805_p3;
wire   [9:0] tmp_90_s_fu_812_p3;
wire   [9:0] tmp_90_2_mid_fu_826_p3;
wire   [9:0] tmp_90_1_fu_833_p3;
wire   [9:0] tmp_90_3_mid_fu_847_p3;
wire   [9:0] tmp_90_2_fu_855_p3;
wire   [12:0] contor_1_mid_fu_749_p3;
wire   [12:0] tmp_dup_fu_869_p2;
wire   [12:0] contor_2_mid_fu_755_p3;
wire   [9:0] tmp_21_mid1_fu_882_p3;
wire   [9:0] tmp_93_cast_mid268_v_fu_798_p3;
wire   [9:0] tmp_93_0_1_cast_mid2_3_fu_900_p2;
wire   [9:0] tmp_93_0_2_cast_mid2_3_fu_911_p2;
wire   [4:0] tmp_869_1_mid2_fu_761_p3;
wire   [9:0] tmp_90_1_mid1_fu_922_p3;
wire   [9:0] tmp_93_1_cast_mid_fu_819_p3;
wire   [4:0] tmp_869_2_mid2_fu_766_p3;
wire   [9:0] tmp_90_2_mid1_fu_936_p3;
wire   [9:0] tmp_93_2_cast_mid_fu_840_p3;
wire   [4:0] tmp_869_3_mid2_fu_777_p3;
wire   [9:0] tmp_90_3_mid1_fu_950_p3;
wire   [9:0] tmp_93_3_cast_mid_fu_862_p3;
wire   [9:0] tmp_93_0_3_cast_mid2_3_fu_983_p2;
wire   [9:0] tmp_93_1_1_cast_mid2_3_fu_1006_p2;
wire   [9:0] tmp_93_1_2_cast_mid2_3_fu_1016_p2;
wire  signed [38:0] p_Val2_1_fu_1650_p2;
wire   [9:0] tmp_93_1_3_cast_mid2_3_fu_1050_p2;
wire   [38:0] tmp_63_fu_1067_p3;
wire  signed [43:0] p_Val2_24_0_1_cast_fu_1064_p1;
wire  signed [43:0] tmp_96_0_1_fu_1074_p1;
wire   [43:0] p_Val2_25_0_1_fu_1078_p2;
wire   [23:0] tmp_48_fu_1087_p4;
wire  signed [43:0] p_Val2_24_0_2_cast_fu_1084_p1;
wire   [43:0] tmp_96_0_2_fu_1097_p3;
wire   [43:0] p_Val2_25_0_2_fu_1105_p2;
wire   [9:0] tmp_93_2_1_cast_mid2_3_fu_1133_p2;
wire   [9:0] tmp_93_2_2_cast_mid2_3_fu_1143_p2;
wire  signed [43:0] p_Val2_24_0_3_cast_fu_1153_p1;
wire   [43:0] tmp_96_0_3_fu_1156_p3;
wire   [43:0] p_Val2_25_0_3_fu_1163_p2;
wire   [23:0] tmp_50_fu_1172_p4;
wire  signed [43:0] p_Val2_24_1_cast_fu_1169_p1;
wire   [43:0] tmp_96_1_fu_1182_p3;
wire   [43:0] p_Val2_25_1_fu_1190_p2;
wire   [9:0] tmp_93_2_3_cast_mid2_3_fu_1218_p2;
wire  signed [43:0] p_Val2_24_1_1_cast_fu_1232_p1;
wire   [43:0] tmp_96_1_1_fu_1235_p3;
wire   [43:0] p_Val2_25_1_1_fu_1242_p2;
wire   [23:0] tmp_52_fu_1251_p4;
wire  signed [43:0] p_Val2_24_1_2_cast_fu_1248_p1;
wire   [43:0] tmp_96_1_2_fu_1261_p3;
wire   [43:0] p_Val2_25_1_2_fu_1269_p2;
wire   [9:0] tmp_93_3_1_cast_mid2_3_fu_1297_p2;
wire   [9:0] tmp_93_3_2_cast_mid2_3_fu_1307_p2;
wire  signed [43:0] p_Val2_24_1_3_cast_fu_1317_p1;
wire   [43:0] tmp_96_1_3_fu_1320_p3;
wire   [43:0] p_Val2_25_1_3_fu_1327_p2;
wire   [23:0] tmp_54_fu_1336_p4;
wire  signed [43:0] p_Val2_24_2_cast_fu_1333_p1;
wire   [43:0] tmp_96_2_fu_1346_p3;
wire   [43:0] p_Val2_25_2_fu_1354_p2;
wire   [9:0] tmp_93_3_3_cast_mid2_3_fu_1382_p2;
wire  signed [43:0] p_Val2_24_2_1_cast_fu_1392_p1;
wire   [43:0] tmp_96_2_1_fu_1395_p3;
wire   [43:0] p_Val2_25_2_1_fu_1402_p2;
wire   [23:0] tmp_56_fu_1411_p4;
wire  signed [43:0] p_Val2_24_2_2_cast_fu_1408_p1;
wire   [43:0] tmp_96_2_2_fu_1421_p3;
wire   [43:0] p_Val2_25_2_2_fu_1429_p2;
wire  signed [43:0] p_Val2_24_2_3_cast_fu_1457_p1;
wire   [43:0] tmp_96_2_3_fu_1460_p3;
wire   [43:0] p_Val2_25_2_3_fu_1467_p2;
wire   [23:0] tmp_58_fu_1476_p4;
wire  signed [43:0] p_Val2_24_3_cast_fu_1473_p1;
wire   [43:0] tmp_96_3_fu_1486_p3;
wire   [43:0] p_Val2_25_3_fu_1494_p2;
wire  signed [43:0] p_Val2_24_3_1_cast_fu_1519_p1;
wire   [43:0] tmp_96_3_1_fu_1522_p3;
wire   [43:0] p_Val2_25_3_1_fu_1529_p2;
wire   [23:0] tmp_60_fu_1538_p4;
wire  signed [43:0] p_Val2_24_3_2_cast_fu_1535_p1;
wire   [43:0] tmp_96_3_2_fu_1548_p3;
wire   [43:0] p_Val2_25_3_2_fu_1556_p2;
wire  signed [43:0] p_Val2_24_3_3_cast_fu_1575_p1;
wire   [43:0] tmp_96_3_3_fu_1578_p3;
wire   [43:0] p_Val2_25_3_3_fu_1585_p2;
wire   [23:0] sum_V_3_3_fu_1591_p4;
wire  signed [23:0] p_Val2_cast_fu_1601_p1;
wire  signed [22:0] tmp_4_fu_1614_p1;
wire   [22:0] tmp_3_fu_1604_p4;
wire   [23:0] p_Val2_s_33_fu_1617_p2;
wire   [22:0] a_V_i_fu_1639_p3;
wire   [19:0] p_Val2_1_fu_1650_p1;
wire   [19:0] p_Val2_24_0_1_fu_1657_p1;
wire   [19:0] p_Val2_24_0_2_fu_1663_p1;
wire   [19:0] p_Val2_24_0_3_fu_1669_p1;
wire   [19:0] p_Val2_24_1_fu_1675_p1;
wire   [19:0] p_Val2_24_1_1_fu_1681_p1;
wire   [19:0] p_Val2_24_1_2_fu_1687_p1;
wire   [19:0] p_Val2_24_1_3_fu_1693_p1;
wire   [19:0] p_Val2_24_2_fu_1699_p1;
wire   [19:0] p_Val2_24_2_1_fu_1705_p1;
wire   [19:0] p_Val2_24_2_2_fu_1711_p1;
wire   [19:0] p_Val2_24_2_3_fu_1717_p1;
wire   [19:0] p_Val2_24_3_fu_1723_p1;
wire   [19:0] p_Val2_24_3_1_fu_1729_p1;
wire   [19:0] p_Val2_24_3_2_fu_1735_p1;
wire   [19:0] p_Val2_24_3_3_fu_1741_p1;
wire    ap_CS_fsm_state15;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [38:0] p_Val2_1_fu_1650_p10;
wire   [38:0] p_Val2_24_0_1_fu_1657_p10;
wire   [38:0] p_Val2_24_0_2_fu_1663_p10;
wire   [38:0] p_Val2_24_0_3_fu_1669_p10;
wire   [38:0] p_Val2_24_1_1_fu_1681_p10;
wire   [38:0] p_Val2_24_1_2_fu_1687_p10;
wire   [38:0] p_Val2_24_1_3_fu_1693_p10;
wire   [38:0] p_Val2_24_1_fu_1675_p10;
wire   [38:0] p_Val2_24_2_1_fu_1705_p10;
wire   [38:0] p_Val2_24_2_2_fu_1711_p10;
wire   [38:0] p_Val2_24_2_3_fu_1717_p10;
wire   [38:0] p_Val2_24_2_fu_1699_p10;
wire   [38:0] p_Val2_24_3_1_fu_1729_p10;
wire   [38:0] p_Val2_24_3_2_fu_1735_p10;
wire   [38:0] p_Val2_24_3_3_fu_1741_p10;
wire   [38:0] p_Val2_24_3_fu_1723_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
end

conv_layer1_image_V #(
    .DataWidth( 20 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
image_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(image_V_address0),
    .ce0(image_V_ce0),
    .q0(image_V_q0),
    .address1(image_V_address1),
    .ce1(image_V_ce1),
    .q1(image_V_q1),
    .address2(image_V_address2),
    .ce2(image_V_ce2),
    .q2(image_V_q2),
    .address3(image_V_address3),
    .ce3(image_V_ce3),
    .q3(image_V_q3),
    .address4(image_V_address4),
    .ce4(image_V_ce4),
    .q4(image_V_q4),
    .address5(image_V_address5),
    .ce5(image_V_ce5),
    .q5(image_V_q5),
    .address6(image_V_address6),
    .ce6(image_V_ce6),
    .q6(image_V_q6),
    .address7(image_V_address7),
    .ce7(image_V_ce7),
    .q7(image_V_q7),
    .address8(image_V_address8),
    .ce8(image_V_ce8),
    .q8(image_V_q8),
    .address9(image_V_address9),
    .ce9(image_V_ce9),
    .q9(image_V_q9),
    .address10(image_V_address10),
    .ce10(image_V_ce10),
    .q10(image_V_q10),
    .address11(image_V_address11),
    .ce11(image_V_ce11),
    .q11(image_V_q11),
    .address12(image_V_address12),
    .ce12(image_V_ce12),
    .q12(image_V_q12),
    .address13(image_V_address13),
    .ce13(image_V_ce13),
    .q13(image_V_q13),
    .address14(image_V_address14),
    .ce14(image_V_ce14),
    .q14(image_V_q14),
    .address15(image_V_address15),
    .ce15(image_V_ce15),
    .q15(image_V_q15)
);

conv_layer1_conv_bkb #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_31_address0),
    .ce0(conv_layer1_weights_31_ce0),
    .q0(conv_layer1_weights_31_q0)
);

conv_layer1_conv_cud #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_29_address0),
    .ce0(conv_layer1_weights_29_ce0),
    .q0(conv_layer1_weights_29_q0)
);

conv_layer1_conv_dEe #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_27_address0),
    .ce0(conv_layer1_weights_27_ce0),
    .q0(conv_layer1_weights_27_q0)
);

conv_layer1_conv_eOg #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_25_address0),
    .ce0(conv_layer1_weights_25_ce0),
    .q0(conv_layer1_weights_25_q0)
);

conv_layer1_conv_fYi #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_23_address0),
    .ce0(conv_layer1_weights_23_ce0),
    .q0(conv_layer1_weights_23_q0)
);

conv_layer1_conv_g8j #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_21_address0),
    .ce0(conv_layer1_weights_21_ce0),
    .q0(conv_layer1_weights_21_q0)
);

conv_layer1_conv_hbi #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_19_address0),
    .ce0(conv_layer1_weights_19_ce0),
    .q0(conv_layer1_weights_19_q0)
);

conv_layer1_conv_ibs #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_17_address0),
    .ce0(conv_layer1_weights_17_ce0),
    .q0(conv_layer1_weights_17_q0)
);

conv_layer1_conv_jbC #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_15_address0),
    .ce0(conv_layer1_weights_15_ce0),
    .q0(conv_layer1_weights_15_q0)
);

conv_layer1_conv_kbM #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_13_address0),
    .ce0(conv_layer1_weights_13_ce0),
    .q0(conv_layer1_weights_13_q0)
);

conv_layer1_conv_lbW #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_11_address0),
    .ce0(conv_layer1_weights_11_ce0),
    .q0(conv_layer1_weights_11_q0)
);

conv_layer1_conv_mb6 #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_9_address0),
    .ce0(conv_layer1_weights_9_ce0),
    .q0(conv_layer1_weights_9_q0)
);

conv_layer1_conv_ncg #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_7_address0),
    .ce0(conv_layer1_weights_7_ce0),
    .q0(conv_layer1_weights_7_q0)
);

conv_layer1_conv_ocq #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_5_address0),
    .ce0(conv_layer1_weights_5_ce0),
    .q0(conv_layer1_weights_5_q0)
);

conv_layer1_conv_pcA #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_3_address0),
    .ce0(conv_layer1_weights_3_ce0),
    .q0(conv_layer1_weights_3_q0)
);

conv_layer1_conv_qcK #(
    .DataWidth( 19 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_weights_1_address0),
    .ce0(conv_layer1_weights_1_ce0),
    .q0(conv_layer1_weights_1_q0)
);

conv_layer1_conv_rcU #(
    .DataWidth( 21 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_layer1_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_layer1_bias_V_address0),
    .ce0(conv_layer1_bias_V_ce0),
    .q0(conv_layer1_bias_V_q0)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U1(
    .din0(conv_layer1_weights_1_reg_1964),
    .din1(p_Val2_1_fu_1650_p1),
    .dout(p_Val2_1_fu_1650_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U2(
    .din0(conv_layer1_weights_3_reg_1969),
    .din1(p_Val2_24_0_1_fu_1657_p1),
    .dout(p_Val2_24_0_1_fu_1657_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U3(
    .din0(conv_layer1_weights_5_reg_1974),
    .din1(p_Val2_24_0_2_fu_1663_p1),
    .dout(p_Val2_24_0_2_fu_1663_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U4(
    .din0(conv_layer1_weights_7_reg_2024),
    .din1(p_Val2_24_0_3_fu_1669_p1),
    .dout(p_Val2_24_0_3_fu_1669_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U5(
    .din0(conv_layer1_weights_9_reg_2029),
    .din1(p_Val2_24_1_fu_1675_p1),
    .dout(p_Val2_24_1_fu_1675_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U6(
    .din0(conv_layer1_weights_11_reg_2079),
    .din1(p_Val2_24_1_1_fu_1681_p1),
    .dout(p_Val2_24_1_1_fu_1681_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U7(
    .din0(conv_layer1_weights_13_reg_2084),
    .din1(p_Val2_24_1_2_fu_1687_p1),
    .dout(p_Val2_24_1_2_fu_1687_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U8(
    .din0(conv_layer1_weights_15_reg_2134),
    .din1(p_Val2_24_1_3_fu_1693_p1),
    .dout(p_Val2_24_1_3_fu_1693_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U9(
    .din0(conv_layer1_weights_17_reg_2139),
    .din1(p_Val2_24_2_fu_1699_p1),
    .dout(p_Val2_24_2_fu_1699_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U10(
    .din0(conv_layer1_weights_19_reg_2189),
    .din1(p_Val2_24_2_1_fu_1705_p1),
    .dout(p_Val2_24_2_1_fu_1705_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U11(
    .din0(conv_layer1_weights_21_reg_2194),
    .din1(p_Val2_24_2_2_fu_1711_p1),
    .dout(p_Val2_24_2_2_fu_1711_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U12(
    .din0(conv_layer1_weights_23_reg_2244),
    .din1(p_Val2_24_2_3_fu_1717_p1),
    .dout(p_Val2_24_2_3_fu_1717_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U13(
    .din0(conv_layer1_weights_25_reg_2249),
    .din1(p_Val2_24_3_fu_1723_p1),
    .dout(p_Val2_24_3_fu_1723_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U14(
    .din0(conv_layer1_weights_27_reg_2304),
    .din1(p_Val2_24_3_1_fu_1729_p1),
    .dout(p_Val2_24_3_1_fu_1729_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U15(
    .din0(conv_layer1_weights_29_reg_2309),
    .din1(p_Val2_24_3_2_fu_1735_p1),
    .dout(p_Val2_24_3_2_fu_1735_p2)
);

nnet_mul_mul_19s_sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 39 ))
nnet_mul_mul_19s_sc4_U16(
    .din0(ap_reg_pp0_iter9_conv_layer1_weights_31_reg_2314),
    .din1(p_Val2_24_3_3_fu_1741_p1),
    .dout(p_Val2_24_3_3_fu_1741_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        contor_1_reg_582 <= contor_1_mid2_reg_1896;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        contor_1_reg_582 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        contor_2_reg_605 <= tmp_23_reg_1934;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        contor_2_reg_605 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_fu_635_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        contor_reg_548 <= contor_mid2_fu_693_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        contor_reg_548 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_fu_635_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_reg_594 <= filter_2_fu_729_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        filter_reg_594 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_536 <= i_mid2_reg_1808;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_536 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_fu_635_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten2_reg_525 <= indvar_flatten_next2_fu_641_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten2_reg_525 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_fu_635_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_559 <= indvar_flatten_next_fu_741_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_559 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_570 <= j_mid2_reg_1832;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_570 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter10_contor_2_mid2_reg_1847 <= ap_reg_pp0_iter9_contor_2_mid2_reg_1847;
        ap_reg_pp0_iter10_exitcond_flatten2_reg_1770 <= ap_reg_pp0_iter9_exitcond_flatten2_reg_1770;
        ap_reg_pp0_iter10_p_Val2_s_reg_2319 <= ap_reg_pp0_iter9_p_Val2_s_reg_2319;
        ap_reg_pp0_iter11_contor_2_mid2_reg_1847 <= ap_reg_pp0_iter10_contor_2_mid2_reg_1847;
        ap_reg_pp0_iter11_exitcond_flatten2_reg_1770 <= ap_reg_pp0_iter10_exitcond_flatten2_reg_1770;
        ap_reg_pp0_iter2_contor_2_mid2_reg_1847 <= contor_2_mid2_reg_1847;
        ap_reg_pp0_iter2_exitcond_flatten2_reg_1770 <= ap_reg_pp0_iter1_exitcond_flatten2_reg_1770;
        ap_reg_pp0_iter2_tmp_93_1_cast_mid2_v_1_reg_1872 <= tmp_93_1_cast_mid2_v_1_reg_1872;
        ap_reg_pp0_iter2_tmp_93_2_cast_mid2_v_1_reg_1880 <= tmp_93_2_cast_mid2_v_1_reg_1880;
        ap_reg_pp0_iter2_tmp_93_3_cast_mid2_v_1_reg_1888 <= tmp_93_3_cast_mid2_v_1_reg_1888;
        ap_reg_pp0_iter2_tmp_s_reg_1901[3 : 0] <= tmp_s_reg_1901[3 : 0];
        ap_reg_pp0_iter3_contor_2_mid2_reg_1847 <= ap_reg_pp0_iter2_contor_2_mid2_reg_1847;
        ap_reg_pp0_iter3_exitcond_flatten2_reg_1770 <= ap_reg_pp0_iter2_exitcond_flatten2_reg_1770;
        ap_reg_pp0_iter3_tmp_93_1_cast_mid2_v_1_reg_1872 <= ap_reg_pp0_iter2_tmp_93_1_cast_mid2_v_1_reg_1872;
        ap_reg_pp0_iter3_tmp_93_2_cast_mid2_v_1_reg_1880 <= ap_reg_pp0_iter2_tmp_93_2_cast_mid2_v_1_reg_1880;
        ap_reg_pp0_iter3_tmp_93_3_cast_mid2_v_1_reg_1888 <= ap_reg_pp0_iter2_tmp_93_3_cast_mid2_v_1_reg_1888;
        ap_reg_pp0_iter3_tmp_s_reg_1901[3 : 0] <= ap_reg_pp0_iter2_tmp_s_reg_1901[3 : 0];
        ap_reg_pp0_iter4_contor_2_mid2_reg_1847 <= ap_reg_pp0_iter3_contor_2_mid2_reg_1847;
        ap_reg_pp0_iter4_exitcond_flatten2_reg_1770 <= ap_reg_pp0_iter3_exitcond_flatten2_reg_1770;
        ap_reg_pp0_iter4_tmp_93_2_cast_mid2_v_1_reg_1880 <= ap_reg_pp0_iter3_tmp_93_2_cast_mid2_v_1_reg_1880;
        ap_reg_pp0_iter4_tmp_93_3_cast_mid2_v_1_reg_1888 <= ap_reg_pp0_iter3_tmp_93_3_cast_mid2_v_1_reg_1888;
        ap_reg_pp0_iter4_tmp_s_reg_1901[3 : 0] <= ap_reg_pp0_iter3_tmp_s_reg_1901[3 : 0];
        ap_reg_pp0_iter5_contor_2_mid2_reg_1847 <= ap_reg_pp0_iter4_contor_2_mid2_reg_1847;
        ap_reg_pp0_iter5_exitcond_flatten2_reg_1770 <= ap_reg_pp0_iter4_exitcond_flatten2_reg_1770;
        ap_reg_pp0_iter5_tmp_93_2_cast_mid2_v_1_reg_1880 <= ap_reg_pp0_iter4_tmp_93_2_cast_mid2_v_1_reg_1880;
        ap_reg_pp0_iter5_tmp_93_3_cast_mid2_v_1_reg_1888 <= ap_reg_pp0_iter4_tmp_93_3_cast_mid2_v_1_reg_1888;
        ap_reg_pp0_iter5_tmp_s_reg_1901[3 : 0] <= ap_reg_pp0_iter4_tmp_s_reg_1901[3 : 0];
        ap_reg_pp0_iter6_contor_2_mid2_reg_1847 <= ap_reg_pp0_iter5_contor_2_mid2_reg_1847;
        ap_reg_pp0_iter6_exitcond_flatten2_reg_1770 <= ap_reg_pp0_iter5_exitcond_flatten2_reg_1770;
        ap_reg_pp0_iter6_tmp_93_3_cast_mid2_v_1_reg_1888 <= ap_reg_pp0_iter5_tmp_93_3_cast_mid2_v_1_reg_1888;
        ap_reg_pp0_iter6_tmp_s_reg_1901[3 : 0] <= ap_reg_pp0_iter5_tmp_s_reg_1901[3 : 0];
        ap_reg_pp0_iter7_contor_2_mid2_reg_1847 <= ap_reg_pp0_iter6_contor_2_mid2_reg_1847;
        ap_reg_pp0_iter7_exitcond_flatten2_reg_1770 <= ap_reg_pp0_iter6_exitcond_flatten2_reg_1770;
        ap_reg_pp0_iter7_tmp_93_3_cast_mid2_v_1_reg_1888 <= ap_reg_pp0_iter6_tmp_93_3_cast_mid2_v_1_reg_1888;
        ap_reg_pp0_iter8_contor_2_mid2_reg_1847 <= ap_reg_pp0_iter7_contor_2_mid2_reg_1847;
        ap_reg_pp0_iter8_exitcond_flatten2_reg_1770 <= ap_reg_pp0_iter7_exitcond_flatten2_reg_1770;
        ap_reg_pp0_iter9_contor_2_mid2_reg_1847 <= ap_reg_pp0_iter8_contor_2_mid2_reg_1847;
        ap_reg_pp0_iter9_conv_layer1_weights_31_reg_2314 <= conv_layer1_weights_31_reg_2314;
        ap_reg_pp0_iter9_exitcond_flatten2_reg_1770 <= ap_reg_pp0_iter8_exitcond_flatten2_reg_1770;
        ap_reg_pp0_iter9_p_Val2_s_reg_2319 <= p_Val2_s_reg_2319;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_exitcond_flatten2_reg_1770 <= exitcond_flatten2_reg_1770;
        exitcond_flatten2_reg_1770 <= exitcond_flatten2_fu_635_p2;
        i_6_reg_1747 <= i_6_fu_617_p2;
        tmp_869_2_reg_1754 <= tmp_869_2_fu_623_p2;
        tmp_869_3_reg_1762 <= tmp_869_3_fu_629_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        contor_1_mid2_reg_1896 <= contor_1_mid2_fu_964_p3;
        tmp_23_reg_1934 <= tmp_23_fu_977_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        contor_2_mid2_reg_1847 <= contor_2_mid2_fu_875_p3;
        tmp_93_1_cast_mid2_v_1_reg_1872 <= tmp_93_1_cast_mid2_v_1_fu_929_p3;
        tmp_93_2_cast_mid2_v_1_reg_1880 <= tmp_93_2_cast_mid2_v_1_fu_943_p3;
        tmp_93_3_cast_mid2_v_1_reg_1888 <= tmp_93_3_cast_mid2_v_1_fu_957_p3;
        tmp_93_cast_mid2_v_v_reg_1852 <= tmp_93_cast_mid2_v_v_fu_888_p3;
        tmp_s_reg_1901[3 : 0] <= tmp_s_fu_971_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_fu_635_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        contor_5_dup_reg_1779 <= contor_5_dup_fu_647_p2;
        exitcond5_mid_reg_1798 <= exitcond5_mid_fu_679_p2;
        exitcond_flatten_reg_1785 <= exitcond_flatten_fu_653_p2;
        filter_mid2_reg_1827 <= filter_mid2_fu_713_p3;
        j_6_reg_1819 <= j_6_fu_701_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_layer1_weights_11_reg_2079 <= conv_layer1_weights_21_q0;
        conv_layer1_weights_13_reg_2084 <= conv_layer1_weights_19_q0;
        p_Val2_24_0_3_reg_2064 <= p_Val2_24_0_3_fu_1669_p2;
        p_Val2_24_1_reg_2074 <= p_Val2_24_1_fu_1675_p2;
        tmp_49_reg_2069 <= {{p_Val2_25_0_2_fu_1105_p2[43:20]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_layer1_weights_15_reg_2134 <= conv_layer1_weights_17_q0;
        conv_layer1_weights_17_reg_2139 <= conv_layer1_weights_15_q0;
        p_Val2_24_1_1_reg_2119 <= p_Val2_24_1_1_fu_1681_p2;
        p_Val2_24_1_2_reg_2129 <= p_Val2_24_1_2_fu_1687_p2;
        tmp_51_reg_2124 <= {{p_Val2_25_1_fu_1190_p2[43:20]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter5_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_layer1_weights_19_reg_2189 <= conv_layer1_weights_13_q0;
        conv_layer1_weights_21_reg_2194 <= conv_layer1_weights_11_q0;
        p_Val2_24_1_3_reg_2174 <= p_Val2_24_1_3_fu_1693_p2;
        p_Val2_24_2_reg_2184 <= p_Val2_24_2_fu_1699_p2;
        tmp_53_reg_2179 <= {{p_Val2_25_1_2_fu_1269_p2[43:20]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_layer1_weights_1_reg_1964 <= conv_layer1_weights_31_q0;
        conv_layer1_weights_3_reg_1969 <= conv_layer1_weights_29_q0;
        conv_layer1_weights_5_reg_1974 <= conv_layer1_weights_27_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter6_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_layer1_weights_23_reg_2244 <= conv_layer1_weights_9_q0;
        conv_layer1_weights_25_reg_2249 <= conv_layer1_weights_7_q0;
        p_Val2_24_2_1_reg_2229 <= p_Val2_24_2_1_fu_1705_p2;
        p_Val2_24_2_2_reg_2239 <= p_Val2_24_2_2_fu_1711_p2;
        tmp_55_reg_2234 <= {{p_Val2_25_2_fu_1354_p2[43:20]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter7_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_layer1_weights_27_reg_2304 <= conv_layer1_weights_5_q0;
        conv_layer1_weights_29_reg_2309 <= conv_layer1_weights_3_q0;
        conv_layer1_weights_31_reg_2314 <= conv_layer1_weights_1_q0;
        p_Val2_24_2_3_reg_2289 <= p_Val2_24_2_3_fu_1717_p2;
        p_Val2_24_3_reg_2299 <= p_Val2_24_3_fu_1723_p2;
        p_Val2_s_reg_2319 <= conv_layer1_bias_V_q0;
        tmp_57_reg_2294 <= {{p_Val2_25_2_2_fu_1429_p2[43:20]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_layer1_weights_7_reg_2024 <= conv_layer1_weights_25_q0;
        conv_layer1_weights_9_reg_2029 <= conv_layer1_weights_23_q0;
        p_Val2_24_0_1_reg_2009 <= p_Val2_24_0_1_fu_1657_p2;
        p_Val2_24_0_2_reg_2019 <= p_Val2_24_0_2_fu_1663_p2;
        tmp_62_reg_2014 <= {{p_Val2_1_fu_1650_p2[38:20]}};
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_fu_635_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_mid2_reg_1808 <= i_mid2_fu_685_p3;
        j_mid2_reg_1832 <= j_mid2_fu_721_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        image_V_load_245_reg_1944 <= image_V_q1;
        image_V_load_246_reg_1949 <= image_V_q2;
        image_V_load_reg_1939 <= image_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        image_V_load_247_reg_1989 <= image_V_q3;
        image_V_load_248_reg_1994 <= image_V_q4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        image_V_load_249_reg_2044 <= image_V_q5;
        image_V_load_250_reg_2049 <= image_V_q6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        image_V_load_251_reg_2099 <= image_V_q7;
        image_V_load_252_reg_2104 <= image_V_q8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter5_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        image_V_load_253_reg_2154 <= image_V_q9;
        image_V_load_254_reg_2159 <= image_V_q10;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter6_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        image_V_load_255_reg_2209 <= image_V_q11;
        image_V_load_256_reg_2214 <= image_V_q12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter7_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        image_V_load_257_reg_2274 <= image_V_q13;
        image_V_load_258_reg_2279 <= image_V_q14;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter8_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        image_V_load_259_reg_2325 <= image_V_q15;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter8_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_24_3_1_reg_2330 <= p_Val2_24_3_1_fu_1729_p2;
        p_Val2_24_3_2_reg_2340 <= p_Val2_24_3_2_fu_1735_p2;
        tmp_59_reg_2335 <= {{p_Val2_25_3_fu_1494_p2[43:20]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter9_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_24_3_3_reg_2345 <= p_Val2_24_3_3_fu_1741_p2;
        tmp_61_reg_2350 <= {{p_Val2_25_3_2_fu_1556_p2[43:20]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter10_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_cast_34_reg_2355 <= p_Val2_cast_34_fu_1623_p2;
        tmp_i_reg_2360 <= tmp_i_fu_1629_p2;
    end
end

always @ (*) begin
    if ((exitcond_flatten2_fu_635_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_1770 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_contor_1_phi_fu_586_p4 = contor_1_mid2_reg_1896;
    end else begin
        ap_phi_mux_contor_1_phi_fu_586_p4 = contor_1_reg_582;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_reg_pp0_iter1_exitcond_flatten2_reg_1770 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_contor_2_phi_fu_609_p4 = tmp_23_reg_1934;
    end else begin
        ap_phi_mux_contor_2_phi_fu_609_p4 = contor_2_reg_605;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten2_reg_1770 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_540_p4 = i_mid2_reg_1808;
    end else begin
        ap_phi_mux_i_phi_fu_540_p4 = i_reg_536;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten2_reg_1770 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j_phi_fu_574_p4 = j_mid2_reg_1832;
    end else begin
        ap_phi_mux_j_phi_fu_574_p4 = j_reg_570;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        conv_layer1_bias_V_ce0 = 1'b1;
    end else begin
        conv_layer1_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        conv_layer1_weights_11_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        conv_layer1_weights_13_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        conv_layer1_weights_15_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        conv_layer1_weights_17_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        conv_layer1_weights_19_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        conv_layer1_weights_1_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        conv_layer1_weights_21_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer1_weights_23_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_layer1_weights_25_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer1_weights_27_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer1_weights_29_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_layer1_weights_31_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        conv_layer1_weights_3_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        conv_layer1_weights_5_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        conv_layer1_weights_7_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        conv_layer1_weights_9_ce0 = 1'b1;
    end else begin
        conv_layer1_weights_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_V_ce0 = 1'b1;
    end else begin
        image_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_V_ce1 = 1'b1;
    end else begin
        image_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        image_V_ce10 = 1'b1;
    end else begin
        image_V_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        image_V_ce11 = 1'b1;
    end else begin
        image_V_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        image_V_ce12 = 1'b1;
    end else begin
        image_V_ce12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        image_V_ce13 = 1'b1;
    end else begin
        image_V_ce13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        image_V_ce14 = 1'b1;
    end else begin
        image_V_ce14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        image_V_ce15 = 1'b1;
    end else begin
        image_V_ce15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_V_ce2 = 1'b1;
    end else begin
        image_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        image_V_ce3 = 1'b1;
    end else begin
        image_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        image_V_ce4 = 1'b1;
    end else begin
        image_V_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        image_V_ce5 = 1'b1;
    end else begin
        image_V_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        image_V_ce6 = 1'b1;
    end else begin
        image_V_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        image_V_ce7 = 1'b1;
    end else begin
        image_V_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        image_V_ce8 = 1'b1;
    end else begin
        image_V_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        image_V_ce9 = 1'b1;
    end else begin
        image_V_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter11_exitcond_flatten2_reg_1770 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten2_fu_635_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten2_fu_635_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_V_i_fu_1639_p3 = ((tmp_i_reg_2360[0:0] === 1'b1) ? p_Val2_cast_34_reg_2355 : 23'd0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign contor_1_mid2_fu_964_p3 = ((exitcond5_mid_reg_1798[0:0] === 1'b1) ? tmp_dup_fu_869_p2 : contor_1_mid_fu_749_p3);

assign contor_1_mid_fu_749_p3 = ((exitcond_flatten_reg_1785[0:0] === 1'b1) ? contor_5_dup_reg_1779 : ap_phi_mux_contor_1_phi_fu_586_p4);

assign contor_2_mid2_fu_875_p3 = ((exitcond5_mid_reg_1798[0:0] === 1'b1) ? tmp_dup_fu_869_p2 : contor_2_mid_fu_755_p3);

assign contor_2_mid_fu_755_p3 = ((exitcond_flatten_reg_1785[0:0] === 1'b1) ? contor_5_dup_reg_1779 : ap_phi_mux_contor_2_phi_fu_609_p4);

assign contor_5_dup_fu_647_p2 = (contor_reg_548 + 13'd232);

assign contor_mid2_fu_693_p3 = ((exitcond_flatten_fu_653_p2[0:0] === 1'b1) ? contor_5_dup_fu_647_p2 : contor_reg_548);

assign conv_layer1_bias_V_address0 = ap_reg_pp0_iter6_tmp_s_reg_1901;

assign conv_layer1_weights_11_address0 = ap_reg_pp0_iter4_tmp_s_reg_1901;

assign conv_layer1_weights_13_address0 = ap_reg_pp0_iter4_tmp_s_reg_1901;

assign conv_layer1_weights_15_address0 = ap_reg_pp0_iter3_tmp_s_reg_1901;

assign conv_layer1_weights_17_address0 = ap_reg_pp0_iter3_tmp_s_reg_1901;

assign conv_layer1_weights_19_address0 = ap_reg_pp0_iter2_tmp_s_reg_1901;

assign conv_layer1_weights_1_address0 = ap_reg_pp0_iter6_tmp_s_reg_1901;

assign conv_layer1_weights_21_address0 = ap_reg_pp0_iter2_tmp_s_reg_1901;

assign conv_layer1_weights_23_address0 = tmp_s_reg_1901;

assign conv_layer1_weights_25_address0 = tmp_s_reg_1901;

assign conv_layer1_weights_27_address0 = tmp_s_fu_971_p1;

assign conv_layer1_weights_29_address0 = tmp_s_fu_971_p1;

assign conv_layer1_weights_31_address0 = tmp_s_fu_971_p1;

assign conv_layer1_weights_3_address0 = ap_reg_pp0_iter6_tmp_s_reg_1901;

assign conv_layer1_weights_5_address0 = ap_reg_pp0_iter6_tmp_s_reg_1901;

assign conv_layer1_weights_7_address0 = ap_reg_pp0_iter5_tmp_s_reg_1901;

assign conv_layer1_weights_9_address0 = ap_reg_pp0_iter5_tmp_s_reg_1901;

assign exitcond5_mid_fu_679_p2 = (not_exitcond_flatten_fu_667_p2 & exitcond_fu_673_p2);

assign exitcond_flatten2_fu_635_p2 = ((indvar_flatten2_reg_525 == 13'd6728) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_653_p2 = ((indvar_flatten_reg_559 == 9'd232) ? 1'b1 : 1'b0);

assign exitcond_fu_673_p2 = ((filter_reg_594 == 4'd8) ? 1'b1 : 1'b0);

assign filter_2_fu_729_p2 = (filter_mid2_fu_713_p3 + 4'd1);

assign filter_mid2_fu_713_p3 = ((tmp_fu_707_p2[0:0] === 1'b1) ? 4'd0 : filter_reg_594);

assign i_6_fu_617_p2 = (ap_phi_mux_i_phi_fu_540_p4 + 5'd1);

assign i_mid2_fu_685_p3 = ((exitcond_flatten_fu_653_p2[0:0] === 1'b1) ? i_6_fu_617_p2 : ap_phi_mux_i_phi_fu_540_p4);

assign image_V_address0 = tmp_93_cast_mid2_v_fu_895_p1;

assign image_V_address1 = tmp_93_0_1_cast_mid2_4_fu_906_p1;

assign image_V_address10 = tmp_93_2_2_cast_mid2_4_fu_1148_p1;

assign image_V_address11 = tmp_93_2_3_cast_mid2_4_fu_1223_p1;

assign image_V_address12 = tmp_93_3_cast_mid2_v_fu_1228_p1;

assign image_V_address13 = tmp_93_3_1_cast_mid2_4_fu_1302_p1;

assign image_V_address14 = tmp_93_3_2_cast_mid2_4_fu_1312_p1;

assign image_V_address15 = tmp_93_3_3_cast_mid2_4_fu_1387_p1;

assign image_V_address2 = tmp_93_0_2_cast_mid2_4_fu_917_p1;

assign image_V_address3 = tmp_93_0_3_cast_mid2_4_fu_988_p1;

assign image_V_address4 = tmp_93_1_cast_mid2_v_fu_993_p1;

assign image_V_address5 = tmp_93_1_1_cast_mid2_4_fu_1011_p1;

assign image_V_address6 = tmp_93_1_2_cast_mid2_4_fu_1021_p1;

assign image_V_address7 = tmp_93_1_3_cast_mid2_4_fu_1055_p1;

assign image_V_address8 = tmp_93_2_cast_mid2_v_fu_1060_p1;

assign image_V_address9 = tmp_93_2_1_cast_mid2_4_fu_1138_p1;

assign indvar_flatten_next2_fu_641_p2 = (indvar_flatten2_reg_525 + 13'd1);

assign indvar_flatten_next_fu_741_p3 = ((exitcond_flatten_fu_653_p2[0:0] === 1'b1) ? 9'd1 : indvar_flatten_op_fu_735_p2);

assign indvar_flatten_op_fu_735_p2 = (indvar_flatten_reg_559 + 9'd1);

assign j_6_fu_701_p2 = (j_mid_fu_659_p3 + 5'd1);

assign j_mid2_fu_721_p3 = ((exitcond5_mid_fu_679_p2[0:0] === 1'b1) ? j_6_fu_701_p2 : j_mid_fu_659_p3);

assign j_mid_fu_659_p3 = ((exitcond_flatten_fu_653_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_j_phi_fu_574_p4);

assign not_exitcond_flatten_fu_667_p2 = (exitcond_flatten_fu_653_p2 ^ 1'd1);

assign output_V_address0 = tmp_24_fu_1635_p1;

assign output_V_d0 = a_V_i_fu_1639_p3;

assign p_Val2_1_fu_1650_p1 = p_Val2_1_fu_1650_p10;

assign p_Val2_1_fu_1650_p10 = image_V_load_reg_1939;

assign p_Val2_24_0_1_cast_fu_1064_p1 = p_Val2_24_0_1_reg_2009;

assign p_Val2_24_0_1_fu_1657_p1 = p_Val2_24_0_1_fu_1657_p10;

assign p_Val2_24_0_1_fu_1657_p10 = image_V_load_245_reg_1944;

assign p_Val2_24_0_2_cast_fu_1084_p1 = p_Val2_24_0_2_reg_2019;

assign p_Val2_24_0_2_fu_1663_p1 = p_Val2_24_0_2_fu_1663_p10;

assign p_Val2_24_0_2_fu_1663_p10 = image_V_load_246_reg_1949;

assign p_Val2_24_0_3_cast_fu_1153_p1 = p_Val2_24_0_3_reg_2064;

assign p_Val2_24_0_3_fu_1669_p1 = p_Val2_24_0_3_fu_1669_p10;

assign p_Val2_24_0_3_fu_1669_p10 = image_V_load_247_reg_1989;

assign p_Val2_24_1_1_cast_fu_1232_p1 = p_Val2_24_1_1_reg_2119;

assign p_Val2_24_1_1_fu_1681_p1 = p_Val2_24_1_1_fu_1681_p10;

assign p_Val2_24_1_1_fu_1681_p10 = image_V_load_249_reg_2044;

assign p_Val2_24_1_2_cast_fu_1248_p1 = p_Val2_24_1_2_reg_2129;

assign p_Val2_24_1_2_fu_1687_p1 = p_Val2_24_1_2_fu_1687_p10;

assign p_Val2_24_1_2_fu_1687_p10 = image_V_load_250_reg_2049;

assign p_Val2_24_1_3_cast_fu_1317_p1 = p_Val2_24_1_3_reg_2174;

assign p_Val2_24_1_3_fu_1693_p1 = p_Val2_24_1_3_fu_1693_p10;

assign p_Val2_24_1_3_fu_1693_p10 = image_V_load_251_reg_2099;

assign p_Val2_24_1_cast_fu_1169_p1 = p_Val2_24_1_reg_2074;

assign p_Val2_24_1_fu_1675_p1 = p_Val2_24_1_fu_1675_p10;

assign p_Val2_24_1_fu_1675_p10 = image_V_load_248_reg_1994;

assign p_Val2_24_2_1_cast_fu_1392_p1 = p_Val2_24_2_1_reg_2229;

assign p_Val2_24_2_1_fu_1705_p1 = p_Val2_24_2_1_fu_1705_p10;

assign p_Val2_24_2_1_fu_1705_p10 = image_V_load_253_reg_2154;

assign p_Val2_24_2_2_cast_fu_1408_p1 = p_Val2_24_2_2_reg_2239;

assign p_Val2_24_2_2_fu_1711_p1 = p_Val2_24_2_2_fu_1711_p10;

assign p_Val2_24_2_2_fu_1711_p10 = image_V_load_254_reg_2159;

assign p_Val2_24_2_3_cast_fu_1457_p1 = p_Val2_24_2_3_reg_2289;

assign p_Val2_24_2_3_fu_1717_p1 = p_Val2_24_2_3_fu_1717_p10;

assign p_Val2_24_2_3_fu_1717_p10 = image_V_load_255_reg_2209;

assign p_Val2_24_2_cast_fu_1333_p1 = p_Val2_24_2_reg_2184;

assign p_Val2_24_2_fu_1699_p1 = p_Val2_24_2_fu_1699_p10;

assign p_Val2_24_2_fu_1699_p10 = image_V_load_252_reg_2104;

assign p_Val2_24_3_1_cast_fu_1519_p1 = p_Val2_24_3_1_reg_2330;

assign p_Val2_24_3_1_fu_1729_p1 = p_Val2_24_3_1_fu_1729_p10;

assign p_Val2_24_3_1_fu_1729_p10 = image_V_load_257_reg_2274;

assign p_Val2_24_3_2_cast_fu_1535_p1 = p_Val2_24_3_2_reg_2340;

assign p_Val2_24_3_2_fu_1735_p1 = p_Val2_24_3_2_fu_1735_p10;

assign p_Val2_24_3_2_fu_1735_p10 = image_V_load_258_reg_2279;

assign p_Val2_24_3_3_cast_fu_1575_p1 = p_Val2_24_3_3_reg_2345;

assign p_Val2_24_3_3_fu_1741_p1 = p_Val2_24_3_3_fu_1741_p10;

assign p_Val2_24_3_3_fu_1741_p10 = image_V_load_259_reg_2325;

assign p_Val2_24_3_cast_fu_1473_p1 = p_Val2_24_3_reg_2299;

assign p_Val2_24_3_fu_1723_p1 = p_Val2_24_3_fu_1723_p10;

assign p_Val2_24_3_fu_1723_p10 = image_V_load_256_reg_2214;

assign p_Val2_25_0_1_fu_1078_p2 = ($signed(p_Val2_24_0_1_cast_fu_1064_p1) + $signed(tmp_96_0_1_fu_1074_p1));

assign p_Val2_25_0_2_fu_1105_p2 = ($signed(p_Val2_24_0_2_cast_fu_1084_p1) + $signed(tmp_96_0_2_fu_1097_p3));

assign p_Val2_25_0_3_fu_1163_p2 = ($signed(p_Val2_24_0_3_cast_fu_1153_p1) + $signed(tmp_96_0_3_fu_1156_p3));

assign p_Val2_25_1_1_fu_1242_p2 = ($signed(p_Val2_24_1_1_cast_fu_1232_p1) + $signed(tmp_96_1_1_fu_1235_p3));

assign p_Val2_25_1_2_fu_1269_p2 = ($signed(p_Val2_24_1_2_cast_fu_1248_p1) + $signed(tmp_96_1_2_fu_1261_p3));

assign p_Val2_25_1_3_fu_1327_p2 = ($signed(p_Val2_24_1_3_cast_fu_1317_p1) + $signed(tmp_96_1_3_fu_1320_p3));

assign p_Val2_25_1_fu_1190_p2 = ($signed(p_Val2_24_1_cast_fu_1169_p1) + $signed(tmp_96_1_fu_1182_p3));

assign p_Val2_25_2_1_fu_1402_p2 = ($signed(p_Val2_24_2_1_cast_fu_1392_p1) + $signed(tmp_96_2_1_fu_1395_p3));

assign p_Val2_25_2_2_fu_1429_p2 = ($signed(p_Val2_24_2_2_cast_fu_1408_p1) + $signed(tmp_96_2_2_fu_1421_p3));

assign p_Val2_25_2_3_fu_1467_p2 = ($signed(p_Val2_24_2_3_cast_fu_1457_p1) + $signed(tmp_96_2_3_fu_1460_p3));

assign p_Val2_25_2_fu_1354_p2 = ($signed(p_Val2_24_2_cast_fu_1333_p1) + $signed(tmp_96_2_fu_1346_p3));

assign p_Val2_25_3_1_fu_1529_p2 = ($signed(p_Val2_24_3_1_cast_fu_1519_p1) + $signed(tmp_96_3_1_fu_1522_p3));

assign p_Val2_25_3_2_fu_1556_p2 = ($signed(p_Val2_24_3_2_cast_fu_1535_p1) + $signed(tmp_96_3_2_fu_1548_p3));

assign p_Val2_25_3_3_fu_1585_p2 = ($signed(p_Val2_24_3_3_cast_fu_1575_p1) + $signed(tmp_96_3_3_fu_1578_p3));

assign p_Val2_25_3_fu_1494_p2 = ($signed(p_Val2_24_3_cast_fu_1473_p1) + $signed(tmp_96_3_fu_1486_p3));

assign p_Val2_cast_34_fu_1623_p2 = ($signed(tmp_4_fu_1614_p1) + $signed(tmp_3_fu_1604_p4));

assign p_Val2_cast_fu_1601_p1 = $signed(ap_reg_pp0_iter10_p_Val2_s_reg_2319);

assign p_Val2_s_33_fu_1617_p2 = ($signed(sum_V_3_3_fu_1591_p4) + $signed(p_Val2_cast_fu_1601_p1));

assign sum_V_3_3_fu_1591_p4 = {{p_Val2_25_3_3_fu_1585_p2[43:20]}};

assign tmp_21_mid1_fu_882_p3 = {{i_mid2_reg_1808}, {j_6_reg_1819}};

assign tmp_21_mid_fu_783_p3 = {{i_6_reg_1747}, {5'd0}};

assign tmp_23_fu_977_p2 = (contor_2_mid2_fu_875_p3 + 13'd1);

assign tmp_24_fu_1635_p1 = ap_reg_pp0_iter11_contor_2_mid2_reg_1847;

assign tmp_3_fu_1604_p4 = {{p_Val2_25_3_3_fu_1585_p2[42:20]}};

assign tmp_47_fu_790_p3 = {{i_reg_536}, {j_reg_570}};

assign tmp_48_fu_1087_p4 = {{p_Val2_25_0_1_fu_1078_p2[43:20]}};

assign tmp_4_fu_1614_p1 = $signed(ap_reg_pp0_iter10_p_Val2_s_reg_2319);

assign tmp_50_fu_1172_p4 = {{p_Val2_25_0_3_fu_1163_p2[43:20]}};

assign tmp_52_fu_1251_p4 = {{p_Val2_25_1_1_fu_1242_p2[43:20]}};

assign tmp_54_fu_1336_p4 = {{p_Val2_25_1_3_fu_1327_p2[43:20]}};

assign tmp_56_fu_1411_p4 = {{p_Val2_25_2_1_fu_1402_p2[43:20]}};

assign tmp_58_fu_1476_p4 = {{p_Val2_25_2_3_fu_1467_p2[43:20]}};

assign tmp_60_fu_1538_p4 = {{p_Val2_25_3_1_fu_1529_p2[43:20]}};

assign tmp_63_fu_1067_p3 = {{tmp_62_reg_2014}, {20'd0}};

assign tmp_869_1_mid2_fu_761_p3 = ((exitcond_flatten_reg_1785[0:0] === 1'b1) ? tmp_869_2_reg_1754 : i_6_reg_1747);

assign tmp_869_2_fu_623_p2 = (ap_phi_mux_i_phi_fu_540_p4 + 5'd2);

assign tmp_869_2_mid2_fu_766_p3 = ((exitcond_flatten_reg_1785[0:0] === 1'b1) ? tmp_869_3_reg_1762 : tmp_869_2_reg_1754);

assign tmp_869_3_fu_629_p2 = (ap_phi_mux_i_phi_fu_540_p4 + 5'd3);

assign tmp_869_3_mid1_fu_771_p2 = (i_reg_536 + 5'd4);

assign tmp_869_3_mid2_fu_777_p3 = ((exitcond_flatten_reg_1785[0:0] === 1'b1) ? tmp_869_3_mid1_fu_771_p2 : tmp_869_3_reg_1762);

assign tmp_90_1_fu_833_p3 = {{tmp_869_2_reg_1754}, {j_reg_570}};

assign tmp_90_1_mid1_fu_922_p3 = {{tmp_869_1_mid2_fu_761_p3}, {j_6_reg_1819}};

assign tmp_90_1_mid_fu_805_p3 = {{tmp_869_2_reg_1754}, {5'd0}};

assign tmp_90_2_fu_855_p3 = {{tmp_869_3_reg_1762}, {j_reg_570}};

assign tmp_90_2_mid1_fu_936_p3 = {{tmp_869_2_mid2_fu_766_p3}, {j_6_reg_1819}};

assign tmp_90_2_mid_fu_826_p3 = {{tmp_869_3_reg_1762}, {5'd0}};

assign tmp_90_3_mid1_fu_950_p3 = {{tmp_869_3_mid2_fu_777_p3}, {j_6_reg_1819}};

assign tmp_90_3_mid_fu_847_p3 = {{tmp_869_3_mid1_fu_771_p2}, {5'd0}};

assign tmp_90_s_fu_812_p3 = {{i_6_reg_1747}, {j_reg_570}};

assign tmp_93_0_1_cast_mid2_3_fu_900_p2 = (tmp_93_cast_mid2_v_v_fu_888_p3 + 10'd1);

assign tmp_93_0_1_cast_mid2_4_fu_906_p1 = tmp_93_0_1_cast_mid2_3_fu_900_p2;

assign tmp_93_0_2_cast_mid2_3_fu_911_p2 = (tmp_93_cast_mid2_v_v_fu_888_p3 + 10'd2);

assign tmp_93_0_2_cast_mid2_4_fu_917_p1 = tmp_93_0_2_cast_mid2_3_fu_911_p2;

assign tmp_93_0_3_cast_mid2_3_fu_983_p2 = (tmp_93_cast_mid2_v_v_reg_1852 + 10'd3);

assign tmp_93_0_3_cast_mid2_4_fu_988_p1 = tmp_93_0_3_cast_mid2_3_fu_983_p2;

assign tmp_93_1_1_cast_mid2_3_fu_1006_p2 = (ap_reg_pp0_iter2_tmp_93_1_cast_mid2_v_1_reg_1872 + 10'd1);

assign tmp_93_1_1_cast_mid2_4_fu_1011_p1 = tmp_93_1_1_cast_mid2_3_fu_1006_p2;

assign tmp_93_1_2_cast_mid2_3_fu_1016_p2 = (ap_reg_pp0_iter2_tmp_93_1_cast_mid2_v_1_reg_1872 + 10'd2);

assign tmp_93_1_2_cast_mid2_4_fu_1021_p1 = tmp_93_1_2_cast_mid2_3_fu_1016_p2;

assign tmp_93_1_3_cast_mid2_3_fu_1050_p2 = (ap_reg_pp0_iter3_tmp_93_1_cast_mid2_v_1_reg_1872 + 10'd3);

assign tmp_93_1_3_cast_mid2_4_fu_1055_p1 = tmp_93_1_3_cast_mid2_3_fu_1050_p2;

assign tmp_93_1_cast_mid2_v_1_fu_929_p3 = ((exitcond5_mid_reg_1798[0:0] === 1'b1) ? tmp_90_1_mid1_fu_922_p3 : tmp_93_1_cast_mid_fu_819_p3);

assign tmp_93_1_cast_mid2_v_fu_993_p1 = tmp_93_1_cast_mid2_v_1_reg_1872;

assign tmp_93_1_cast_mid_fu_819_p3 = ((exitcond_flatten_reg_1785[0:0] === 1'b1) ? tmp_90_1_mid_fu_805_p3 : tmp_90_s_fu_812_p3);

assign tmp_93_2_1_cast_mid2_3_fu_1133_p2 = (ap_reg_pp0_iter4_tmp_93_2_cast_mid2_v_1_reg_1880 + 10'd1);

assign tmp_93_2_1_cast_mid2_4_fu_1138_p1 = tmp_93_2_1_cast_mid2_3_fu_1133_p2;

assign tmp_93_2_2_cast_mid2_3_fu_1143_p2 = (ap_reg_pp0_iter4_tmp_93_2_cast_mid2_v_1_reg_1880 + 10'd2);

assign tmp_93_2_2_cast_mid2_4_fu_1148_p1 = tmp_93_2_2_cast_mid2_3_fu_1143_p2;

assign tmp_93_2_3_cast_mid2_3_fu_1218_p2 = (ap_reg_pp0_iter5_tmp_93_2_cast_mid2_v_1_reg_1880 + 10'd3);

assign tmp_93_2_3_cast_mid2_4_fu_1223_p1 = tmp_93_2_3_cast_mid2_3_fu_1218_p2;

assign tmp_93_2_cast_mid2_v_1_fu_943_p3 = ((exitcond5_mid_reg_1798[0:0] === 1'b1) ? tmp_90_2_mid1_fu_936_p3 : tmp_93_2_cast_mid_fu_840_p3);

assign tmp_93_2_cast_mid2_v_fu_1060_p1 = ap_reg_pp0_iter3_tmp_93_2_cast_mid2_v_1_reg_1880;

assign tmp_93_2_cast_mid_fu_840_p3 = ((exitcond_flatten_reg_1785[0:0] === 1'b1) ? tmp_90_2_mid_fu_826_p3 : tmp_90_1_fu_833_p3);

assign tmp_93_3_1_cast_mid2_3_fu_1297_p2 = (ap_reg_pp0_iter6_tmp_93_3_cast_mid2_v_1_reg_1888 + 10'd1);

assign tmp_93_3_1_cast_mid2_4_fu_1302_p1 = tmp_93_3_1_cast_mid2_3_fu_1297_p2;

assign tmp_93_3_2_cast_mid2_3_fu_1307_p2 = (ap_reg_pp0_iter6_tmp_93_3_cast_mid2_v_1_reg_1888 + 10'd2);

assign tmp_93_3_2_cast_mid2_4_fu_1312_p1 = tmp_93_3_2_cast_mid2_3_fu_1307_p2;

assign tmp_93_3_3_cast_mid2_3_fu_1382_p2 = (ap_reg_pp0_iter7_tmp_93_3_cast_mid2_v_1_reg_1888 + 10'd3);

assign tmp_93_3_3_cast_mid2_4_fu_1387_p1 = tmp_93_3_3_cast_mid2_3_fu_1382_p2;

assign tmp_93_3_cast_mid2_v_1_fu_957_p3 = ((exitcond5_mid_reg_1798[0:0] === 1'b1) ? tmp_90_3_mid1_fu_950_p3 : tmp_93_3_cast_mid_fu_862_p3);

assign tmp_93_3_cast_mid2_v_fu_1228_p1 = ap_reg_pp0_iter5_tmp_93_3_cast_mid2_v_1_reg_1888;

assign tmp_93_3_cast_mid_fu_862_p3 = ((exitcond_flatten_reg_1785[0:0] === 1'b1) ? tmp_90_3_mid_fu_847_p3 : tmp_90_2_fu_855_p3);

assign tmp_93_cast_mid268_v_fu_798_p3 = ((exitcond_flatten_reg_1785[0:0] === 1'b1) ? tmp_21_mid_fu_783_p3 : tmp_47_fu_790_p3);

assign tmp_93_cast_mid2_v_fu_895_p1 = tmp_93_cast_mid2_v_v_fu_888_p3;

assign tmp_93_cast_mid2_v_v_fu_888_p3 = ((exitcond5_mid_reg_1798[0:0] === 1'b1) ? tmp_21_mid1_fu_882_p3 : tmp_93_cast_mid268_v_fu_798_p3);

assign tmp_96_0_1_fu_1074_p1 = $signed(tmp_63_fu_1067_p3);

assign tmp_96_0_2_fu_1097_p3 = {{tmp_48_fu_1087_p4}, {20'd0}};

assign tmp_96_0_3_fu_1156_p3 = {{tmp_49_reg_2069}, {20'd0}};

assign tmp_96_1_1_fu_1235_p3 = {{tmp_51_reg_2124}, {20'd0}};

assign tmp_96_1_2_fu_1261_p3 = {{tmp_52_fu_1251_p4}, {20'd0}};

assign tmp_96_1_3_fu_1320_p3 = {{tmp_53_reg_2179}, {20'd0}};

assign tmp_96_1_fu_1182_p3 = {{tmp_50_fu_1172_p4}, {20'd0}};

assign tmp_96_2_1_fu_1395_p3 = {{tmp_55_reg_2234}, {20'd0}};

assign tmp_96_2_2_fu_1421_p3 = {{tmp_56_fu_1411_p4}, {20'd0}};

assign tmp_96_2_3_fu_1460_p3 = {{tmp_57_reg_2294}, {20'd0}};

assign tmp_96_2_fu_1346_p3 = {{tmp_54_fu_1336_p4}, {20'd0}};

assign tmp_96_3_1_fu_1522_p3 = {{tmp_59_reg_2335}, {20'd0}};

assign tmp_96_3_2_fu_1548_p3 = {{tmp_60_fu_1538_p4}, {20'd0}};

assign tmp_96_3_3_fu_1578_p3 = {{tmp_61_reg_2350}, {20'd0}};

assign tmp_96_3_fu_1486_p3 = {{tmp_58_fu_1476_p4}, {20'd0}};

assign tmp_dup_fu_869_p2 = (contor_1_mid_fu_749_p3 + 13'd8);

assign tmp_fu_707_p2 = (exitcond_flatten_fu_653_p2 | exitcond5_mid_fu_679_p2);

assign tmp_i_fu_1629_p2 = (($signed(p_Val2_s_33_fu_1617_p2) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign tmp_s_fu_971_p1 = filter_mid2_reg_1827;

always @ (posedge ap_clk) begin
    tmp_s_reg_1901[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_pp0_iter2_tmp_s_reg_1901[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_pp0_iter3_tmp_s_reg_1901[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_pp0_iter4_tmp_s_reg_1901[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_pp0_iter5_tmp_s_reg_1901[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_pp0_iter6_tmp_s_reg_1901[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //conv_layer1
