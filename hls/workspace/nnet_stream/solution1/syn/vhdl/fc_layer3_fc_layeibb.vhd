-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity fc_layer3_fc_layeibb_rom is 
    generic(
             dwidth     : integer := 12; 
             awidth     : integer := 7; 
             mem_size    : integer := 84
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of fc_layer3_fc_layeibb_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "001000101010", 1 => "001100100011", 2 => "110110001000", 
    3 => "110000110100", 4 => "010000000011", 5 => "000011001101", 
    6 => "110011111001", 7 => "110001101000", 8 => "111110011001", 
    9 => "110111101010", 10 => "001001000010", 11 => "111101001001", 
    12 => "111110111100", 13 => "111000101010", 14 => "000001101100", 
    15 => "000011000101", 16 => "111001111011", 17 => "000001011001", 
    18 => "001101010100", 19 => "110111100001", 20 => "111111001010", 
    21 => "000010101010", 22 => "110000101100", 23 => "110111011010", 
    24 => "000110111000", 25 => "000101101001", 26 => "001011111110", 
    27 => "111110111000", 28 => "000011111011", 29 => "110110101010", 
    30 => "110010110111", 31 => "111000010011", 32 => "001000000011", 
    33 => "110100001000", 34 => "111111101110", 35 => "110000010111", 
    36 => "111111111011", 37 => "000000110100", 38 => "000010011010", 
    39 => "000001001101", 40 => "001101000110", 41 => "000101110100", 
    42 => "000101001001", 43 => "000111101110", 44 => "111001100101", 
    45 => "111101001001", 46 => "111000100011", 47 => "101111111000", 
    48 => "111011001111", 49 => "001010110100", 50 => "000100001101", 
    51 => "110111010111", 52 => "111010100000", 53 => "001011111100", 
    54 => "111110100101", 55 => "111111101101", 56 => "000110111101", 
    57 => "110101000011", 58 => "111111010100", 59 => "111100010011", 
    60 => "110111111101", 61 => "110111010001", 62 => "111110001101", 
    63 => "110010001001", 64 => "001110011110", 65 => "010000001000", 
    66 => "111101010010", 67 => "001101010000", 68 => "111011000010", 
    69 => "101111111001", 70 => "101111111100", 71 => "001000101001", 
    72 => "000011110110", 73 => "001110110000", 74 => "111001000100", 
    75 => "111111101100", 76 => "000011101011", 77 => "111010100000", 
    78 => "000000001110", 79 => "001111100010", 80 => "000101110001", 
    81 => "111110100000", 82 => "110000111110", 83 => "111100111101" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "select_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "distributed";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity fc_layer3_fc_layeibb is
    generic (
        DataWidth : INTEGER := 12;
        AddressRange : INTEGER := 84;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of fc_layer3_fc_layeibb is
    component fc_layer3_fc_layeibb_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    fc_layer3_fc_layeibb_rom_U :  component fc_layer3_fc_layeibb_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


