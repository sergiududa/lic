-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity fc_layer3_fc_layeigb_rom is 
    generic(
             dwidth     : integer := 12; 
             awidth     : integer := 7; 
             mem_size    : integer := 84
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of fc_layer3_fc_layeigb_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "001101101101", 1 => "001010110111", 2 => "111110000101", 
    3 => "001110101000", 4 => "111101000000", 5 => "001101110101", 
    6 => "000010001000", 7 => "000001111100", 8 => "000101100101", 
    9 => "001010010101", 10 => "001101001010", 11 => "111011001110", 
    12 => "001111011001", 13 => "110110001000", 14 => "001100100000", 
    15 => "000101001101", 16 => "111110011110", 17 => "000110110100", 
    18 => "111001011100", 19 => "001100010101", 20 => "000101110010", 
    21 => "110010111111", 22 => "111111111010", 23 => "111101101100", 
    24 => "111011010010", 25 => "110011010010", 26 => "000010111001", 
    27 => "000110110111", 28 => "110001111101", 29 => "111010101100", 
    30 => "111100001101", 31 => "001111110100", 32 => "110110010110", 
    33 => "110011101010", 34 => "110001000010", 35 => "000111000000", 
    36 => "111000110010", 37 => "000110010001", 38 => "110100101101", 
    39 => "000000101101", 40 => "110011111101", 41 => "110000111110", 
    42 => "110110110101", 43 => "001100110101", 44 => "111100110100", 
    45 => "000011100110", 46 => "001111101011", 47 => "001110100011", 
    48 => "110111000001", 49 => "111100011110", 50 => "110111110101", 
    51 => "111111101111", 52 => "000101100000", 53 => "000101011101", 
    54 => "001011001001", 55 => "000110111101", 56 => "111101101000", 
    57 => "110001010100", 58 => "110000100100", 59 => "001110011010", 
    60 => "000001100101", 61 => "110110010110", 62 => "111011111011", 
    63 => "110000000110", 64 => "110110000000", 65 => "111010001111", 
    66 => "111101001000", 67 => "111010101001", 68 => "001011001010", 
    69 => "101111110110", 70 => "111001111110", 71 => "110101101100", 
    72 => "111001011111", 73 => "000101010101", 74 => "110100100000", 
    75 => "111101110111", 76 => "110010101000", 77 => "000000100101", 
    78 => "000001110011", 79 => "110111110101", 80 => "110001110011", 
    81 => "000101010100", 82 => "111100111101", 83 => "110100000001" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "select_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "distributed";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity fc_layer3_fc_layeigb is
    generic (
        DataWidth : INTEGER := 12;
        AddressRange : INTEGER := 84;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of fc_layer3_fc_layeigb is
    component fc_layer3_fc_layeigb_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    fc_layer3_fc_layeigb_rom_U :  component fc_layer3_fc_layeigb_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


