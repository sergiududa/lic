-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity fc_layer3_fc_layeieb_rom is 
    generic(
             dwidth     : integer := 12; 
             awidth     : integer := 7; 
             mem_size    : integer := 84
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of fc_layer3_fc_layeieb_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "000011011100", 1 => "000110011111", 2 => "001000010001", 
    3 => "001011000110", 4 => "110101001101", 5 => "001001010010", 
    6 => "001101001100", 7 => "001100101011", 8 => "001111111100", 
    9 => "111111000011", 10 => "111011100111", 11 => "001001010001", 
    12 => "001101101101", 13 => "001011110001", 14 => "000011111110", 
    15 => "000001100000", 16 => "001101110100", 17 => "001011011000", 
    18 => "110010010010", 19 => "000011000001", 20 => "110111010101", 
    21 => "000111100000", 22 => "000011110100", 23 => "110101000001", 
    24 => "001000101011", 25 => "001011100011", 26 => "110110000000", 
    27 => "111111111010", 28 => "110010100110", 29 => "110010011111", 
    30 => "001001000110", 31 => "110000111011", 32 => "110101000101", 
    33 => "111111001010", 34 => "111111011011", 35 => "110001011111", 
    36 => "110010100110", 37 => "000101001101", 38 => "001011000000", 
    39 => "001110011111", 40 => "001011101111", 41 => "000001100111", 
    42 => "010000000011", 43 => "000010010101", 44 => "001010000111", 
    45 => "001101000000", 46 => "110111110111", 47 => "110111010101", 
    48 => "110010101001", 49 => "111010010110", 50 => "110010010110", 
    51 => "110110111100", 52 => "111000110001", 53 => "001001010110", 
    54 => "110100100111", 55 => "110100011000", 56 => "110001100100", 
    57 => "110100110100", 58 => "000010011001", 59 => "000010000110", 
    60 => "110010011000", 61 => "000001011111", 62 => "001101111100", 
    63 => "010000001001", 64 => "110010101011", 65 => "000110010100", 
    66 => "001001100111", 67 => "000111010101", 68 => "001100000101", 
    69 => "110101100111", 70 => "001101110011", 71 => "000011011100", 
    72 => "000010111100", 73 => "001110100001", 74 => "001011011111", 
    75 => "111001110001", 76 => "111101100010", 77 => "001110000111", 
    78 => "111011010000", 79 => "111101001000", 80 => "110100010010", 
    81 => "111011000001", 82 => "110100011011", 83 => "000100100000" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "select_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "distributed";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity fc_layer3_fc_layeieb is
    generic (
        DataWidth : INTEGER := 12;
        AddressRange : INTEGER := 84;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of fc_layer3_fc_layeieb is
    component fc_layer3_fc_layeieb_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    fc_layer3_fc_layeieb_rom_U :  component fc_layer3_fc_layeieb_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


