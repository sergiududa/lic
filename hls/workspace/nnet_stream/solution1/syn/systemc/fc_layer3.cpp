// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fc_layer3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fc_layer3::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fc_layer3::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> fc_layer3::ap_ST_fsm_state1 = "1";
const sc_lv<14> fc_layer3::ap_ST_fsm_state2 = "10";
const sc_lv<14> fc_layer3::ap_ST_fsm_state3 = "100";
const sc_lv<14> fc_layer3::ap_ST_fsm_state4 = "1000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state5 = "10000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state6 = "100000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> fc_layer3::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> fc_layer3::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> fc_layer3::ap_const_lv32_D = "1101";
const sc_lv<32> fc_layer3::ap_const_lv32_2 = "10";
const sc_lv<32> fc_layer3::ap_const_lv32_1 = "1";
const sc_lv<1> fc_layer3::ap_const_lv1_0 = "0";
const sc_lv<32> fc_layer3::ap_const_lv32_3 = "11";
const sc_lv<32> fc_layer3::ap_const_lv32_4 = "100";
const sc_lv<32> fc_layer3::ap_const_lv32_5 = "101";
const sc_lv<32> fc_layer3::ap_const_lv32_6 = "110";
const sc_lv<32> fc_layer3::ap_const_lv32_C = "1100";
const sc_lv<32> fc_layer3::ap_const_lv32_A = "1010";
const sc_lv<7> fc_layer3::ap_const_lv7_0 = "0000000";
const sc_lv<4> fc_layer3::ap_const_lv4_0 = "0000";
const sc_lv<32> fc_layer3::ap_const_lv32_B = "1011";
const sc_lv<64> fc_layer3::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> fc_layer3::ap_const_lv64_1 = "1";
const sc_lv<64> fc_layer3::ap_const_lv64_2 = "10";
const sc_lv<64> fc_layer3::ap_const_lv64_3 = "11";
const sc_lv<64> fc_layer3::ap_const_lv64_4 = "100";
const sc_lv<64> fc_layer3::ap_const_lv64_5 = "101";
const sc_lv<64> fc_layer3::ap_const_lv64_6 = "110";
const sc_lv<64> fc_layer3::ap_const_lv64_7 = "111";
const sc_lv<64> fc_layer3::ap_const_lv64_8 = "1000";
const sc_lv<64> fc_layer3::ap_const_lv64_9 = "1001";
const sc_lv<16> fc_layer3::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> fc_layer3::ap_const_lv32_7 = "111";
const sc_lv<32> fc_layer3::ap_const_lv32_8 = "1000";
const sc_lv<32> fc_layer3::ap_const_lv32_9 = "1001";
const sc_lv<7> fc_layer3::ap_const_lv7_54 = "1010100";
const sc_lv<7> fc_layer3::ap_const_lv7_1 = "1";
const sc_lv<12> fc_layer3::ap_const_lv12_0 = "000000000000";
const sc_lv<32> fc_layer3::ap_const_lv32_1B = "11011";
const sc_lv<4> fc_layer3::ap_const_lv4_A = "1010";
const sc_lv<4> fc_layer3::ap_const_lv4_1 = "1";
const sc_lv<15> fc_layer3::ap_const_lv15_0 = "000000000000000";
const sc_lv<1> fc_layer3::ap_const_lv1_1 = "1";
const bool fc_layer3::ap_const_boolean_1 = true;

fc_layer3::fc_layer3(sc_module_name name) : sc_module(name), mVcdFile(0) {
    fc_layer3_weights_V_10_U = new fc_layer3_fc_layeh9b("fc_layer3_weights_V_10_U");
    fc_layer3_weights_V_10_U->clk(ap_clk);
    fc_layer3_weights_V_10_U->reset(ap_rst);
    fc_layer3_weights_V_10_U->address0(fc_layer3_weights_V_10_address0);
    fc_layer3_weights_V_10_U->ce0(fc_layer3_weights_V_10_ce0);
    fc_layer3_weights_V_10_U->q0(fc_layer3_weights_V_10_q0);
    fc_layer3_weights_V_1_U = new fc_layer3_fc_layeiab("fc_layer3_weights_V_1_U");
    fc_layer3_weights_V_1_U->clk(ap_clk);
    fc_layer3_weights_V_1_U->reset(ap_rst);
    fc_layer3_weights_V_1_U->address0(fc_layer3_weights_V_1_address0);
    fc_layer3_weights_V_1_U->ce0(fc_layer3_weights_V_1_ce0);
    fc_layer3_weights_V_1_U->q0(fc_layer3_weights_V_1_q0);
    fc_layer3_weights_V_2_U = new fc_layer3_fc_layeibb("fc_layer3_weights_V_2_U");
    fc_layer3_weights_V_2_U->clk(ap_clk);
    fc_layer3_weights_V_2_U->reset(ap_rst);
    fc_layer3_weights_V_2_U->address0(fc_layer3_weights_V_2_address0);
    fc_layer3_weights_V_2_U->ce0(fc_layer3_weights_V_2_ce0);
    fc_layer3_weights_V_2_U->q0(fc_layer3_weights_V_2_q0);
    fc_layer3_weights_V_3_U = new fc_layer3_fc_layeicb("fc_layer3_weights_V_3_U");
    fc_layer3_weights_V_3_U->clk(ap_clk);
    fc_layer3_weights_V_3_U->reset(ap_rst);
    fc_layer3_weights_V_3_U->address0(fc_layer3_weights_V_3_address0);
    fc_layer3_weights_V_3_U->ce0(fc_layer3_weights_V_3_ce0);
    fc_layer3_weights_V_3_U->q0(fc_layer3_weights_V_3_q0);
    fc_layer3_weights_V_4_U = new fc_layer3_fc_layeidb("fc_layer3_weights_V_4_U");
    fc_layer3_weights_V_4_U->clk(ap_clk);
    fc_layer3_weights_V_4_U->reset(ap_rst);
    fc_layer3_weights_V_4_U->address0(fc_layer3_weights_V_4_address0);
    fc_layer3_weights_V_4_U->ce0(fc_layer3_weights_V_4_ce0);
    fc_layer3_weights_V_4_U->q0(fc_layer3_weights_V_4_q0);
    fc_layer3_weights_V_5_U = new fc_layer3_fc_layeieb("fc_layer3_weights_V_5_U");
    fc_layer3_weights_V_5_U->clk(ap_clk);
    fc_layer3_weights_V_5_U->reset(ap_rst);
    fc_layer3_weights_V_5_U->address0(fc_layer3_weights_V_5_address0);
    fc_layer3_weights_V_5_U->ce0(fc_layer3_weights_V_5_ce0);
    fc_layer3_weights_V_5_U->q0(fc_layer3_weights_V_5_q0);
    fc_layer3_weights_V_6_U = new fc_layer3_fc_layeifb("fc_layer3_weights_V_6_U");
    fc_layer3_weights_V_6_U->clk(ap_clk);
    fc_layer3_weights_V_6_U->reset(ap_rst);
    fc_layer3_weights_V_6_U->address0(fc_layer3_weights_V_6_address0);
    fc_layer3_weights_V_6_U->ce0(fc_layer3_weights_V_6_ce0);
    fc_layer3_weights_V_6_U->q0(fc_layer3_weights_V_6_q0);
    fc_layer3_weights_V_7_U = new fc_layer3_fc_layeigb("fc_layer3_weights_V_7_U");
    fc_layer3_weights_V_7_U->clk(ap_clk);
    fc_layer3_weights_V_7_U->reset(ap_rst);
    fc_layer3_weights_V_7_U->address0(fc_layer3_weights_V_7_address0);
    fc_layer3_weights_V_7_U->ce0(fc_layer3_weights_V_7_ce0);
    fc_layer3_weights_V_7_U->q0(fc_layer3_weights_V_7_q0);
    fc_layer3_weights_V_8_U = new fc_layer3_fc_layeihb("fc_layer3_weights_V_8_U");
    fc_layer3_weights_V_8_U->clk(ap_clk);
    fc_layer3_weights_V_8_U->reset(ap_rst);
    fc_layer3_weights_V_8_U->address0(fc_layer3_weights_V_8_address0);
    fc_layer3_weights_V_8_U->ce0(fc_layer3_weights_V_8_ce0);
    fc_layer3_weights_V_8_U->q0(fc_layer3_weights_V_8_q0);
    fc_layer3_weights_V_9_U = new fc_layer3_fc_layeiib("fc_layer3_weights_V_9_U");
    fc_layer3_weights_V_9_U->clk(ap_clk);
    fc_layer3_weights_V_9_U->reset(ap_rst);
    fc_layer3_weights_V_9_U->address0(fc_layer3_weights_V_9_address0);
    fc_layer3_weights_V_9_U->ce0(fc_layer3_weights_V_9_ce0);
    fc_layer3_weights_V_9_U->q0(fc_layer3_weights_V_9_q0);
    output_V_U = new fc_layer3_output_V("output_V_U");
    output_V_U->clk(ap_clk);
    output_V_U->reset(ap_rst);
    output_V_U->address0(output_V_address0);
    output_V_U->ce0(output_V_ce0);
    output_V_U->we0(output_V_we0);
    output_V_U->d0(output_V_d0);
    output_V_U->q0(output_V_q0);
    output_V_U->address1(output_V_address1);
    output_V_U->ce1(output_V_ce1);
    output_V_U->we1(output_V_we1);
    output_V_U->d1(output_V_d1);
    output_V_U->q1(output_V_q1);
    nnet_mac_muladd_1ijb_U425 = new nnet_mac_muladd_1ijb<1,1,12,16,28,28>("nnet_mac_muladd_1ijb_U425");
    nnet_mac_muladd_1ijb_U425->din0(fc_layer3_weights_V_10_q0);
    nnet_mac_muladd_1ijb_U425->din1(grp_fu_658_p1);
    nnet_mac_muladd_1ijb_U425->din2(grp_fu_658_p2);
    nnet_mac_muladd_1ijb_U425->dout(grp_fu_658_p3);
    nnet_mac_muladd_1ijb_U426 = new nnet_mac_muladd_1ijb<1,1,12,16,28,28>("nnet_mac_muladd_1ijb_U426");
    nnet_mac_muladd_1ijb_U426->din0(fc_layer3_weights_V_1_q0);
    nnet_mac_muladd_1ijb_U426->din1(grp_fu_667_p1);
    nnet_mac_muladd_1ijb_U426->din2(grp_fu_667_p2);
    nnet_mac_muladd_1ijb_U426->dout(grp_fu_667_p3);
    nnet_mac_muladd_1ijb_U427 = new nnet_mac_muladd_1ijb<1,1,12,16,28,28>("nnet_mac_muladd_1ijb_U427");
    nnet_mac_muladd_1ijb_U427->din0(fc_layer3_weights_V_2_q0);
    nnet_mac_muladd_1ijb_U427->din1(grp_fu_676_p1);
    nnet_mac_muladd_1ijb_U427->din2(grp_fu_676_p2);
    nnet_mac_muladd_1ijb_U427->dout(grp_fu_676_p3);
    nnet_mac_muladd_1ikb_U428 = new nnet_mac_muladd_1ikb<1,1,11,16,28,28>("nnet_mac_muladd_1ikb_U428");
    nnet_mac_muladd_1ikb_U428->din0(fc_layer3_weights_V_3_q0);
    nnet_mac_muladd_1ikb_U428->din1(tmp_V_712_reg_823);
    nnet_mac_muladd_1ikb_U428->din2(grp_fu_684_p2);
    nnet_mac_muladd_1ikb_U428->dout(grp_fu_684_p3);
    nnet_mac_muladd_1ijb_U429 = new nnet_mac_muladd_1ijb<1,1,12,16,28,28>("nnet_mac_muladd_1ijb_U429");
    nnet_mac_muladd_1ijb_U429->din0(fc_layer3_weights_V_4_q0);
    nnet_mac_muladd_1ijb_U429->din1(grp_fu_693_p1);
    nnet_mac_muladd_1ijb_U429->din2(grp_fu_693_p2);
    nnet_mac_muladd_1ijb_U429->dout(grp_fu_693_p3);
    nnet_mac_muladd_1ijb_U430 = new nnet_mac_muladd_1ijb<1,1,12,16,28,28>("nnet_mac_muladd_1ijb_U430");
    nnet_mac_muladd_1ijb_U430->din0(fc_layer3_weights_V_5_q0);
    nnet_mac_muladd_1ijb_U430->din1(grp_fu_701_p1);
    nnet_mac_muladd_1ijb_U430->din2(grp_fu_701_p2);
    nnet_mac_muladd_1ijb_U430->dout(grp_fu_701_p3);
    nnet_mac_muladd_1ijb_U431 = new nnet_mac_muladd_1ijb<1,1,12,16,28,28>("nnet_mac_muladd_1ijb_U431");
    nnet_mac_muladd_1ijb_U431->din0(fc_layer3_weights_V_13_reg_913);
    nnet_mac_muladd_1ijb_U431->din1(grp_fu_709_p1);
    nnet_mac_muladd_1ijb_U431->din2(grp_fu_709_p2);
    nnet_mac_muladd_1ijb_U431->dout(grp_fu_709_p3);
    nnet_mac_muladd_1ijb_U432 = new nnet_mac_muladd_1ijb<1,1,12,16,28,28>("nnet_mac_muladd_1ijb_U432");
    nnet_mac_muladd_1ijb_U432->din0(fc_layer3_weights_V_15_reg_918);
    nnet_mac_muladd_1ijb_U432->din1(grp_fu_717_p1);
    nnet_mac_muladd_1ijb_U432->din2(grp_fu_717_p2);
    nnet_mac_muladd_1ijb_U432->dout(grp_fu_717_p3);
    nnet_mac_muladd_1ijb_U433 = new nnet_mac_muladd_1ijb<1,1,12,16,28,28>("nnet_mac_muladd_1ijb_U433");
    nnet_mac_muladd_1ijb_U433->din0(fc_layer3_weights_V_17_reg_923);
    nnet_mac_muladd_1ijb_U433->din1(grp_fu_725_p1);
    nnet_mac_muladd_1ijb_U433->din2(grp_fu_725_p2);
    nnet_mac_muladd_1ijb_U433->dout(grp_fu_725_p3);
    nnet_mac_muladd_1ikb_U434 = new nnet_mac_muladd_1ikb<1,1,11,16,28,28>("nnet_mac_muladd_1ikb_U434");
    nnet_mac_muladd_1ikb_U434->din0(fc_layer3_weights_V_19_reg_928);
    nnet_mac_muladd_1ikb_U434->din1(grp_fu_733_p1);
    nnet_mac_muladd_1ikb_U434->din2(grp_fu_733_p2);
    nnet_mac_muladd_1ikb_U434->dout(grp_fu_733_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_OP2_V_cast_cast_fu_451_p1);
    sensitive << ( tmp_V_712_reg_823 );

    SC_METHOD(thread_OP2_V_cast_fu_405_p1);
    sensitive << ( in_V_V_dout );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_618_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_618_p2 );

    SC_METHOD(thread_exitcond1_fu_387_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_reg_365 );

    SC_METHOD(thread_exitcond_fu_618_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( i1_reg_376 );

    SC_METHOD(thread_fc_layer3_weights_V_10_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_399_p1 );

    SC_METHOD(thread_fc_layer3_weights_V_10_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_fc_layer3_weights_V_1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_399_p1 );

    SC_METHOD(thread_fc_layer3_weights_V_1_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_fc_layer3_weights_V_2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_reg_801 );

    SC_METHOD(thread_fc_layer3_weights_V_2_ce0);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_fc_layer3_weights_V_3_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_reg_801 );

    SC_METHOD(thread_fc_layer3_weights_V_3_ce0);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_fc_layer3_weights_V_4_address0);
    sensitive << ( tmp_reg_801 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_fc_layer3_weights_V_4_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_fc_layer3_weights_V_5_address0);
    sensitive << ( tmp_reg_801 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_fc_layer3_weights_V_5_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_fc_layer3_weights_V_6_address0);
    sensitive << ( tmp_reg_801 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_fc_layer3_weights_V_6_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_fc_layer3_weights_V_7_address0);
    sensitive << ( tmp_reg_801 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_fc_layer3_weights_V_7_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_fc_layer3_weights_V_8_address0);
    sensitive << ( tmp_reg_801 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_fc_layer3_weights_V_8_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_fc_layer3_weights_V_9_address0);
    sensitive << ( tmp_reg_801 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_fc_layer3_weights_V_9_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_658_p1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( OP2_V_cast_fu_405_p1 );

    SC_METHOD(thread_grp_fu_658_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( output_V_q0 );

    SC_METHOD(thread_grp_fu_667_p1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( OP2_V_cast_fu_405_p1 );

    SC_METHOD(thread_grp_fu_667_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( output_V_q1 );

    SC_METHOD(thread_grp_fu_676_p1);
    sensitive << ( OP2_V_cast_reg_828 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_676_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V_q1 );

    SC_METHOD(thread_grp_fu_684_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V_q0 );

    SC_METHOD(thread_grp_fu_693_p1);
    sensitive << ( OP2_V_cast_reg_828 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_693_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( output_V_q1 );

    SC_METHOD(thread_grp_fu_701_p1);
    sensitive << ( OP2_V_cast_reg_828 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_701_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( output_V_q0 );

    SC_METHOD(thread_grp_fu_709_p1);
    sensitive << ( OP2_V_cast_reg_828 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_709_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( output_V_q1 );

    SC_METHOD(thread_grp_fu_717_p1);
    sensitive << ( OP2_V_cast_reg_828 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_717_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( output_V_q0 );

    SC_METHOD(thread_grp_fu_725_p1);
    sensitive << ( OP2_V_cast_reg_828 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_725_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( output_V_q1 );

    SC_METHOD(thread_grp_fu_733_p1);
    sensitive << ( OP2_V_cast_cast_reg_858 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_733_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( output_V_q0 );

    SC_METHOD(thread_i_fu_624_p2);
    sensitive << ( i1_reg_376 );

    SC_METHOD(thread_in_V_V_blk_n);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_in_V_V_read);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_j_1_fu_393_p2);
    sensitive << ( j_reg_365 );

    SC_METHOD(thread_out_V_V_blk_n);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_V_V_din);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_V_fu_645_p3 );

    SC_METHOD(thread_out_V_V_write);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_output_V_addr_reg_741);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_output_V_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( output_V_addr_reg_741 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_output_V_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_s_fu_630_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_output_V_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_output_V_ce1);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_output_V_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_33_1_reg_843 );
    sensitive << ( tmp_33_3_reg_868 );
    sensitive << ( tmp_33_5_reg_908 );
    sensitive << ( tmp_33_7_reg_938 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_33_9_reg_948 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_output_V_d1);
    sensitive << ( tmp_5_reg_838 );
    sensitive << ( tmp_33_2_reg_863 );
    sensitive << ( tmp_33_4_reg_903 );
    sensitive << ( tmp_33_6_reg_933 );
    sensitive << ( tmp_33_8_reg_943 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_output_V_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_output_V_we1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_tmp_12_fu_635_p1);
    sensitive << ( output_V_q1 );

    SC_METHOD(thread_tmp_V_fu_645_p3);
    sensitive << ( tmp_i_fu_639_p2 );
    sensitive << ( tmp_12_fu_635_p1 );

    SC_METHOD(thread_tmp_fu_399_p1);
    sensitive << ( j_reg_365 );

    SC_METHOD(thread_tmp_i_fu_639_p2);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( output_V_q1 );

    SC_METHOD(thread_tmp_s_fu_630_p1);
    sensitive << ( i1_reg_376 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_V_V_full_n );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_387_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_618_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fc_layer3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_V_V_din, "(port)out_V_V_din");
    sc_trace(mVcdFile, out_V_V_full_n, "(port)out_V_V_full_n");
    sc_trace(mVcdFile, out_V_V_write, "(port)out_V_V_write");
    sc_trace(mVcdFile, in_V_V_dout, "(port)in_V_V_dout");
    sc_trace(mVcdFile, in_V_V_empty_n, "(port)in_V_V_empty_n");
    sc_trace(mVcdFile, in_V_V_read, "(port)in_V_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, fc_layer3_weights_V_10_address0, "fc_layer3_weights_V_10_address0");
    sc_trace(mVcdFile, fc_layer3_weights_V_10_ce0, "fc_layer3_weights_V_10_ce0");
    sc_trace(mVcdFile, fc_layer3_weights_V_10_q0, "fc_layer3_weights_V_10_q0");
    sc_trace(mVcdFile, fc_layer3_weights_V_1_address0, "fc_layer3_weights_V_1_address0");
    sc_trace(mVcdFile, fc_layer3_weights_V_1_ce0, "fc_layer3_weights_V_1_ce0");
    sc_trace(mVcdFile, fc_layer3_weights_V_1_q0, "fc_layer3_weights_V_1_q0");
    sc_trace(mVcdFile, fc_layer3_weights_V_2_address0, "fc_layer3_weights_V_2_address0");
    sc_trace(mVcdFile, fc_layer3_weights_V_2_ce0, "fc_layer3_weights_V_2_ce0");
    sc_trace(mVcdFile, fc_layer3_weights_V_2_q0, "fc_layer3_weights_V_2_q0");
    sc_trace(mVcdFile, fc_layer3_weights_V_3_address0, "fc_layer3_weights_V_3_address0");
    sc_trace(mVcdFile, fc_layer3_weights_V_3_ce0, "fc_layer3_weights_V_3_ce0");
    sc_trace(mVcdFile, fc_layer3_weights_V_3_q0, "fc_layer3_weights_V_3_q0");
    sc_trace(mVcdFile, fc_layer3_weights_V_4_address0, "fc_layer3_weights_V_4_address0");
    sc_trace(mVcdFile, fc_layer3_weights_V_4_ce0, "fc_layer3_weights_V_4_ce0");
    sc_trace(mVcdFile, fc_layer3_weights_V_4_q0, "fc_layer3_weights_V_4_q0");
    sc_trace(mVcdFile, fc_layer3_weights_V_5_address0, "fc_layer3_weights_V_5_address0");
    sc_trace(mVcdFile, fc_layer3_weights_V_5_ce0, "fc_layer3_weights_V_5_ce0");
    sc_trace(mVcdFile, fc_layer3_weights_V_5_q0, "fc_layer3_weights_V_5_q0");
    sc_trace(mVcdFile, fc_layer3_weights_V_6_address0, "fc_layer3_weights_V_6_address0");
    sc_trace(mVcdFile, fc_layer3_weights_V_6_ce0, "fc_layer3_weights_V_6_ce0");
    sc_trace(mVcdFile, fc_layer3_weights_V_6_q0, "fc_layer3_weights_V_6_q0");
    sc_trace(mVcdFile, fc_layer3_weights_V_7_address0, "fc_layer3_weights_V_7_address0");
    sc_trace(mVcdFile, fc_layer3_weights_V_7_ce0, "fc_layer3_weights_V_7_ce0");
    sc_trace(mVcdFile, fc_layer3_weights_V_7_q0, "fc_layer3_weights_V_7_q0");
    sc_trace(mVcdFile, fc_layer3_weights_V_8_address0, "fc_layer3_weights_V_8_address0");
    sc_trace(mVcdFile, fc_layer3_weights_V_8_ce0, "fc_layer3_weights_V_8_ce0");
    sc_trace(mVcdFile, fc_layer3_weights_V_8_q0, "fc_layer3_weights_V_8_q0");
    sc_trace(mVcdFile, fc_layer3_weights_V_9_address0, "fc_layer3_weights_V_9_address0");
    sc_trace(mVcdFile, fc_layer3_weights_V_9_ce0, "fc_layer3_weights_V_9_ce0");
    sc_trace(mVcdFile, fc_layer3_weights_V_9_q0, "fc_layer3_weights_V_9_q0");
    sc_trace(mVcdFile, out_V_V_blk_n, "out_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, in_V_V_blk_n, "in_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, output_V_addr_reg_741, "output_V_addr_reg_741");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, j_1_fu_393_p2, "j_1_fu_393_p2");
    sc_trace(mVcdFile, j_1_reg_796, "j_1_reg_796");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_399_p1, "tmp_fu_399_p1");
    sc_trace(mVcdFile, tmp_reg_801, "tmp_reg_801");
    sc_trace(mVcdFile, exitcond1_fu_387_p2, "exitcond1_fu_387_p2");
    sc_trace(mVcdFile, tmp_V_712_reg_823, "tmp_V_712_reg_823");
    sc_trace(mVcdFile, OP2_V_cast_fu_405_p1, "OP2_V_cast_fu_405_p1");
    sc_trace(mVcdFile, OP2_V_cast_reg_828, "OP2_V_cast_reg_828");
    sc_trace(mVcdFile, tmp_5_reg_838, "tmp_5_reg_838");
    sc_trace(mVcdFile, tmp_33_1_reg_843, "tmp_33_1_reg_843");
    sc_trace(mVcdFile, OP2_V_cast_cast_fu_451_p1, "OP2_V_cast_cast_fu_451_p1");
    sc_trace(mVcdFile, OP2_V_cast_cast_reg_858, "OP2_V_cast_cast_reg_858");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_33_2_reg_863, "tmp_33_2_reg_863");
    sc_trace(mVcdFile, tmp_33_3_reg_868, "tmp_33_3_reg_868");
    sc_trace(mVcdFile, tmp_33_4_reg_903, "tmp_33_4_reg_903");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_33_5_reg_908, "tmp_33_5_reg_908");
    sc_trace(mVcdFile, fc_layer3_weights_V_13_reg_913, "fc_layer3_weights_V_13_reg_913");
    sc_trace(mVcdFile, fc_layer3_weights_V_15_reg_918, "fc_layer3_weights_V_15_reg_918");
    sc_trace(mVcdFile, fc_layer3_weights_V_17_reg_923, "fc_layer3_weights_V_17_reg_923");
    sc_trace(mVcdFile, fc_layer3_weights_V_19_reg_928, "fc_layer3_weights_V_19_reg_928");
    sc_trace(mVcdFile, tmp_33_6_reg_933, "tmp_33_6_reg_933");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_33_7_reg_938, "tmp_33_7_reg_938");
    sc_trace(mVcdFile, tmp_33_8_reg_943, "tmp_33_8_reg_943");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_33_9_reg_948, "tmp_33_9_reg_948");
    sc_trace(mVcdFile, i_fu_624_p2, "i_fu_624_p2");
    sc_trace(mVcdFile, i_reg_956, "i_reg_956");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, exitcond_fu_618_p2, "exitcond_fu_618_p2");
    sc_trace(mVcdFile, output_V_address0, "output_V_address0");
    sc_trace(mVcdFile, output_V_ce0, "output_V_ce0");
    sc_trace(mVcdFile, output_V_we0, "output_V_we0");
    sc_trace(mVcdFile, output_V_d0, "output_V_d0");
    sc_trace(mVcdFile, output_V_q0, "output_V_q0");
    sc_trace(mVcdFile, output_V_address1, "output_V_address1");
    sc_trace(mVcdFile, output_V_ce1, "output_V_ce1");
    sc_trace(mVcdFile, output_V_we1, "output_V_we1");
    sc_trace(mVcdFile, output_V_d1, "output_V_d1");
    sc_trace(mVcdFile, output_V_q1, "output_V_q1");
    sc_trace(mVcdFile, j_reg_365, "j_reg_365");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i1_reg_376, "i1_reg_376");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_s_fu_630_p1, "tmp_s_fu_630_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_658_p3, "grp_fu_658_p3");
    sc_trace(mVcdFile, grp_fu_667_p3, "grp_fu_667_p3");
    sc_trace(mVcdFile, grp_fu_676_p3, "grp_fu_676_p3");
    sc_trace(mVcdFile, grp_fu_684_p3, "grp_fu_684_p3");
    sc_trace(mVcdFile, grp_fu_693_p3, "grp_fu_693_p3");
    sc_trace(mVcdFile, grp_fu_701_p3, "grp_fu_701_p3");
    sc_trace(mVcdFile, grp_fu_709_p3, "grp_fu_709_p3");
    sc_trace(mVcdFile, grp_fu_717_p3, "grp_fu_717_p3");
    sc_trace(mVcdFile, grp_fu_725_p3, "grp_fu_725_p3");
    sc_trace(mVcdFile, grp_fu_733_p3, "grp_fu_733_p3");
    sc_trace(mVcdFile, tmp_i_fu_639_p2, "tmp_i_fu_639_p2");
    sc_trace(mVcdFile, tmp_12_fu_635_p1, "tmp_12_fu_635_p1");
    sc_trace(mVcdFile, tmp_V_fu_645_p3, "tmp_V_fu_645_p3");
    sc_trace(mVcdFile, grp_fu_658_p1, "grp_fu_658_p1");
    sc_trace(mVcdFile, grp_fu_658_p2, "grp_fu_658_p2");
    sc_trace(mVcdFile, grp_fu_667_p1, "grp_fu_667_p1");
    sc_trace(mVcdFile, grp_fu_667_p2, "grp_fu_667_p2");
    sc_trace(mVcdFile, grp_fu_676_p1, "grp_fu_676_p1");
    sc_trace(mVcdFile, grp_fu_676_p2, "grp_fu_676_p2");
    sc_trace(mVcdFile, grp_fu_684_p2, "grp_fu_684_p2");
    sc_trace(mVcdFile, grp_fu_693_p1, "grp_fu_693_p1");
    sc_trace(mVcdFile, grp_fu_693_p2, "grp_fu_693_p2");
    sc_trace(mVcdFile, grp_fu_701_p1, "grp_fu_701_p1");
    sc_trace(mVcdFile, grp_fu_701_p2, "grp_fu_701_p2");
    sc_trace(mVcdFile, grp_fu_709_p1, "grp_fu_709_p1");
    sc_trace(mVcdFile, grp_fu_709_p2, "grp_fu_709_p2");
    sc_trace(mVcdFile, grp_fu_717_p1, "grp_fu_717_p1");
    sc_trace(mVcdFile, grp_fu_717_p2, "grp_fu_717_p2");
    sc_trace(mVcdFile, grp_fu_725_p1, "grp_fu_725_p1");
    sc_trace(mVcdFile, grp_fu_725_p2, "grp_fu_725_p2");
    sc_trace(mVcdFile, grp_fu_733_p1, "grp_fu_733_p1");
    sc_trace(mVcdFile, grp_fu_733_p2, "grp_fu_733_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

fc_layer3::~fc_layer3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete fc_layer3_weights_V_10_U;
    delete fc_layer3_weights_V_1_U;
    delete fc_layer3_weights_V_2_U;
    delete fc_layer3_weights_V_3_U;
    delete fc_layer3_weights_V_4_U;
    delete fc_layer3_weights_V_5_U;
    delete fc_layer3_weights_V_6_U;
    delete fc_layer3_weights_V_7_U;
    delete fc_layer3_weights_V_8_U;
    delete fc_layer3_weights_V_9_U;
    delete output_V_U;
    delete nnet_mac_muladd_1ijb_U425;
    delete nnet_mac_muladd_1ijb_U426;
    delete nnet_mac_muladd_1ijb_U427;
    delete nnet_mac_muladd_1ikb_U428;
    delete nnet_mac_muladd_1ijb_U429;
    delete nnet_mac_muladd_1ijb_U430;
    delete nnet_mac_muladd_1ijb_U431;
    delete nnet_mac_muladd_1ijb_U432;
    delete nnet_mac_muladd_1ijb_U433;
    delete nnet_mac_muladd_1ikb_U434;
}

void fc_layer3::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                    esl_seteq<1,1,1>(exitcond_fu_618_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i1_reg_376 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(out_V_V_full_n.read(), ap_const_logic_1))) {
        i1_reg_376 = i_reg_956.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        j_reg_365 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_reg_365 = j_1_reg_796.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        OP2_V_cast_cast_reg_858 = OP2_V_cast_cast_fu_451_p1.read();
        tmp_33_2_reg_863 = grp_fu_676_p3.read().range(27, 12);
        tmp_33_3_reg_868 = grp_fu_684_p3.read().range(27, 12);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_1))) {
        OP2_V_cast_reg_828 = OP2_V_cast_fu_405_p1.read();
        tmp_33_1_reg_843 = grp_fu_667_p3.read().range(27, 12);
        tmp_5_reg_838 = grp_fu_658_p3.read().range(27, 12);
        tmp_V_712_reg_823 = in_V_V_dout.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        fc_layer3_weights_V_13_reg_913 = fc_layer3_weights_V_6_q0.read();
        fc_layer3_weights_V_15_reg_918 = fc_layer3_weights_V_7_q0.read();
        fc_layer3_weights_V_17_reg_923 = fc_layer3_weights_V_8_q0.read();
        fc_layer3_weights_V_19_reg_928 = fc_layer3_weights_V_9_q0.read();
        tmp_33_4_reg_903 = grp_fu_693_p3.read().range(27, 12);
        tmp_33_5_reg_908 = grp_fu_701_p3.read().range(27, 12);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_reg_956 = i_fu_624_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        j_1_reg_796 = j_1_fu_393_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_33_6_reg_933 = grp_fu_709_p3.read().range(27, 12);
        tmp_33_7_reg_938 = grp_fu_717_p3.read().range(27, 12);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_33_8_reg_943 = grp_fu_725_p3.read().range(27, 12);
        tmp_33_9_reg_948 = grp_fu_733_p3.read().range(27, 12);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_387_p2.read(), ap_const_lv1_0))) {
        tmp_reg_801 = tmp_fu_399_p1.read();
    }
}

void fc_layer3::thread_OP2_V_cast_cast_fu_451_p1() {
    OP2_V_cast_cast_fu_451_p1 = esl_sext<27,16>(tmp_V_712_reg_823.read());
}

void fc_layer3::thread_OP2_V_cast_fu_405_p1() {
    OP2_V_cast_fu_405_p1 = esl_sext<28,16>(in_V_V_dout.read());
}

void fc_layer3::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fc_layer3::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void fc_layer3::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void fc_layer3::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void fc_layer3::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void fc_layer3::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void fc_layer3::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fc_layer3::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void fc_layer3::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void fc_layer3::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void fc_layer3::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void fc_layer3::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void fc_layer3::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void fc_layer3::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void fc_layer3::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void fc_layer3::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_618_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void fc_layer3::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fc_layer3::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_618_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fc_layer3::thread_exitcond1_fu_387_p2() {
    exitcond1_fu_387_p2 = (!j_reg_365.read().is_01() || !ap_const_lv7_54.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_365.read() == ap_const_lv7_54);
}

void fc_layer3::thread_exitcond_fu_618_p2() {
    exitcond_fu_618_p2 = (!i1_reg_376.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_376.read() == ap_const_lv4_A);
}

void fc_layer3::thread_fc_layer3_weights_V_10_address0() {
    fc_layer3_weights_V_10_address0 =  (sc_lv<7>) (tmp_fu_399_p1.read());
}

void fc_layer3::thread_fc_layer3_weights_V_10_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        fc_layer3_weights_V_10_ce0 = ap_const_logic_1;
    } else {
        fc_layer3_weights_V_10_ce0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_fc_layer3_weights_V_1_address0() {
    fc_layer3_weights_V_1_address0 =  (sc_lv<7>) (tmp_fu_399_p1.read());
}

void fc_layer3::thread_fc_layer3_weights_V_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        fc_layer3_weights_V_1_ce0 = ap_const_logic_1;
    } else {
        fc_layer3_weights_V_1_ce0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_fc_layer3_weights_V_2_address0() {
    fc_layer3_weights_V_2_address0 =  (sc_lv<7>) (tmp_reg_801.read());
}

void fc_layer3::thread_fc_layer3_weights_V_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_1))) {
        fc_layer3_weights_V_2_ce0 = ap_const_logic_1;
    } else {
        fc_layer3_weights_V_2_ce0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_fc_layer3_weights_V_3_address0() {
    fc_layer3_weights_V_3_address0 =  (sc_lv<7>) (tmp_reg_801.read());
}

void fc_layer3::thread_fc_layer3_weights_V_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_1))) {
        fc_layer3_weights_V_3_ce0 = ap_const_logic_1;
    } else {
        fc_layer3_weights_V_3_ce0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_fc_layer3_weights_V_4_address0() {
    fc_layer3_weights_V_4_address0 =  (sc_lv<7>) (tmp_reg_801.read());
}

void fc_layer3::thread_fc_layer3_weights_V_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        fc_layer3_weights_V_4_ce0 = ap_const_logic_1;
    } else {
        fc_layer3_weights_V_4_ce0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_fc_layer3_weights_V_5_address0() {
    fc_layer3_weights_V_5_address0 =  (sc_lv<7>) (tmp_reg_801.read());
}

void fc_layer3::thread_fc_layer3_weights_V_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        fc_layer3_weights_V_5_ce0 = ap_const_logic_1;
    } else {
        fc_layer3_weights_V_5_ce0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_fc_layer3_weights_V_6_address0() {
    fc_layer3_weights_V_6_address0 =  (sc_lv<7>) (tmp_reg_801.read());
}

void fc_layer3::thread_fc_layer3_weights_V_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        fc_layer3_weights_V_6_ce0 = ap_const_logic_1;
    } else {
        fc_layer3_weights_V_6_ce0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_fc_layer3_weights_V_7_address0() {
    fc_layer3_weights_V_7_address0 =  (sc_lv<7>) (tmp_reg_801.read());
}

void fc_layer3::thread_fc_layer3_weights_V_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        fc_layer3_weights_V_7_ce0 = ap_const_logic_1;
    } else {
        fc_layer3_weights_V_7_ce0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_fc_layer3_weights_V_8_address0() {
    fc_layer3_weights_V_8_address0 =  (sc_lv<7>) (tmp_reg_801.read());
}

void fc_layer3::thread_fc_layer3_weights_V_8_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        fc_layer3_weights_V_8_ce0 = ap_const_logic_1;
    } else {
        fc_layer3_weights_V_8_ce0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_fc_layer3_weights_V_9_address0() {
    fc_layer3_weights_V_9_address0 =  (sc_lv<7>) (tmp_reg_801.read());
}

void fc_layer3::thread_fc_layer3_weights_V_9_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        fc_layer3_weights_V_9_ce0 = ap_const_logic_1;
    } else {
        fc_layer3_weights_V_9_ce0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_grp_fu_658_p1() {
    grp_fu_658_p1 =  (sc_lv<16>) (OP2_V_cast_fu_405_p1.read());
}

void fc_layer3::thread_grp_fu_658_p2() {
    grp_fu_658_p2 = esl_concat<16,12>(output_V_q0.read(), ap_const_lv12_0);
}

void fc_layer3::thread_grp_fu_667_p1() {
    grp_fu_667_p1 =  (sc_lv<16>) (OP2_V_cast_fu_405_p1.read());
}

void fc_layer3::thread_grp_fu_667_p2() {
    grp_fu_667_p2 = esl_concat<16,12>(output_V_q1.read(), ap_const_lv12_0);
}

void fc_layer3::thread_grp_fu_676_p1() {
    grp_fu_676_p1 =  (sc_lv<16>) (OP2_V_cast_reg_828.read());
}

void fc_layer3::thread_grp_fu_676_p2() {
    grp_fu_676_p2 = esl_concat<16,12>(output_V_q1.read(), ap_const_lv12_0);
}

void fc_layer3::thread_grp_fu_684_p2() {
    grp_fu_684_p2 = esl_concat<16,12>(output_V_q0.read(), ap_const_lv12_0);
}

void fc_layer3::thread_grp_fu_693_p1() {
    grp_fu_693_p1 =  (sc_lv<16>) (OP2_V_cast_reg_828.read());
}

void fc_layer3::thread_grp_fu_693_p2() {
    grp_fu_693_p2 = esl_concat<16,12>(output_V_q1.read(), ap_const_lv12_0);
}

void fc_layer3::thread_grp_fu_701_p1() {
    grp_fu_701_p1 =  (sc_lv<16>) (OP2_V_cast_reg_828.read());
}

void fc_layer3::thread_grp_fu_701_p2() {
    grp_fu_701_p2 = esl_concat<16,12>(output_V_q0.read(), ap_const_lv12_0);
}

void fc_layer3::thread_grp_fu_709_p1() {
    grp_fu_709_p1 =  (sc_lv<16>) (OP2_V_cast_reg_828.read());
}

void fc_layer3::thread_grp_fu_709_p2() {
    grp_fu_709_p2 = esl_concat<16,12>(output_V_q1.read(), ap_const_lv12_0);
}

void fc_layer3::thread_grp_fu_717_p1() {
    grp_fu_717_p1 =  (sc_lv<16>) (OP2_V_cast_reg_828.read());
}

void fc_layer3::thread_grp_fu_717_p2() {
    grp_fu_717_p2 = esl_concat<16,12>(output_V_q0.read(), ap_const_lv12_0);
}

void fc_layer3::thread_grp_fu_725_p1() {
    grp_fu_725_p1 =  (sc_lv<16>) (OP2_V_cast_reg_828.read());
}

void fc_layer3::thread_grp_fu_725_p2() {
    grp_fu_725_p2 = esl_concat<16,12>(output_V_q1.read(), ap_const_lv12_0);
}

void fc_layer3::thread_grp_fu_733_p1() {
    grp_fu_733_p1 =  (sc_lv<16>) (OP2_V_cast_cast_reg_858.read());
}

void fc_layer3::thread_grp_fu_733_p2() {
    grp_fu_733_p2 = esl_concat<16,12>(output_V_q0.read(), ap_const_lv12_0);
}

void fc_layer3::thread_i_fu_624_p2() {
    i_fu_624_p2 = (!i1_reg_376.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i1_reg_376.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void fc_layer3::thread_in_V_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_V_V_blk_n = in_V_V_empty_n.read();
    } else {
        in_V_V_blk_n = ap_const_logic_1;
    }
}

void fc_layer3::thread_in_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_1))) {
        in_V_V_read = ap_const_logic_1;
    } else {
        in_V_V_read = ap_const_logic_0;
    }
}

void fc_layer3::thread_j_1_fu_393_p2() {
    j_1_fu_393_p2 = (!j_reg_365.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_reg_365.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void fc_layer3::thread_out_V_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_V_V_blk_n = out_V_V_full_n.read();
    } else {
        out_V_V_blk_n = ap_const_logic_1;
    }
}

void fc_layer3::thread_out_V_V_din() {
    out_V_V_din = esl_zext<16,15>(tmp_V_fu_645_p3.read());
}

void fc_layer3::thread_out_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(out_V_V_full_n.read(), ap_const_logic_1))) {
        out_V_V_write = ap_const_logic_1;
    } else {
        out_V_V_write = ap_const_logic_0;
    }
}

void fc_layer3::thread_output_V_addr_reg_741() {
    output_V_addr_reg_741 =  (sc_lv<4>) (ap_const_lv64_0);
}

void fc_layer3::thread_output_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_V_address0 =  (sc_lv<4>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        output_V_address0 =  (sc_lv<4>) (ap_const_lv64_9);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        output_V_address0 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        output_V_address0 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        output_V_address0 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        output_V_address0 = output_V_addr_reg_741.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        output_V_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else {
        output_V_address0 = "XXXX";
    }
}

void fc_layer3::thread_output_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        output_V_address1 =  (sc_lv<4>) (tmp_s_fu_630_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_V_address1 =  (sc_lv<4>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        output_V_address1 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        output_V_address1 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        output_V_address1 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        output_V_address1 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        output_V_address1 =  (sc_lv<4>) (ap_const_lv64_1);
    } else {
        output_V_address1 = "XXXX";
    }
}

void fc_layer3::thread_output_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        output_V_ce0 = ap_const_logic_1;
    } else {
        output_V_ce0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_output_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        output_V_ce1 = ap_const_logic_1;
    } else {
        output_V_ce1 = ap_const_logic_0;
    }
}

void fc_layer3::thread_output_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        output_V_d0 = tmp_33_9_reg_948.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_V_d0 = tmp_33_7_reg_938.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_V_d0 = tmp_33_5_reg_908.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        output_V_d0 = tmp_33_3_reg_868.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_V_d0 = tmp_33_1_reg_843.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        output_V_d0 = ap_const_lv16_0;
    } else {
        output_V_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void fc_layer3::thread_output_V_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        output_V_d1 = tmp_33_8_reg_943.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_V_d1 = tmp_33_6_reg_933.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_V_d1 = tmp_33_4_reg_903.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        output_V_d1 = tmp_33_2_reg_863.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_V_d1 = tmp_5_reg_838.read();
    } else {
        output_V_d1 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void fc_layer3::thread_output_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        output_V_we0 = ap_const_logic_1;
    } else {
        output_V_we0 = ap_const_logic_0;
    }
}

void fc_layer3::thread_output_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        output_V_we1 = ap_const_logic_1;
    } else {
        output_V_we1 = ap_const_logic_0;
    }
}

void fc_layer3::thread_tmp_12_fu_635_p1() {
    tmp_12_fu_635_p1 = output_V_q1.read().range(15-1, 0);
}

void fc_layer3::thread_tmp_V_fu_645_p3() {
    tmp_V_fu_645_p3 = (!tmp_i_fu_639_p2.read()[0].is_01())? sc_lv<15>(): ((tmp_i_fu_639_p2.read()[0].to_bool())? tmp_12_fu_635_p1.read(): ap_const_lv15_0);
}

void fc_layer3::thread_tmp_fu_399_p1() {
    tmp_fu_399_p1 = esl_zext<64,7>(j_reg_365.read());
}

void fc_layer3::thread_tmp_i_fu_639_p2() {
    tmp_i_fu_639_p2 = (!output_V_q1.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(output_V_q1.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void fc_layer3::thread_tmp_s_fu_630_p1() {
    tmp_s_fu_630_p1 = esl_zext<64,4>(i1_reg_376.read());
}

void fc_layer3::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_387_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(in_V_V_empty_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(exitcond_fu_618_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

}

