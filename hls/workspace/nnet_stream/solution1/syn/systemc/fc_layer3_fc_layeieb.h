// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __fc_layer3_fc_layeieb_H__
#define __fc_layer3_fc_layeieb_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct fc_layer3_fc_layeieb_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 12;
  static const unsigned AddressRange = 84;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(fc_layer3_fc_layeieb_ram) {
        ram[0] = "0b000011011100";
        ram[1] = "0b000110011111";
        ram[2] = "0b001000010001";
        ram[3] = "0b001011000110";
        ram[4] = "0b110101001101";
        ram[5] = "0b001001010010";
        ram[6] = "0b001101001100";
        ram[7] = "0b001100101011";
        ram[8] = "0b001111111100";
        ram[9] = "0b111111000011";
        ram[10] = "0b111011100111";
        ram[11] = "0b001001010001";
        ram[12] = "0b001101101101";
        ram[13] = "0b001011110001";
        ram[14] = "0b000011111110";
        ram[15] = "0b000001100000";
        ram[16] = "0b001101110100";
        ram[17] = "0b001011011000";
        ram[18] = "0b110010010010";
        ram[19] = "0b000011000001";
        ram[20] = "0b110111010101";
        ram[21] = "0b000111100000";
        ram[22] = "0b000011110100";
        ram[23] = "0b110101000001";
        ram[24] = "0b001000101011";
        ram[25] = "0b001011100011";
        ram[26] = "0b110110000000";
        ram[27] = "0b111111111010";
        ram[28] = "0b110010100110";
        ram[29] = "0b110010011111";
        ram[30] = "0b001001000110";
        ram[31] = "0b110000111011";
        ram[32] = "0b110101000101";
        ram[33] = "0b111111001010";
        ram[34] = "0b111111011011";
        ram[35] = "0b110001011111";
        ram[36] = "0b110010100110";
        ram[37] = "0b000101001101";
        ram[38] = "0b001011000000";
        ram[39] = "0b001110011111";
        ram[40] = "0b001011101111";
        ram[41] = "0b000001100111";
        ram[42] = "0b010000000011";
        ram[43] = "0b000010010101";
        ram[44] = "0b001010000111";
        ram[45] = "0b001101000000";
        ram[46] = "0b110111110111";
        ram[47] = "0b110111010101";
        ram[48] = "0b110010101001";
        ram[49] = "0b111010010110";
        ram[50] = "0b110010010110";
        ram[51] = "0b110110111100";
        ram[52] = "0b111000110001";
        ram[53] = "0b001001010110";
        ram[54] = "0b110100100111";
        ram[55] = "0b110100011000";
        ram[56] = "0b110001100100";
        ram[57] = "0b110100110100";
        ram[58] = "0b000010011001";
        ram[59] = "0b000010000110";
        ram[60] = "0b110010011000";
        ram[61] = "0b000001011111";
        ram[62] = "0b001101111100";
        ram[63] = "0b010000001001";
        ram[64] = "0b110010101011";
        ram[65] = "0b000110010100";
        ram[66] = "0b001001100111";
        ram[67] = "0b000111010101";
        ram[68] = "0b001100000101";
        ram[69] = "0b110101100111";
        ram[70] = "0b001101110011";
        ram[71] = "0b000011011100";
        ram[72] = "0b000010111100";
        ram[73] = "0b001110100001";
        ram[74] = "0b001011011111";
        ram[75] = "0b111001110001";
        ram[76] = "0b111101100010";
        ram[77] = "0b001110000111";
        ram[78] = "0b111011010000";
        ram[79] = "0b111101001000";
        ram[80] = "0b110100010010";
        ram[81] = "0b111011000001";
        ram[82] = "0b110100011011";
        ram[83] = "0b000100100000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(fc_layer3_fc_layeieb) {


static const unsigned DataWidth = 12;
static const unsigned AddressRange = 84;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


fc_layer3_fc_layeieb_ram* meminst;


SC_CTOR(fc_layer3_fc_layeieb) {
meminst = new fc_layer3_fc_layeieb_ram("fc_layer3_fc_layeieb_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~fc_layer3_fc_layeieb() {
    delete meminst;
}


};//endmodule
#endif
