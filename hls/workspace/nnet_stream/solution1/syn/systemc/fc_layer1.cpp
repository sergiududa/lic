// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fc_layer1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fc_layer1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fc_layer1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> fc_layer1::ap_ST_fsm_state1 = "1";
const sc_lv<8> fc_layer1::ap_ST_fsm_state2 = "10";
const sc_lv<8> fc_layer1::ap_ST_fsm_state3 = "100";
const sc_lv<8> fc_layer1::ap_ST_fsm_state4 = "1000";
const sc_lv<8> fc_layer1::ap_ST_fsm_state5 = "10000";
const sc_lv<8> fc_layer1::ap_ST_fsm_state6 = "100000";
const sc_lv<8> fc_layer1::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> fc_layer1::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> fc_layer1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> fc_layer1::ap_const_lv32_7 = "111";
const sc_lv<32> fc_layer1::ap_const_lv32_1 = "1";
const sc_lv<1> fc_layer1::ap_const_lv1_0 = "0";
const sc_lv<32> fc_layer1::ap_const_lv32_2 = "10";
const sc_lv<32> fc_layer1::ap_const_lv32_3 = "11";
const sc_lv<32> fc_layer1::ap_const_lv32_4 = "100";
const sc_lv<32> fc_layer1::ap_const_lv32_6 = "110";
const sc_lv<1> fc_layer1::ap_const_lv1_1 = "1";
const sc_lv<10> fc_layer1::ap_const_lv10_0 = "0000000000";
const sc_lv<7> fc_layer1::ap_const_lv7_0 = "0000000";
const sc_lv<32> fc_layer1::ap_const_lv32_5 = "101";
const sc_lv<64> fc_layer1::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<16> fc_layer1::ap_const_lv16_0 = "0000000000000000";
const sc_lv<10> fc_layer1::ap_const_lv10_240 = "1001000000";
const sc_lv<10> fc_layer1::ap_const_lv10_1 = "1";
const sc_lv<3> fc_layer1::ap_const_lv3_0 = "000";
const sc_lv<7> fc_layer1::ap_const_lv7_78 = "1111000";
const sc_lv<7> fc_layer1::ap_const_lv7_1 = "1";
const sc_lv<12> fc_layer1::ap_const_lv12_0 = "000000000000";
const sc_lv<32> fc_layer1::ap_const_lv32_C = "1100";
const sc_lv<32> fc_layer1::ap_const_lv32_1B = "11011";
const sc_lv<7> fc_layer1::ap_const_lv7_2 = "10";
const sc_lv<7> fc_layer1::ap_const_lv7_3 = "11";
const sc_lv<7> fc_layer1::ap_const_lv7_4 = "100";
const sc_lv<15> fc_layer1::ap_const_lv15_0 = "000000000000000";
const bool fc_layer1::ap_const_boolean_1 = true;

fc_layer1::fc_layer1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    fc_layer1_weights_V_U = new fc_layer1_fc_layeh6b("fc_layer1_weights_V_U");
    fc_layer1_weights_V_U->clk(ap_clk);
    fc_layer1_weights_V_U->reset(ap_rst);
    fc_layer1_weights_V_U->address0(fc_layer1_weights_V_address0);
    fc_layer1_weights_V_U->ce0(fc_layer1_weights_V_ce0);
    fc_layer1_weights_V_U->q0(fc_layer1_weights_V_q0);
    fc_layer1_weights_V_U->address1(fc_layer1_weights_V_address1);
    fc_layer1_weights_V_U->ce1(fc_layer1_weights_V_ce1);
    fc_layer1_weights_V_U->q1(fc_layer1_weights_V_q1);
    output_V_U = new fc_layer1_output_V("output_V_U");
    output_V_U->clk(ap_clk);
    output_V_U->reset(ap_rst);
    output_V_U->address0(output_V_address0);
    output_V_U->ce0(output_V_ce0);
    output_V_U->we0(output_V_we0);
    output_V_U->d0(output_V_d0);
    output_V_U->q0(output_V_q0);
    output_V_U->address1(output_V_address1);
    output_V_U->ce1(output_V_ce1);
    output_V_U->we1(output_V_we1);
    output_V_U->d1(output_V_d1);
    output_V_U->q1(output_V_q1);
    nnet_mac_muladd_1bZs_U212 = new nnet_mac_muladd_1bZs<1,1,16,10,28,28>("nnet_mac_muladd_1bZs_U212");
    nnet_mac_muladd_1bZs_U212->din0(grp_fu_524_p0);
    nnet_mac_muladd_1bZs_U212->din1(fc_layer1_weights_V_q0);
    nnet_mac_muladd_1bZs_U212->din2(grp_fu_524_p2);
    nnet_mac_muladd_1bZs_U212->dout(grp_fu_524_p3);
    nnet_mac_muladd_1bZs_U213 = new nnet_mac_muladd_1bZs<1,1,16,10,28,28>("nnet_mac_muladd_1bZs_U213");
    nnet_mac_muladd_1bZs_U213->din0(grp_fu_532_p0);
    nnet_mac_muladd_1bZs_U213->din1(fc_layer1_weights_V_q1);
    nnet_mac_muladd_1bZs_U213->din2(grp_fu_532_p2);
    nnet_mac_muladd_1bZs_U213->dout(grp_fu_532_p3);
    nnet_mac_muladd_1bZs_U214 = new nnet_mac_muladd_1bZs<1,1,16,10,28,28>("nnet_mac_muladd_1bZs_U214");
    nnet_mac_muladd_1bZs_U214->din0(grp_fu_540_p0);
    nnet_mac_muladd_1bZs_U214->din1(fc_layer1_weights_V_q0);
    nnet_mac_muladd_1bZs_U214->din2(grp_fu_540_p2);
    nnet_mac_muladd_1bZs_U214->dout(grp_fu_540_p3);
    nnet_mac_muladd_1bZs_U215 = new nnet_mac_muladd_1bZs<1,1,16,10,28,28>("nnet_mac_muladd_1bZs_U215");
    nnet_mac_muladd_1bZs_U215->din0(grp_fu_548_p0);
    nnet_mac_muladd_1bZs_U215->din1(fc_layer1_weights_V_q1);
    nnet_mac_muladd_1bZs_U215->din2(grp_fu_548_p2);
    nnet_mac_muladd_1bZs_U215->dout(grp_fu_548_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( exitcond3_fu_248_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond_fu_484_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond_fu_484_p2 );

    SC_METHOD(thread_exitcond2_fu_294_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i5_reg_225 );

    SC_METHOD(thread_exitcond3_fu_248_p2);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_248_p2 );
    sensitive << ( j_reg_214 );

    SC_METHOD(thread_exitcond_fu_484_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i1_reg_237 );

    SC_METHOD(thread_fc_layer1_weights_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_25_cast_fu_314_p1 );
    sensitive << ( tmp_27_cast_fu_406_p1 );

    SC_METHOD(thread_fc_layer1_weights_V_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_26_cast_fu_339_p1 );
    sensitive << ( tmp_28_cast_fu_431_p1 );

    SC_METHOD(thread_fc_layer1_weights_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_fc_layer1_weights_V_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_524_p0);
    sensitive << ( tmp_17_cast_reg_572 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_524_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V_q0 );

    SC_METHOD(thread_grp_fu_532_p0);
    sensitive << ( tmp_17_cast_reg_572 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_532_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V_q1 );

    SC_METHOD(thread_grp_fu_540_p0);
    sensitive << ( tmp_17_cast_reg_572 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_540_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( output_V_q1 );

    SC_METHOD(thread_grp_fu_548_p0);
    sensitive << ( tmp_17_cast_reg_572 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_548_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( output_V_q0 );

    SC_METHOD(thread_i_8_1_fu_386_p2);
    sensitive << ( i5_reg_225 );

    SC_METHOD(thread_i_8_2_fu_411_p2);
    sensitive << ( i5_reg_225 );

    SC_METHOD(thread_i_8_3_fu_436_p2);
    sensitive << ( i5_reg_225 );

    SC_METHOD(thread_i_8_s_fu_319_p2);
    sensitive << ( i5_reg_225 );

    SC_METHOD(thread_i_fu_490_p2);
    sensitive << ( i1_reg_237 );

    SC_METHOD(thread_in_V_V_blk_n);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_248_p2 );

    SC_METHOD(thread_in_V_V_read);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_248_p2 );

    SC_METHOD(thread_j_3_fu_254_p2);
    sensitive << ( j_reg_214 );

    SC_METHOD(thread_out_V_V_blk_n);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_out_V_V_din);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_V_fu_511_p3 );

    SC_METHOD(thread_out_V_V_write);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_output_V_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( output_V_addr_11_reg_599 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V_addr_13_reg_630 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_14_fu_300_p1 );
    sensitive << ( tmp_46_3_fu_417_p1 );

    SC_METHOD(thread_output_V_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( output_V_addr_10_reg_588 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V_addr_12_reg_620 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_46_1_fu_325_p1 );
    sensitive << ( tmp_46_2_fu_392_p1 );
    sensitive << ( tmp_s_fu_496_p1 );

    SC_METHOD(thread_output_V_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_V_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_V_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_51_1_reg_610 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_51_3_reg_645 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_V_d1);
    sensitive << ( tmp_19_reg_605 );
    sensitive << ( tmp_51_2_reg_640 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_V_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_V_we1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_p_shl1_cast_fu_280_p1);
    sensitive << ( tmp_20_fu_272_p3 );

    SC_METHOD(thread_p_shl_cast_fu_268_p1);
    sensitive << ( tmp_fu_260_p3 );

    SC_METHOD(thread_tmp_14_cast_fu_305_p1);
    sensitive << ( i5_reg_225 );

    SC_METHOD(thread_tmp_14_fu_300_p1);
    sensitive << ( i5_reg_225 );

    SC_METHOD(thread_tmp_17_cast_fu_290_p1);
    sensitive << ( in_V_V_dout );

    SC_METHOD(thread_tmp_18_fu_501_p1);
    sensitive << ( output_V_q1 );

    SC_METHOD(thread_tmp_20_fu_272_p3);
    sensitive << ( j_reg_214 );

    SC_METHOD(thread_tmp_21_fu_284_p2);
    sensitive << ( p_shl_cast_fu_268_p1 );
    sensitive << ( p_shl1_cast_fu_280_p1 );

    SC_METHOD(thread_tmp_22_fu_309_p2);
    sensitive << ( tmp_21_reg_564 );
    sensitive << ( tmp_14_cast_fu_305_p1 );

    SC_METHOD(thread_tmp_23_fu_334_p2);
    sensitive << ( tmp_21_reg_564 );
    sensitive << ( tmp_46_1_cast_fu_330_p1 );

    SC_METHOD(thread_tmp_24_fu_401_p2);
    sensitive << ( tmp_21_reg_564 );
    sensitive << ( tmp_46_2_cast_fu_397_p1 );

    SC_METHOD(thread_tmp_25_cast_fu_314_p1);
    sensitive << ( tmp_22_fu_309_p2 );

    SC_METHOD(thread_tmp_25_fu_426_p2);
    sensitive << ( tmp_21_reg_564 );
    sensitive << ( tmp_46_3_cast_fu_422_p1 );

    SC_METHOD(thread_tmp_26_cast_fu_339_p1);
    sensitive << ( tmp_23_fu_334_p2 );

    SC_METHOD(thread_tmp_27_cast_fu_406_p1);
    sensitive << ( tmp_24_fu_401_p2 );

    SC_METHOD(thread_tmp_28_cast_fu_431_p1);
    sensitive << ( tmp_25_fu_426_p2 );

    SC_METHOD(thread_tmp_46_1_cast_fu_330_p1);
    sensitive << ( i_8_s_fu_319_p2 );

    SC_METHOD(thread_tmp_46_1_fu_325_p1);
    sensitive << ( i_8_s_fu_319_p2 );

    SC_METHOD(thread_tmp_46_2_cast_fu_397_p1);
    sensitive << ( i_8_1_fu_386_p2 );

    SC_METHOD(thread_tmp_46_2_fu_392_p1);
    sensitive << ( i_8_1_fu_386_p2 );

    SC_METHOD(thread_tmp_46_3_cast_fu_422_p1);
    sensitive << ( i_8_2_fu_411_p2 );

    SC_METHOD(thread_tmp_46_3_fu_417_p1);
    sensitive << ( i_8_2_fu_411_p2 );

    SC_METHOD(thread_tmp_V_fu_511_p3);
    sensitive << ( tmp_i_fu_505_p2 );
    sensitive << ( tmp_18_fu_501_p1 );

    SC_METHOD(thread_tmp_fu_260_p3);
    sensitive << ( j_reg_214 );

    SC_METHOD(thread_tmp_i_fu_505_p2);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( output_V_q1 );

    SC_METHOD(thread_tmp_s_fu_496_p1);
    sensitive << ( i1_reg_237 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_V_V_full_n );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_248_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_294_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond_fu_484_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fc_layer1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_V_V_din, "(port)out_V_V_din");
    sc_trace(mVcdFile, out_V_V_full_n, "(port)out_V_V_full_n");
    sc_trace(mVcdFile, out_V_V_write, "(port)out_V_V_write");
    sc_trace(mVcdFile, in_V_V_dout, "(port)in_V_V_dout");
    sc_trace(mVcdFile, in_V_V_empty_n, "(port)in_V_V_empty_n");
    sc_trace(mVcdFile, in_V_V_read, "(port)in_V_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, fc_layer1_weights_V_address0, "fc_layer1_weights_V_address0");
    sc_trace(mVcdFile, fc_layer1_weights_V_ce0, "fc_layer1_weights_V_ce0");
    sc_trace(mVcdFile, fc_layer1_weights_V_q0, "fc_layer1_weights_V_q0");
    sc_trace(mVcdFile, fc_layer1_weights_V_address1, "fc_layer1_weights_V_address1");
    sc_trace(mVcdFile, fc_layer1_weights_V_ce1, "fc_layer1_weights_V_ce1");
    sc_trace(mVcdFile, fc_layer1_weights_V_q1, "fc_layer1_weights_V_q1");
    sc_trace(mVcdFile, out_V_V_blk_n, "out_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, in_V_V_blk_n, "in_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond3_fu_248_p2, "exitcond3_fu_248_p2");
    sc_trace(mVcdFile, j_3_fu_254_p2, "j_3_fu_254_p2");
    sc_trace(mVcdFile, j_3_reg_559, "j_3_reg_559");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, tmp_21_fu_284_p2, "tmp_21_fu_284_p2");
    sc_trace(mVcdFile, tmp_21_reg_564, "tmp_21_reg_564");
    sc_trace(mVcdFile, tmp_17_cast_fu_290_p1, "tmp_17_cast_fu_290_p1");
    sc_trace(mVcdFile, tmp_17_cast_reg_572, "tmp_17_cast_reg_572");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond2_fu_294_p2, "exitcond2_fu_294_p2");
    sc_trace(mVcdFile, output_V_addr_10_reg_588, "output_V_addr_10_reg_588");
    sc_trace(mVcdFile, output_V_addr_11_reg_599, "output_V_addr_11_reg_599");
    sc_trace(mVcdFile, tmp_19_reg_605, "tmp_19_reg_605");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_51_1_reg_610, "tmp_51_1_reg_610");
    sc_trace(mVcdFile, output_V_addr_12_reg_620, "output_V_addr_12_reg_620");
    sc_trace(mVcdFile, output_V_addr_13_reg_630, "output_V_addr_13_reg_630");
    sc_trace(mVcdFile, i_8_3_fu_436_p2, "i_8_3_fu_436_p2");
    sc_trace(mVcdFile, i_8_3_reg_635, "i_8_3_reg_635");
    sc_trace(mVcdFile, tmp_51_2_reg_640, "tmp_51_2_reg_640");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_51_3_reg_645, "tmp_51_3_reg_645");
    sc_trace(mVcdFile, i_fu_490_p2, "i_fu_490_p2");
    sc_trace(mVcdFile, i_reg_653, "i_reg_653");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, exitcond_fu_484_p2, "exitcond_fu_484_p2");
    sc_trace(mVcdFile, output_V_address0, "output_V_address0");
    sc_trace(mVcdFile, output_V_ce0, "output_V_ce0");
    sc_trace(mVcdFile, output_V_we0, "output_V_we0");
    sc_trace(mVcdFile, output_V_d0, "output_V_d0");
    sc_trace(mVcdFile, output_V_q0, "output_V_q0");
    sc_trace(mVcdFile, output_V_address1, "output_V_address1");
    sc_trace(mVcdFile, output_V_ce1, "output_V_ce1");
    sc_trace(mVcdFile, output_V_we1, "output_V_we1");
    sc_trace(mVcdFile, output_V_d1, "output_V_d1");
    sc_trace(mVcdFile, output_V_q1, "output_V_q1");
    sc_trace(mVcdFile, j_reg_214, "j_reg_214");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, i5_reg_225, "i5_reg_225");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i1_reg_237, "i1_reg_237");
    sc_trace(mVcdFile, tmp_25_cast_fu_314_p1, "tmp_25_cast_fu_314_p1");
    sc_trace(mVcdFile, tmp_14_fu_300_p1, "tmp_14_fu_300_p1");
    sc_trace(mVcdFile, tmp_26_cast_fu_339_p1, "tmp_26_cast_fu_339_p1");
    sc_trace(mVcdFile, tmp_46_1_fu_325_p1, "tmp_46_1_fu_325_p1");
    sc_trace(mVcdFile, tmp_27_cast_fu_406_p1, "tmp_27_cast_fu_406_p1");
    sc_trace(mVcdFile, tmp_46_2_fu_392_p1, "tmp_46_2_fu_392_p1");
    sc_trace(mVcdFile, tmp_28_cast_fu_431_p1, "tmp_28_cast_fu_431_p1");
    sc_trace(mVcdFile, tmp_46_3_fu_417_p1, "tmp_46_3_fu_417_p1");
    sc_trace(mVcdFile, tmp_s_fu_496_p1, "tmp_s_fu_496_p1");
    sc_trace(mVcdFile, tmp_fu_260_p3, "tmp_fu_260_p3");
    sc_trace(mVcdFile, tmp_20_fu_272_p3, "tmp_20_fu_272_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_268_p1, "p_shl_cast_fu_268_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_280_p1, "p_shl1_cast_fu_280_p1");
    sc_trace(mVcdFile, tmp_14_cast_fu_305_p1, "tmp_14_cast_fu_305_p1");
    sc_trace(mVcdFile, tmp_22_fu_309_p2, "tmp_22_fu_309_p2");
    sc_trace(mVcdFile, i_8_s_fu_319_p2, "i_8_s_fu_319_p2");
    sc_trace(mVcdFile, tmp_46_1_cast_fu_330_p1, "tmp_46_1_cast_fu_330_p1");
    sc_trace(mVcdFile, tmp_23_fu_334_p2, "tmp_23_fu_334_p2");
    sc_trace(mVcdFile, grp_fu_524_p3, "grp_fu_524_p3");
    sc_trace(mVcdFile, grp_fu_532_p3, "grp_fu_532_p3");
    sc_trace(mVcdFile, i_8_1_fu_386_p2, "i_8_1_fu_386_p2");
    sc_trace(mVcdFile, tmp_46_2_cast_fu_397_p1, "tmp_46_2_cast_fu_397_p1");
    sc_trace(mVcdFile, tmp_24_fu_401_p2, "tmp_24_fu_401_p2");
    sc_trace(mVcdFile, i_8_2_fu_411_p2, "i_8_2_fu_411_p2");
    sc_trace(mVcdFile, tmp_46_3_cast_fu_422_p1, "tmp_46_3_cast_fu_422_p1");
    sc_trace(mVcdFile, tmp_25_fu_426_p2, "tmp_25_fu_426_p2");
    sc_trace(mVcdFile, grp_fu_540_p3, "grp_fu_540_p3");
    sc_trace(mVcdFile, grp_fu_548_p3, "grp_fu_548_p3");
    sc_trace(mVcdFile, tmp_i_fu_505_p2, "tmp_i_fu_505_p2");
    sc_trace(mVcdFile, tmp_18_fu_501_p1, "tmp_18_fu_501_p1");
    sc_trace(mVcdFile, tmp_V_fu_511_p3, "tmp_V_fu_511_p3");
    sc_trace(mVcdFile, grp_fu_524_p0, "grp_fu_524_p0");
    sc_trace(mVcdFile, grp_fu_524_p2, "grp_fu_524_p2");
    sc_trace(mVcdFile, grp_fu_532_p0, "grp_fu_532_p0");
    sc_trace(mVcdFile, grp_fu_532_p2, "grp_fu_532_p2");
    sc_trace(mVcdFile, grp_fu_540_p0, "grp_fu_540_p0");
    sc_trace(mVcdFile, grp_fu_540_p2, "grp_fu_540_p2");
    sc_trace(mVcdFile, grp_fu_548_p0, "grp_fu_548_p0");
    sc_trace(mVcdFile, grp_fu_548_p2, "grp_fu_548_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

fc_layer1::~fc_layer1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete fc_layer1_weights_V_U;
    delete output_V_U;
    delete nnet_mac_muladd_1bZs_U212;
    delete nnet_mac_muladd_1bZs_U213;
    delete nnet_mac_muladd_1bZs_U214;
    delete nnet_mac_muladd_1bZs_U215;
}

void fc_layer1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                    esl_seteq<1,1,1>(exitcond_fu_484_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())) && 
         esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_1))) {
        i1_reg_237 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(out_V_V_full_n.read(), ap_const_logic_1))) {
        i1_reg_237 = i_reg_653.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i5_reg_225 = i_8_3_reg_635.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())))) {
        i5_reg_225 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        j_reg_214 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_294_p2.read(), ap_const_lv1_1))) {
        j_reg_214 = j_3_reg_559.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_8_3_reg_635 = i_8_3_fu_436_p2.read();
        output_V_addr_12_reg_620 =  (sc_lv<7>) (tmp_46_2_fu_392_p1.read());
        output_V_addr_13_reg_630 =  (sc_lv<7>) (tmp_46_3_fu_417_p1.read());
        tmp_19_reg_605 = grp_fu_524_p3.read().range(27, 12);
        tmp_51_1_reg_610 = grp_fu_532_p3.read().range(27, 12);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_reg_653 = i_fu_490_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())))) {
        j_3_reg_559 = j_3_fu_254_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_294_p2.read()))) {
        output_V_addr_10_reg_588 =  (sc_lv<7>) (tmp_14_fu_300_p1.read());
        output_V_addr_11_reg_599 =  (sc_lv<7>) (tmp_46_1_fu_325_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())))) {
        tmp_17_cast_reg_572 = tmp_17_cast_fu_290_p1.read();
        tmp_21_reg_564 = tmp_21_fu_284_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_51_2_reg_640 = grp_fu_540_p3.read().range(27, 12);
        tmp_51_3_reg_645 = grp_fu_548_p3.read().range(27, 12);
    }
}

void fc_layer1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fc_layer1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fc_layer1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void fc_layer1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void fc_layer1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void fc_layer1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void fc_layer1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void fc_layer1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void fc_layer1::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void fc_layer1::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()));
}

void fc_layer1::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_484_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void fc_layer1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fc_layer1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_484_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fc_layer1::thread_exitcond2_fu_294_p2() {
    exitcond2_fu_294_p2 = (!i5_reg_225.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<1>(): sc_lv<1>(i5_reg_225.read() == ap_const_lv7_78);
}

void fc_layer1::thread_exitcond3_fu_248_p2() {
    exitcond3_fu_248_p2 = (!j_reg_214.read().is_01() || !ap_const_lv10_240.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_214.read() == ap_const_lv10_240);
}

void fc_layer1::thread_exitcond_fu_484_p2() {
    exitcond_fu_484_p2 = (!i1_reg_237.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_237.read() == ap_const_lv7_78);
}

void fc_layer1::thread_fc_layer1_weights_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        fc_layer1_weights_V_address0 =  (sc_lv<17>) (tmp_27_cast_fu_406_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        fc_layer1_weights_V_address0 =  (sc_lv<17>) (tmp_25_cast_fu_314_p1.read());
    } else {
        fc_layer1_weights_V_address0 = "XXXXXXXXXXXXXXXXX";
    }
}

void fc_layer1::thread_fc_layer1_weights_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        fc_layer1_weights_V_address1 =  (sc_lv<17>) (tmp_28_cast_fu_431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        fc_layer1_weights_V_address1 =  (sc_lv<17>) (tmp_26_cast_fu_339_p1.read());
    } else {
        fc_layer1_weights_V_address1 = "XXXXXXXXXXXXXXXXX";
    }
}

void fc_layer1::thread_fc_layer1_weights_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        fc_layer1_weights_V_ce0 = ap_const_logic_1;
    } else {
        fc_layer1_weights_V_ce0 = ap_const_logic_0;
    }
}

void fc_layer1::thread_fc_layer1_weights_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        fc_layer1_weights_V_ce1 = ap_const_logic_1;
    } else {
        fc_layer1_weights_V_ce1 = ap_const_logic_0;
    }
}

void fc_layer1::thread_grp_fu_524_p0() {
    grp_fu_524_p0 =  (sc_lv<16>) (tmp_17_cast_reg_572.read());
}

void fc_layer1::thread_grp_fu_524_p2() {
    grp_fu_524_p2 = esl_concat<16,12>(output_V_q0.read(), ap_const_lv12_0);
}

void fc_layer1::thread_grp_fu_532_p0() {
    grp_fu_532_p0 =  (sc_lv<16>) (tmp_17_cast_reg_572.read());
}

void fc_layer1::thread_grp_fu_532_p2() {
    grp_fu_532_p2 = esl_concat<16,12>(output_V_q1.read(), ap_const_lv12_0);
}

void fc_layer1::thread_grp_fu_540_p0() {
    grp_fu_540_p0 =  (sc_lv<16>) (tmp_17_cast_reg_572.read());
}

void fc_layer1::thread_grp_fu_540_p2() {
    grp_fu_540_p2 = esl_concat<16,12>(output_V_q1.read(), ap_const_lv12_0);
}

void fc_layer1::thread_grp_fu_548_p0() {
    grp_fu_548_p0 =  (sc_lv<16>) (tmp_17_cast_reg_572.read());
}

void fc_layer1::thread_grp_fu_548_p2() {
    grp_fu_548_p2 = esl_concat<16,12>(output_V_q0.read(), ap_const_lv12_0);
}

void fc_layer1::thread_i_8_1_fu_386_p2() {
    i_8_1_fu_386_p2 = (i5_reg_225.read() | ap_const_lv7_2);
}

void fc_layer1::thread_i_8_2_fu_411_p2() {
    i_8_2_fu_411_p2 = (i5_reg_225.read() | ap_const_lv7_3);
}

void fc_layer1::thread_i_8_3_fu_436_p2() {
    i_8_3_fu_436_p2 = (!i5_reg_225.read().is_01() || !ap_const_lv7_4.is_01())? sc_lv<7>(): (sc_biguint<7>(i5_reg_225.read()) + sc_biguint<7>(ap_const_lv7_4));
}

void fc_layer1::thread_i_8_s_fu_319_p2() {
    i_8_s_fu_319_p2 = (i5_reg_225.read() | ap_const_lv7_1);
}

void fc_layer1::thread_i_fu_490_p2() {
    i_fu_490_p2 = (!i1_reg_237.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i1_reg_237.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void fc_layer1::thread_in_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_0))) {
        in_V_V_blk_n = in_V_V_empty_n.read();
    } else {
        in_V_V_blk_n = ap_const_logic_1;
    }
}

void fc_layer1::thread_in_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())))) {
        in_V_V_read = ap_const_logic_1;
    } else {
        in_V_V_read = ap_const_logic_0;
    }
}

void fc_layer1::thread_j_3_fu_254_p2() {
    j_3_fu_254_p2 = (!j_reg_214.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_reg_214.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void fc_layer1::thread_out_V_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        out_V_V_blk_n = out_V_V_full_n.read();
    } else {
        out_V_V_blk_n = ap_const_logic_1;
    }
}

void fc_layer1::thread_out_V_V_din() {
    out_V_V_din = esl_zext<16,15>(tmp_V_fu_511_p3.read());
}

void fc_layer1::thread_out_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(out_V_V_full_n.read(), ap_const_logic_1))) {
        out_V_V_write = ap_const_logic_1;
    } else {
        out_V_V_write = ap_const_logic_0;
    }
}

void fc_layer1::thread_output_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_V_address0 = output_V_addr_13_reg_630.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_V_address0 = output_V_addr_11_reg_599.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_V_address0 =  (sc_lv<7>) (tmp_46_3_fu_417_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_V_address0 =  (sc_lv<7>) (tmp_14_fu_300_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        output_V_address0 =  (sc_lv<7>) (ap_const_lv64_0);
    } else {
        output_V_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void fc_layer1::thread_output_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_V_address1 =  (sc_lv<7>) (tmp_s_fu_496_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_V_address1 = output_V_addr_12_reg_620.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_V_address1 = output_V_addr_10_reg_588.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_V_address1 =  (sc_lv<7>) (tmp_46_2_fu_392_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_V_address1 =  (sc_lv<7>) (tmp_46_1_fu_325_p1.read());
    } else {
        output_V_address1 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void fc_layer1::thread_output_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        output_V_ce0 = ap_const_logic_1;
    } else {
        output_V_ce0 = ap_const_logic_0;
    }
}

void fc_layer1::thread_output_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        output_V_ce1 = ap_const_logic_1;
    } else {
        output_V_ce1 = ap_const_logic_0;
    }
}

void fc_layer1::thread_output_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_V_d0 = tmp_51_3_reg_645.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_V_d0 = tmp_51_1_reg_610.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        output_V_d0 = ap_const_lv16_0;
    } else {
        output_V_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void fc_layer1::thread_output_V_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_V_d1 = tmp_51_2_reg_640.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_V_d1 = tmp_19_reg_605.read();
    } else {
        output_V_d1 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void fc_layer1::thread_output_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        output_V_we0 = ap_const_logic_1;
    } else {
        output_V_we0 = ap_const_logic_0;
    }
}

void fc_layer1::thread_output_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        output_V_we1 = ap_const_logic_1;
    } else {
        output_V_we1 = ap_const_logic_0;
    }
}

void fc_layer1::thread_p_shl1_cast_fu_280_p1() {
    p_shl1_cast_fu_280_p1 = esl_zext<18,13>(tmp_20_fu_272_p3.read());
}

void fc_layer1::thread_p_shl_cast_fu_268_p1() {
    p_shl_cast_fu_268_p1 = esl_zext<18,17>(tmp_fu_260_p3.read());
}

void fc_layer1::thread_tmp_14_cast_fu_305_p1() {
    tmp_14_cast_fu_305_p1 = esl_zext<18,7>(i5_reg_225.read());
}

void fc_layer1::thread_tmp_14_fu_300_p1() {
    tmp_14_fu_300_p1 = esl_zext<64,7>(i5_reg_225.read());
}

void fc_layer1::thread_tmp_17_cast_fu_290_p1() {
    tmp_17_cast_fu_290_p1 = esl_sext<27,16>(in_V_V_dout.read());
}

void fc_layer1::thread_tmp_18_fu_501_p1() {
    tmp_18_fu_501_p1 = output_V_q1.read().range(15-1, 0);
}

void fc_layer1::thread_tmp_20_fu_272_p3() {
    tmp_20_fu_272_p3 = esl_concat<10,3>(j_reg_214.read(), ap_const_lv3_0);
}

void fc_layer1::thread_tmp_21_fu_284_p2() {
    tmp_21_fu_284_p2 = (!p_shl_cast_fu_268_p1.read().is_01() || !p_shl1_cast_fu_280_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(p_shl_cast_fu_268_p1.read()) - sc_biguint<18>(p_shl1_cast_fu_280_p1.read()));
}

void fc_layer1::thread_tmp_22_fu_309_p2() {
    tmp_22_fu_309_p2 = (!tmp_14_cast_fu_305_p1.read().is_01() || !tmp_21_reg_564.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_14_cast_fu_305_p1.read()) + sc_biguint<18>(tmp_21_reg_564.read()));
}

void fc_layer1::thread_tmp_23_fu_334_p2() {
    tmp_23_fu_334_p2 = (!tmp_46_1_cast_fu_330_p1.read().is_01() || !tmp_21_reg_564.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_46_1_cast_fu_330_p1.read()) + sc_biguint<18>(tmp_21_reg_564.read()));
}

void fc_layer1::thread_tmp_24_fu_401_p2() {
    tmp_24_fu_401_p2 = (!tmp_46_2_cast_fu_397_p1.read().is_01() || !tmp_21_reg_564.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_46_2_cast_fu_397_p1.read()) + sc_biguint<18>(tmp_21_reg_564.read()));
}

void fc_layer1::thread_tmp_25_cast_fu_314_p1() {
    tmp_25_cast_fu_314_p1 = esl_sext<64,18>(tmp_22_fu_309_p2.read());
}

void fc_layer1::thread_tmp_25_fu_426_p2() {
    tmp_25_fu_426_p2 = (!tmp_46_3_cast_fu_422_p1.read().is_01() || !tmp_21_reg_564.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_46_3_cast_fu_422_p1.read()) + sc_biguint<18>(tmp_21_reg_564.read()));
}

void fc_layer1::thread_tmp_26_cast_fu_339_p1() {
    tmp_26_cast_fu_339_p1 = esl_sext<64,18>(tmp_23_fu_334_p2.read());
}

void fc_layer1::thread_tmp_27_cast_fu_406_p1() {
    tmp_27_cast_fu_406_p1 = esl_sext<64,18>(tmp_24_fu_401_p2.read());
}

void fc_layer1::thread_tmp_28_cast_fu_431_p1() {
    tmp_28_cast_fu_431_p1 = esl_sext<64,18>(tmp_25_fu_426_p2.read());
}

void fc_layer1::thread_tmp_46_1_cast_fu_330_p1() {
    tmp_46_1_cast_fu_330_p1 = esl_zext<18,7>(i_8_s_fu_319_p2.read());
}

void fc_layer1::thread_tmp_46_1_fu_325_p1() {
    tmp_46_1_fu_325_p1 = esl_zext<64,7>(i_8_s_fu_319_p2.read());
}

void fc_layer1::thread_tmp_46_2_cast_fu_397_p1() {
    tmp_46_2_cast_fu_397_p1 = esl_zext<18,7>(i_8_1_fu_386_p2.read());
}

void fc_layer1::thread_tmp_46_2_fu_392_p1() {
    tmp_46_2_fu_392_p1 = esl_zext<64,7>(i_8_1_fu_386_p2.read());
}

void fc_layer1::thread_tmp_46_3_cast_fu_422_p1() {
    tmp_46_3_cast_fu_422_p1 = esl_zext<18,7>(i_8_2_fu_411_p2.read());
}

void fc_layer1::thread_tmp_46_3_fu_417_p1() {
    tmp_46_3_fu_417_p1 = esl_zext<64,7>(i_8_2_fu_411_p2.read());
}

void fc_layer1::thread_tmp_V_fu_511_p3() {
    tmp_V_fu_511_p3 = (!tmp_i_fu_505_p2.read()[0].is_01())? sc_lv<15>(): ((tmp_i_fu_505_p2.read()[0].to_bool())? tmp_18_fu_501_p1.read(): ap_const_lv15_0);
}

void fc_layer1::thread_tmp_fu_260_p3() {
    tmp_fu_260_p3 = esl_concat<10,7>(j_reg_214.read(), ap_const_lv7_0);
}

void fc_layer1::thread_tmp_i_fu_505_p2() {
    tmp_i_fu_505_p2 = (!output_V_q1.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(output_V_q1.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void fc_layer1::thread_tmp_s_fu_496_p1() {
    tmp_s_fu_496_p1 = esl_zext<64,7>(i1_reg_237.read());
}

void fc_layer1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())) && esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(exitcond3_fu_248_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_294_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(exitcond_fu_484_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

}

