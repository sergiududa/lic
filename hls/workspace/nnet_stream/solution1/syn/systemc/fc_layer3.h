// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fc_layer3_HH_
#define _fc_layer3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "nnet_mac_muladd_1h9b.h"
#include "nnet_mac_muladd_1iab.h"
#include "fc_layer3_fc_layeh8b.h"
#include "fc_layer3_output_V.h"

namespace ap_rtl {

struct fc_layer3 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<16> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_in< sc_lv<16> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;


    // Module declarations
    fc_layer3(sc_module_name name);
    SC_HAS_PROCESS(fc_layer3);

    ~fc_layer3();

    sc_trace_file* mVcdFile;

    fc_layer3_fc_layeh8b* fc_layer3_weights_V_U;
    fc_layer3_output_V* output_V_U;
    nnet_mac_muladd_1h9b<1,1,16,12,28,28>* nnet_mac_muladd_1h9b_U228;
    nnet_mac_muladd_1h9b<1,1,16,12,28,28>* nnet_mac_muladd_1h9b_U229;
    nnet_mac_muladd_1iab<1,1,12,16,28,28>* nnet_mac_muladd_1iab_U230;
    nnet_mac_muladd_1iab<1,1,12,16,28,28>* nnet_mac_muladd_1iab_U231;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > fc_layer3_weights_V_address0;
    sc_signal< sc_logic > fc_layer3_weights_V_ce0;
    sc_signal< sc_lv<12> > fc_layer3_weights_V_q0;
    sc_signal< sc_lv<10> > fc_layer3_weights_V_address1;
    sc_signal< sc_logic > fc_layer3_weights_V_ce1;
    sc_signal< sc_lv<12> > fc_layer3_weights_V_q1;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond1_fu_258_p2;
    sc_signal< sc_lv<12> > reg_250;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<12> > reg_254;
    sc_signal< sc_lv<7> > j_1_fu_264_p2;
    sc_signal< sc_lv<7> > j_1_reg_574;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<11> > tmp_11_fu_294_p2;
    sc_signal< sc_lv<11> > tmp_11_reg_579;
    sc_signal< sc_lv<28> > tmp_2_fu_300_p1;
    sc_signal< sc_lv<28> > tmp_2_reg_587;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > i_4_s_fu_318_p2;
    sc_signal< sc_lv<4> > i_4_s_reg_600;
    sc_signal< sc_lv<4> > output_V_addr_2_reg_610;
    sc_signal< sc_lv<4> > output_V_addr_3_reg_616;
    sc_signal< sc_lv<4> > i_4_1_fu_391_p2;
    sc_signal< sc_lv<4> > i_4_1_reg_622;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond16_2_fu_397_p2;
    sc_signal< sc_lv<3> > i_4_2_fu_421_p2;
    sc_signal< sc_lv<3> > i_4_2_reg_635;
    sc_signal< sc_lv<4> > i_4_3_fu_441_p2;
    sc_signal< sc_lv<4> > i_4_3_reg_645;
    sc_signal< sc_lv<4> > output_V_addr_4_reg_650;
    sc_signal< sc_lv<4> > output_V_addr_5_reg_655;
    sc_signal< sc_lv<4> > i_fu_505_p2;
    sc_signal< sc_lv<4> > i_reg_663;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > exitcond_fu_499_p2;
    sc_signal< sc_lv<4> > output_V_address0;
    sc_signal< sc_logic > output_V_ce0;
    sc_signal< sc_logic > output_V_we0;
    sc_signal< sc_lv<16> > output_V_d0;
    sc_signal< sc_lv<16> > output_V_q0;
    sc_signal< sc_lv<4> > output_V_address1;
    sc_signal< sc_logic > output_V_ce1;
    sc_signal< sc_logic > output_V_we1;
    sc_signal< sc_lv<16> > output_V_d1;
    sc_signal< sc_lv<16> > output_V_q1;
    sc_signal< sc_lv<7> > j_reg_216;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<4> > i3_reg_227;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<4> > i1_reg_239;
    sc_signal< sc_lv<64> > tmp_12_cast_fu_313_p1;
    sc_signal< sc_lv<64> > tmp_13_cast_fu_333_p1;
    sc_signal< sc_lv<64> > tmp_3_fu_338_p1;
    sc_signal< sc_lv<64> > tmp_28_1_fu_343_p1;
    sc_signal< sc_lv<64> > tmp_14_cast_fu_412_p1;
    sc_signal< sc_lv<64> > tmp_15_cast_fu_436_p1;
    sc_signal< sc_lv<64> > tmp_28_2_fu_447_p1;
    sc_signal< sc_lv<64> > tmp_28_3_fu_451_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_511_p1;
    sc_signal< sc_lv<10> > tmp_fu_270_p3;
    sc_signal< sc_lv<8> > tmp_6_fu_282_p3;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_290_p1;
    sc_signal< sc_lv<11> > p_shl_cast_fu_278_p1;
    sc_signal< sc_lv<11> > tmp_3_cast_fu_304_p1;
    sc_signal< sc_lv<11> > tmp_12_fu_308_p2;
    sc_signal< sc_lv<11> > tmp_28_1_cast_fu_324_p1;
    sc_signal< sc_lv<11> > tmp_13_fu_328_p2;
    sc_signal< sc_lv<28> > grp_fu_539_p3;
    sc_signal< sc_lv<28> > grp_fu_547_p3;
    sc_signal< sc_lv<11> > tmp_28_2_cast_fu_403_p1;
    sc_signal< sc_lv<11> > tmp_14_fu_407_p2;
    sc_signal< sc_lv<3> > tmp_17_fu_417_p1;
    sc_signal< sc_lv<11> > tmp_28_3_cast_fu_427_p1;
    sc_signal< sc_lv<11> > tmp_15_fu_431_p2;
    sc_signal< sc_lv<28> > grp_fu_555_p3;
    sc_signal< sc_lv<28> > grp_fu_563_p3;
    sc_signal< sc_lv<1> > tmp_i_fu_520_p2;
    sc_signal< sc_lv<15> > tmp_16_fu_516_p1;
    sc_signal< sc_lv<15> > tmp_V_fu_526_p3;
    sc_signal< sc_lv<16> > grp_fu_539_p0;
    sc_signal< sc_lv<28> > grp_fu_539_p2;
    sc_signal< sc_lv<16> > grp_fu_547_p0;
    sc_signal< sc_lv<28> > grp_fu_547_p2;
    sc_signal< sc_lv<16> > grp_fu_555_p1;
    sc_signal< sc_lv<28> > grp_fu_555_p2;
    sc_signal< sc_lv<16> > grp_fu_563_p1;
    sc_signal< sc_lv<28> > grp_fu_563_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<7> ap_const_lv7_54;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<15> ap_const_lv15_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state1();
    void thread_ap_block_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond16_2_fu_397_p2();
    void thread_exitcond1_fu_258_p2();
    void thread_exitcond_fu_499_p2();
    void thread_fc_layer3_weights_V_address0();
    void thread_fc_layer3_weights_V_address1();
    void thread_fc_layer3_weights_V_ce0();
    void thread_fc_layer3_weights_V_ce1();
    void thread_grp_fu_539_p0();
    void thread_grp_fu_539_p2();
    void thread_grp_fu_547_p0();
    void thread_grp_fu_547_p2();
    void thread_grp_fu_555_p1();
    void thread_grp_fu_555_p2();
    void thread_grp_fu_563_p1();
    void thread_grp_fu_563_p2();
    void thread_i_4_1_fu_391_p2();
    void thread_i_4_2_fu_421_p2();
    void thread_i_4_3_fu_441_p2();
    void thread_i_4_s_fu_318_p2();
    void thread_i_fu_505_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_j_1_fu_264_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_output_V_address0();
    void thread_output_V_address1();
    void thread_output_V_ce0();
    void thread_output_V_ce1();
    void thread_output_V_d0();
    void thread_output_V_d1();
    void thread_output_V_we0();
    void thread_output_V_we1();
    void thread_p_shl1_cast_fu_290_p1();
    void thread_p_shl_cast_fu_278_p1();
    void thread_tmp_11_fu_294_p2();
    void thread_tmp_12_cast_fu_313_p1();
    void thread_tmp_12_fu_308_p2();
    void thread_tmp_13_cast_fu_333_p1();
    void thread_tmp_13_fu_328_p2();
    void thread_tmp_14_cast_fu_412_p1();
    void thread_tmp_14_fu_407_p2();
    void thread_tmp_15_cast_fu_436_p1();
    void thread_tmp_15_fu_431_p2();
    void thread_tmp_16_fu_516_p1();
    void thread_tmp_17_fu_417_p1();
    void thread_tmp_28_1_cast_fu_324_p1();
    void thread_tmp_28_1_fu_343_p1();
    void thread_tmp_28_2_cast_fu_403_p1();
    void thread_tmp_28_2_fu_447_p1();
    void thread_tmp_28_3_cast_fu_427_p1();
    void thread_tmp_28_3_fu_451_p1();
    void thread_tmp_2_fu_300_p1();
    void thread_tmp_3_cast_fu_304_p1();
    void thread_tmp_3_fu_338_p1();
    void thread_tmp_6_fu_282_p3();
    void thread_tmp_V_fu_526_p3();
    void thread_tmp_fu_270_p3();
    void thread_tmp_i_fu_520_p2();
    void thread_tmp_s_fu_511_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
