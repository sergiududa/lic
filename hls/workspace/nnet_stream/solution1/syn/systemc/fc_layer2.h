// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fc_layer2_HH_
#define _fc_layer2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "nnet_mac_muladd_1bVr.h"
#include "fc_layer2_fc_layeh7b.h"
#include "fc_layer2_output_V.h"

namespace ap_rtl {

struct fc_layer2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<16> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_in< sc_lv<16> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;


    // Module declarations
    fc_layer2(sc_module_name name);
    SC_HAS_PROCESS(fc_layer2);

    ~fc_layer2();

    sc_trace_file* mVcdFile;

    fc_layer2_fc_layeh7b* fc_layer2_weights_V_U;
    fc_layer2_output_V* output_V_U;
    nnet_mac_muladd_1bVr<1,1,16,11,28,28>* nnet_mac_muladd_1bVr_U220;
    nnet_mac_muladd_1bVr<1,1,16,11,28,28>* nnet_mac_muladd_1bVr_U221;
    nnet_mac_muladd_1bVr<1,1,16,11,28,28>* nnet_mac_muladd_1bVr_U222;
    nnet_mac_muladd_1bVr<1,1,16,11,28,28>* nnet_mac_muladd_1bVr_U223;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<14> > fc_layer2_weights_V_address0;
    sc_signal< sc_logic > fc_layer2_weights_V_ce0;
    sc_signal< sc_lv<11> > fc_layer2_weights_V_q0;
    sc_signal< sc_lv<14> > fc_layer2_weights_V_address1;
    sc_signal< sc_logic > fc_layer2_weights_V_ce1;
    sc_signal< sc_lv<11> > fc_layer2_weights_V_q1;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond2_fu_260_p2;
    sc_signal< sc_lv<14> > next_mul_fu_254_p2;
    sc_signal< sc_lv<14> > next_mul_reg_542;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<7> > j_2_fu_266_p2;
    sc_signal< sc_lv<7> > j_2_reg_550;
    sc_signal< sc_lv<27> > tmp_11_cast_fu_272_p1;
    sc_signal< sc_lv<27> > tmp_11_cast_reg_555;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond1_fu_276_p2;
    sc_signal< sc_lv<7> > output_V_addr_6_reg_571;
    sc_signal< sc_lv<7> > output_V_addr_7_reg_582;
    sc_signal< sc_lv<16> > tmp_13_reg_588;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<16> > tmp_42_1_reg_593;
    sc_signal< sc_lv<7> > output_V_addr_8_reg_603;
    sc_signal< sc_lv<7> > output_V_addr_9_reg_613;
    sc_signal< sc_lv<7> > i_6_3_fu_422_p2;
    sc_signal< sc_lv<7> > i_6_3_reg_618;
    sc_signal< sc_lv<16> > tmp_42_2_reg_623;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<16> > tmp_42_3_reg_628;
    sc_signal< sc_lv<7> > i_fu_476_p2;
    sc_signal< sc_lv<7> > i_reg_636;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > exitcond_fu_470_p2;
    sc_signal< sc_lv<7> > output_V_address0;
    sc_signal< sc_logic > output_V_ce0;
    sc_signal< sc_logic > output_V_we0;
    sc_signal< sc_lv<16> > output_V_d0;
    sc_signal< sc_lv<16> > output_V_q0;
    sc_signal< sc_lv<7> > output_V_address1;
    sc_signal< sc_logic > output_V_ce1;
    sc_signal< sc_logic > output_V_we1;
    sc_signal< sc_lv<16> > output_V_d1;
    sc_signal< sc_lv<16> > output_V_q1;
    sc_signal< sc_lv<7> > j_reg_208;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<14> > phi_mul_reg_219;
    sc_signal< sc_lv<7> > i4_reg_231;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<7> > i1_reg_243;
    sc_signal< sc_lv<64> > tmp_18_cast_fu_297_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_282_p1;
    sc_signal< sc_lv<64> > tmp_19_cast_fu_323_p1;
    sc_signal< sc_lv<64> > tmp_37_1_fu_308_p1;
    sc_signal< sc_lv<64> > tmp_20_cast_fu_391_p1;
    sc_signal< sc_lv<64> > tmp_37_2_fu_376_p1;
    sc_signal< sc_lv<64> > tmp_21_cast_fu_417_p1;
    sc_signal< sc_lv<64> > tmp_37_3_fu_402_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_482_p1;
    sc_signal< sc_lv<14> > tmp_8_cast_fu_287_p1;
    sc_signal< sc_lv<14> > tmp_16_fu_291_p2;
    sc_signal< sc_lv<7> > i_6_s_fu_302_p2;
    sc_signal< sc_lv<14> > tmp_37_1_cast_fu_313_p1;
    sc_signal< sc_lv<14> > tmp_17_fu_317_p2;
    sc_signal< sc_lv<28> > grp_fu_510_p3;
    sc_signal< sc_lv<28> > grp_fu_518_p3;
    sc_signal< sc_lv<7> > i_6_1_fu_370_p2;
    sc_signal< sc_lv<14> > tmp_37_2_cast_fu_381_p1;
    sc_signal< sc_lv<14> > tmp_18_fu_385_p2;
    sc_signal< sc_lv<7> > i_6_2_fu_396_p2;
    sc_signal< sc_lv<14> > tmp_37_3_cast_fu_407_p1;
    sc_signal< sc_lv<14> > tmp_19_fu_411_p2;
    sc_signal< sc_lv<28> > grp_fu_526_p3;
    sc_signal< sc_lv<28> > grp_fu_534_p3;
    sc_signal< sc_lv<1> > tmp_i_fu_491_p2;
    sc_signal< sc_lv<15> > tmp_fu_487_p1;
    sc_signal< sc_lv<15> > tmp_V_fu_497_p3;
    sc_signal< sc_lv<16> > grp_fu_510_p0;
    sc_signal< sc_lv<28> > grp_fu_510_p2;
    sc_signal< sc_lv<16> > grp_fu_518_p0;
    sc_signal< sc_lv<28> > grp_fu_518_p2;
    sc_signal< sc_lv<16> > grp_fu_526_p0;
    sc_signal< sc_lv<28> > grp_fu_526_p2;
    sc_signal< sc_lv<16> > grp_fu_534_p0;
    sc_signal< sc_lv<28> > grp_fu_534_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<14> ap_const_lv14_54;
    static const sc_lv<7> ap_const_lv7_78;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<7> ap_const_lv7_54;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<7> ap_const_lv7_2;
    static const sc_lv<7> ap_const_lv7_3;
    static const sc_lv<7> ap_const_lv7_4;
    static const sc_lv<15> ap_const_lv15_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_state1();
    void thread_ap_block_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_276_p2();
    void thread_exitcond2_fu_260_p2();
    void thread_exitcond_fu_470_p2();
    void thread_fc_layer2_weights_V_address0();
    void thread_fc_layer2_weights_V_address1();
    void thread_fc_layer2_weights_V_ce0();
    void thread_fc_layer2_weights_V_ce1();
    void thread_grp_fu_510_p0();
    void thread_grp_fu_510_p2();
    void thread_grp_fu_518_p0();
    void thread_grp_fu_518_p2();
    void thread_grp_fu_526_p0();
    void thread_grp_fu_526_p2();
    void thread_grp_fu_534_p0();
    void thread_grp_fu_534_p2();
    void thread_i_6_1_fu_370_p2();
    void thread_i_6_2_fu_396_p2();
    void thread_i_6_3_fu_422_p2();
    void thread_i_6_s_fu_302_p2();
    void thread_i_fu_476_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_j_2_fu_266_p2();
    void thread_next_mul_fu_254_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_output_V_address0();
    void thread_output_V_address1();
    void thread_output_V_ce0();
    void thread_output_V_ce1();
    void thread_output_V_d0();
    void thread_output_V_d1();
    void thread_output_V_we0();
    void thread_output_V_we1();
    void thread_tmp_11_cast_fu_272_p1();
    void thread_tmp_16_fu_291_p2();
    void thread_tmp_17_fu_317_p2();
    void thread_tmp_18_cast_fu_297_p1();
    void thread_tmp_18_fu_385_p2();
    void thread_tmp_19_cast_fu_323_p1();
    void thread_tmp_19_fu_411_p2();
    void thread_tmp_20_cast_fu_391_p1();
    void thread_tmp_21_cast_fu_417_p1();
    void thread_tmp_37_1_cast_fu_313_p1();
    void thread_tmp_37_1_fu_308_p1();
    void thread_tmp_37_2_cast_fu_381_p1();
    void thread_tmp_37_2_fu_376_p1();
    void thread_tmp_37_3_cast_fu_407_p1();
    void thread_tmp_37_3_fu_402_p1();
    void thread_tmp_8_cast_fu_287_p1();
    void thread_tmp_8_fu_282_p1();
    void thread_tmp_V_fu_497_p3();
    void thread_tmp_fu_487_p1();
    void thread_tmp_i_fu_491_p2();
    void thread_tmp_s_fu_482_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
