// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __fc_layer3_fc_layeibb_H__
#define __fc_layer3_fc_layeibb_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct fc_layer3_fc_layeibb_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 12;
  static const unsigned AddressRange = 84;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(fc_layer3_fc_layeibb_ram) {
        ram[0] = "0b001000101010";
        ram[1] = "0b001100100011";
        ram[2] = "0b110110001000";
        ram[3] = "0b110000110100";
        ram[4] = "0b010000000011";
        ram[5] = "0b000011001101";
        ram[6] = "0b110011111001";
        ram[7] = "0b110001101000";
        ram[8] = "0b111110011001";
        ram[9] = "0b110111101010";
        ram[10] = "0b001001000010";
        ram[11] = "0b111101001001";
        ram[12] = "0b111110111100";
        ram[13] = "0b111000101010";
        ram[14] = "0b000001101100";
        ram[15] = "0b000011000101";
        ram[16] = "0b111001111011";
        ram[17] = "0b000001011001";
        ram[18] = "0b001101010100";
        ram[19] = "0b110111100001";
        ram[20] = "0b111111001010";
        ram[21] = "0b000010101010";
        ram[22] = "0b110000101100";
        ram[23] = "0b110111011010";
        ram[24] = "0b000110111000";
        ram[25] = "0b000101101001";
        ram[26] = "0b001011111110";
        ram[27] = "0b111110111000";
        ram[28] = "0b000011111011";
        ram[29] = "0b110110101010";
        ram[30] = "0b110010110111";
        ram[31] = "0b111000010011";
        ram[32] = "0b001000000011";
        ram[33] = "0b110100001000";
        ram[34] = "0b111111101110";
        ram[35] = "0b110000010111";
        ram[36] = "0b111111111011";
        ram[37] = "0b000000110100";
        ram[38] = "0b000010011010";
        ram[39] = "0b000001001101";
        ram[40] = "0b001101000110";
        ram[41] = "0b000101110100";
        ram[42] = "0b000101001001";
        ram[43] = "0b000111101110";
        ram[44] = "0b111001100101";
        ram[45] = "0b111101001001";
        ram[46] = "0b111000100011";
        ram[47] = "0b101111111000";
        ram[48] = "0b111011001111";
        ram[49] = "0b001010110100";
        ram[50] = "0b000100001101";
        ram[51] = "0b110111010111";
        ram[52] = "0b111010100000";
        ram[53] = "0b001011111100";
        ram[54] = "0b111110100101";
        ram[55] = "0b111111101101";
        ram[56] = "0b000110111101";
        ram[57] = "0b110101000011";
        ram[58] = "0b111111010100";
        ram[59] = "0b111100010011";
        ram[60] = "0b110111111101";
        ram[61] = "0b110111010001";
        ram[62] = "0b111110001101";
        ram[63] = "0b110010001001";
        ram[64] = "0b001110011110";
        ram[65] = "0b010000001000";
        ram[66] = "0b111101010010";
        ram[67] = "0b001101010000";
        ram[68] = "0b111011000010";
        ram[69] = "0b101111111001";
        ram[70] = "0b101111111100";
        ram[71] = "0b001000101001";
        ram[72] = "0b000011110110";
        ram[73] = "0b001110110000";
        ram[74] = "0b111001000100";
        ram[75] = "0b111111101100";
        ram[76] = "0b000011101011";
        ram[77] = "0b111010100000";
        ram[78] = "0b000000001110";
        ram[79] = "0b001111100010";
        ram[80] = "0b000101110001";
        ram[81] = "0b111110100000";
        ram[82] = "0b110000111110";
        ram[83] = "0b111100111101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(fc_layer3_fc_layeibb) {


static const unsigned DataWidth = 12;
static const unsigned AddressRange = 84;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


fc_layer3_fc_layeibb_ram* meminst;


SC_CTOR(fc_layer3_fc_layeibb) {
meminst = new fc_layer3_fc_layeibb_ram("fc_layer3_fc_layeibb_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~fc_layer3_fc_layeibb() {
    delete meminst;
}


};//endmodule
#endif
