// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nnet,hls_ip_2017_4_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=13.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=13.906000,HLS_SYN_LAT=70532,HLS_SYN_TPT=70516,HLS_SYN_MEM=95,HLS_SYN_DSP=360,HLS_SYN_FF=28279,HLS_SYN_LUT=38941}" *)

module nnet (
        fc3_out_V_V_din,
        fc3_out_V_V_full_n,
        fc3_out_V_V_write,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


output  [15:0] fc3_out_V_V_din;
input   fc3_out_V_V_full_n;
output   fc3_out_V_V_write;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire    Loop_1_proc138_U0_ap_start;
wire    Loop_1_proc138_U0_ap_done;
wire    Loop_1_proc138_U0_ap_continue;
wire    Loop_1_proc138_U0_ap_idle;
wire    Loop_1_proc138_U0_ap_ready;
wire   [15:0] Loop_1_proc138_U0_image_in_V_V_din;
wire    Loop_1_proc138_U0_image_in_V_V_write;
reg    conv_layer1_U0_ap_start;
wire    conv_layer1_U0_ap_done;
wire    conv_layer1_U0_ap_continue;
wire    conv_layer1_U0_ap_idle;
wire    conv_layer1_U0_ap_ready;
wire   [15:0] conv_layer1_U0_out_V_V_din;
wire    conv_layer1_U0_out_V_V_write;
wire    conv_layer1_U0_in_V_V_read;
reg    pool_layer1_U0_ap_start;
wire    pool_layer1_U0_ap_done;
wire    pool_layer1_U0_ap_continue;
wire    pool_layer1_U0_ap_idle;
wire    pool_layer1_U0_ap_ready;
wire   [15:0] pool_layer1_U0_out_V_V_din;
wire    pool_layer1_U0_out_V_V_write;
wire    pool_layer1_U0_in_V_V_read;
reg    conv_layer2_U0_ap_start;
wire    conv_layer2_U0_ap_done;
wire    conv_layer2_U0_ap_continue;
wire    conv_layer2_U0_ap_idle;
wire    conv_layer2_U0_ap_ready;
wire   [15:0] conv_layer2_U0_out_V_V_din;
wire    conv_layer2_U0_out_V_V_write;
wire    conv_layer2_U0_in_V_V_read;
reg    pool_layer2_U0_ap_start;
wire    pool_layer2_U0_ap_done;
wire    pool_layer2_U0_ap_continue;
wire    pool_layer2_U0_ap_idle;
wire    pool_layer2_U0_ap_ready;
wire   [15:0] pool_layer2_U0_out_V_V_din;
wire    pool_layer2_U0_out_V_V_write;
wire    pool_layer2_U0_in_V_V_read;
reg    fc_layer1_U0_ap_start;
wire    fc_layer1_U0_ap_done;
wire    fc_layer1_U0_ap_continue;
wire    fc_layer1_U0_ap_idle;
wire    fc_layer1_U0_ap_ready;
wire   [15:0] fc_layer1_U0_out_V_V_din;
wire    fc_layer1_U0_out_V_V_write;
wire    fc_layer1_U0_in_V_V_read;
reg    fc_layer2_U0_ap_start;
wire    fc_layer2_U0_ap_done;
wire    fc_layer2_U0_ap_continue;
wire    fc_layer2_U0_ap_idle;
wire    fc_layer2_U0_ap_ready;
wire   [15:0] fc_layer2_U0_out_V_V_din;
wire    fc_layer2_U0_out_V_V_write;
wire    fc_layer2_U0_in_V_V_read;
reg    fc_layer3_U0_ap_start;
wire    fc_layer3_U0_ap_done;
wire    fc_layer3_U0_ap_continue;
wire    fc_layer3_U0_ap_idle;
wire    fc_layer3_U0_ap_ready;
wire   [15:0] fc_layer3_U0_out_V_V_din;
wire    fc_layer3_U0_out_V_V_write;
wire    fc_layer3_U0_in_V_V_read;
wire    ap_sync_continue;
wire    image_in_V_V_full_n;
wire   [15:0] image_in_V_V_dout;
wire    image_in_V_V_empty_n;
wire    conv1_out_V_V_full_n;
wire   [15:0] conv1_out_V_V_dout;
wire    conv1_out_V_V_empty_n;
wire    pool1_out_V_V_full_n;
wire   [15:0] pool1_out_V_V_dout;
wire    pool1_out_V_V_empty_n;
wire    conv2_out_V_V_full_n;
wire   [15:0] conv2_out_V_V_dout;
wire    conv2_out_V_V_empty_n;
wire    pool2_out_V_V_full_n;
wire   [15:0] pool2_out_V_V_dout;
wire    pool2_out_V_V_empty_n;
wire    fc1_out_V_V_full_n;
wire   [15:0] fc1_out_V_V_dout;
wire    fc1_out_V_V_empty_n;
wire    fc2_out_V_V_full_n;
wire   [15:0] fc2_out_V_V_dout;
wire    fc2_out_V_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    Loop_1_proc138_U0_start_full_n;
wire    Loop_1_proc138_U0_start_write;
wire    conv_layer1_U0_start_full_n;
wire    conv_layer1_U0_start_write;
wire    pool_layer1_U0_start_full_n;
wire    pool_layer1_U0_start_write;
wire    conv_layer2_U0_start_full_n;
wire    conv_layer2_U0_start_write;
wire    pool_layer2_U0_start_full_n;
wire    pool_layer2_U0_start_write;
wire    fc_layer1_U0_start_full_n;
wire    fc_layer1_U0_start_write;
wire    fc_layer2_U0_start_full_n;
wire    fc_layer2_U0_start_write;
wire    fc_layer3_U0_start_full_n;
wire    fc_layer3_U0_start_write;

// power-on initialization
initial begin
#0 conv_layer1_U0_ap_start = 1'b0;
#0 pool_layer1_U0_ap_start = 1'b0;
#0 conv_layer2_U0_ap_start = 1'b0;
#0 pool_layer2_U0_ap_start = 1'b0;
#0 fc_layer1_U0_ap_start = 1'b0;
#0 fc_layer2_U0_ap_start = 1'b0;
#0 fc_layer3_U0_ap_start = 1'b0;
end

Loop_1_proc138 Loop_1_proc138_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_1_proc138_U0_ap_start),
    .ap_done(Loop_1_proc138_U0_ap_done),
    .ap_continue(Loop_1_proc138_U0_ap_continue),
    .ap_idle(Loop_1_proc138_U0_ap_idle),
    .ap_ready(Loop_1_proc138_U0_ap_ready),
    .image_in_V_V_din(Loop_1_proc138_U0_image_in_V_V_din),
    .image_in_V_V_full_n(image_in_V_V_full_n),
    .image_in_V_V_write(Loop_1_proc138_U0_image_in_V_V_write)
);

conv_layer1 conv_layer1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(conv_layer1_U0_ap_start),
    .ap_done(conv_layer1_U0_ap_done),
    .ap_continue(conv_layer1_U0_ap_continue),
    .ap_idle(conv_layer1_U0_ap_idle),
    .ap_ready(conv_layer1_U0_ap_ready),
    .out_V_V_din(conv_layer1_U0_out_V_V_din),
    .out_V_V_full_n(conv1_out_V_V_full_n),
    .out_V_V_write(conv_layer1_U0_out_V_V_write),
    .in_V_V_dout(image_in_V_V_dout),
    .in_V_V_empty_n(image_in_V_V_empty_n),
    .in_V_V_read(conv_layer1_U0_in_V_V_read)
);

pool_layer1 pool_layer1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(pool_layer1_U0_ap_start),
    .ap_done(pool_layer1_U0_ap_done),
    .ap_continue(pool_layer1_U0_ap_continue),
    .ap_idle(pool_layer1_U0_ap_idle),
    .ap_ready(pool_layer1_U0_ap_ready),
    .out_V_V_din(pool_layer1_U0_out_V_V_din),
    .out_V_V_full_n(pool1_out_V_V_full_n),
    .out_V_V_write(pool_layer1_U0_out_V_V_write),
    .in_V_V_dout(conv1_out_V_V_dout),
    .in_V_V_empty_n(conv1_out_V_V_empty_n),
    .in_V_V_read(pool_layer1_U0_in_V_V_read)
);

conv_layer2 conv_layer2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(conv_layer2_U0_ap_start),
    .ap_done(conv_layer2_U0_ap_done),
    .ap_continue(conv_layer2_U0_ap_continue),
    .ap_idle(conv_layer2_U0_ap_idle),
    .ap_ready(conv_layer2_U0_ap_ready),
    .out_V_V_din(conv_layer2_U0_out_V_V_din),
    .out_V_V_full_n(conv2_out_V_V_full_n),
    .out_V_V_write(conv_layer2_U0_out_V_V_write),
    .in_V_V_dout(pool1_out_V_V_dout),
    .in_V_V_empty_n(pool1_out_V_V_empty_n),
    .in_V_V_read(conv_layer2_U0_in_V_V_read)
);

pool_layer2 pool_layer2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(pool_layer2_U0_ap_start),
    .ap_done(pool_layer2_U0_ap_done),
    .ap_continue(pool_layer2_U0_ap_continue),
    .ap_idle(pool_layer2_U0_ap_idle),
    .ap_ready(pool_layer2_U0_ap_ready),
    .out_V_V_din(pool_layer2_U0_out_V_V_din),
    .out_V_V_full_n(pool2_out_V_V_full_n),
    .out_V_V_write(pool_layer2_U0_out_V_V_write),
    .in_V_V_dout(conv2_out_V_V_dout),
    .in_V_V_empty_n(conv2_out_V_V_empty_n),
    .in_V_V_read(pool_layer2_U0_in_V_V_read)
);

fc_layer1 fc_layer1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fc_layer1_U0_ap_start),
    .ap_done(fc_layer1_U0_ap_done),
    .ap_continue(fc_layer1_U0_ap_continue),
    .ap_idle(fc_layer1_U0_ap_idle),
    .ap_ready(fc_layer1_U0_ap_ready),
    .out_V_V_din(fc_layer1_U0_out_V_V_din),
    .out_V_V_full_n(fc1_out_V_V_full_n),
    .out_V_V_write(fc_layer1_U0_out_V_V_write),
    .in_V_V_dout(pool2_out_V_V_dout),
    .in_V_V_empty_n(pool2_out_V_V_empty_n),
    .in_V_V_read(fc_layer1_U0_in_V_V_read)
);

fc_layer2 fc_layer2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fc_layer2_U0_ap_start),
    .ap_done(fc_layer2_U0_ap_done),
    .ap_continue(fc_layer2_U0_ap_continue),
    .ap_idle(fc_layer2_U0_ap_idle),
    .ap_ready(fc_layer2_U0_ap_ready),
    .out_V_V_din(fc_layer2_U0_out_V_V_din),
    .out_V_V_full_n(fc2_out_V_V_full_n),
    .out_V_V_write(fc_layer2_U0_out_V_V_write),
    .in_V_V_dout(fc1_out_V_V_dout),
    .in_V_V_empty_n(fc1_out_V_V_empty_n),
    .in_V_V_read(fc_layer2_U0_in_V_V_read)
);

fc_layer3 fc_layer3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fc_layer3_U0_ap_start),
    .ap_done(fc_layer3_U0_ap_done),
    .ap_continue(fc_layer3_U0_ap_continue),
    .ap_idle(fc_layer3_U0_ap_idle),
    .ap_ready(fc_layer3_U0_ap_ready),
    .out_V_V_din(fc_layer3_U0_out_V_V_din),
    .out_V_V_full_n(fc3_out_V_V_full_n),
    .out_V_V_write(fc_layer3_U0_out_V_V_write),
    .in_V_V_dout(fc2_out_V_V_dout),
    .in_V_V_empty_n(fc2_out_V_V_empty_n),
    .in_V_V_read(fc_layer3_U0_in_V_V_read)
);

fifo_w16_d1_A image_in_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_1_proc138_U0_image_in_V_V_din),
    .if_full_n(image_in_V_V_full_n),
    .if_write(Loop_1_proc138_U0_image_in_V_V_write),
    .if_dout(image_in_V_V_dout),
    .if_empty_n(image_in_V_V_empty_n),
    .if_read(conv_layer1_U0_in_V_V_read)
);

fifo_w16_d1_A conv1_out_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(conv_layer1_U0_out_V_V_din),
    .if_full_n(conv1_out_V_V_full_n),
    .if_write(conv_layer1_U0_out_V_V_write),
    .if_dout(conv1_out_V_V_dout),
    .if_empty_n(conv1_out_V_V_empty_n),
    .if_read(pool_layer1_U0_in_V_V_read)
);

fifo_w16_d1_A pool1_out_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(pool_layer1_U0_out_V_V_din),
    .if_full_n(pool1_out_V_V_full_n),
    .if_write(pool_layer1_U0_out_V_V_write),
    .if_dout(pool1_out_V_V_dout),
    .if_empty_n(pool1_out_V_V_empty_n),
    .if_read(conv_layer2_U0_in_V_V_read)
);

fifo_w16_d1_A conv2_out_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(conv_layer2_U0_out_V_V_din),
    .if_full_n(conv2_out_V_V_full_n),
    .if_write(conv_layer2_U0_out_V_V_write),
    .if_dout(conv2_out_V_V_dout),
    .if_empty_n(conv2_out_V_V_empty_n),
    .if_read(pool_layer2_U0_in_V_V_read)
);

fifo_w16_d1_A pool2_out_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(pool_layer2_U0_out_V_V_din),
    .if_full_n(pool2_out_V_V_full_n),
    .if_write(pool_layer2_U0_out_V_V_write),
    .if_dout(pool2_out_V_V_dout),
    .if_empty_n(pool2_out_V_V_empty_n),
    .if_read(fc_layer1_U0_in_V_V_read)
);

fifo_w16_d1_A fc1_out_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fc_layer1_U0_out_V_V_din),
    .if_full_n(fc1_out_V_V_full_n),
    .if_write(fc_layer1_U0_out_V_V_write),
    .if_dout(fc1_out_V_V_dout),
    .if_empty_n(fc1_out_V_V_empty_n),
    .if_read(fc_layer2_U0_in_V_V_read)
);

fifo_w16_d1_A fc2_out_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fc_layer2_U0_out_V_V_din),
    .if_full_n(fc2_out_V_V_full_n),
    .if_write(fc_layer2_U0_out_V_V_write),
    .if_dout(fc2_out_V_V_dout),
    .if_empty_n(fc2_out_V_V_empty_n),
    .if_read(fc_layer3_U0_in_V_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        conv_layer1_U0_ap_start <= 1'b0;
    end else begin
        conv_layer1_U0_ap_start <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        conv_layer2_U0_ap_start <= 1'b0;
    end else begin
        conv_layer2_U0_ap_start <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        fc_layer1_U0_ap_start <= 1'b0;
    end else begin
        fc_layer1_U0_ap_start <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        fc_layer2_U0_ap_start <= 1'b0;
    end else begin
        fc_layer2_U0_ap_start <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        fc_layer3_U0_ap_start <= 1'b0;
    end else begin
        fc_layer3_U0_ap_start <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        pool_layer1_U0_ap_start <= 1'b0;
    end else begin
        pool_layer1_U0_ap_start <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        pool_layer2_U0_ap_start <= 1'b0;
    end else begin
        pool_layer2_U0_ap_start <= 1'b1;
    end
end

assign Loop_1_proc138_U0_ap_continue = 1'b1;

assign Loop_1_proc138_U0_ap_start = ap_start;

assign Loop_1_proc138_U0_start_full_n = 1'b1;

assign Loop_1_proc138_U0_start_write = 1'b0;

assign ap_done = fc_layer3_U0_ap_done;

assign ap_idle = (pool_layer2_U0_ap_idle & pool_layer1_U0_ap_idle & fc_layer3_U0_ap_idle & fc_layer2_U0_ap_idle & fc_layer1_U0_ap_idle & conv_layer2_U0_ap_idle & conv_layer1_U0_ap_idle & Loop_1_proc138_U0_ap_idle);

assign ap_ready = fc_layer3_U0_ap_done;

assign ap_sync_continue = 1'b1;

assign ap_sync_done = fc_layer3_U0_ap_done;

assign ap_sync_ready = ap_sync_done;

assign conv_layer1_U0_ap_continue = 1'b1;

assign conv_layer1_U0_start_full_n = 1'b1;

assign conv_layer1_U0_start_write = 1'b0;

assign conv_layer2_U0_ap_continue = 1'b1;

assign conv_layer2_U0_start_full_n = 1'b1;

assign conv_layer2_U0_start_write = 1'b0;

assign fc3_out_V_V_din = fc_layer3_U0_out_V_V_din;

assign fc3_out_V_V_write = fc_layer3_U0_out_V_V_write;

assign fc_layer1_U0_ap_continue = 1'b1;

assign fc_layer1_U0_start_full_n = 1'b1;

assign fc_layer1_U0_start_write = 1'b0;

assign fc_layer2_U0_ap_continue = 1'b1;

assign fc_layer2_U0_start_full_n = 1'b1;

assign fc_layer2_U0_start_write = 1'b0;

assign fc_layer3_U0_ap_continue = 1'b1;

assign fc_layer3_U0_start_full_n = 1'b1;

assign fc_layer3_U0_start_write = 1'b0;

assign pool_layer1_U0_ap_continue = 1'b1;

assign pool_layer1_U0_start_full_n = 1'b1;

assign pool_layer1_U0_start_write = 1'b0;

assign pool_layer2_U0_ap_continue = 1'b1;

assign pool_layer2_U0_start_full_n = 1'b1;

assign pool_layer2_U0_start_write = 1'b0;

endmodule //nnet
