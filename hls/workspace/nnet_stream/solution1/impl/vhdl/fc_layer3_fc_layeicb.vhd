-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity fc_layer3_fc_layeicb_rom is 
    generic(
             dwidth     : integer := 11; 
             awidth     : integer := 7; 
             mem_size    : integer := 84
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of fc_layer3_fc_layeicb_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "00101011111", 1 => "11100011001", 2 => "11010000100", 
    3 => "01101101100", 4 => "00100011011", 5 => "10000101111", 
    6 => "01111100101", 7 => "11011100101", 8 => "11001110110", 
    9 => "11101110111", 10 => "00101101000", 11 => "01100101100", 
    12 => "00010111111", 13 => "01011010010", 14 => "10010000000", 
    15 => "10010011110", 16 => "01101101110", 17 => "10111011001", 
    18 => "00010110111", 19 => "01101101100", 20 => "11000101111", 
    21 => "00110010101", 22 => "11000101000", 23 => "01100101000", 
    24 => "11111001001", 25 => "00111010000", 26 => "01010110000", 
    27 => "00010010000", 28 => "10100000000", 29 => "00010100000", 
    30 => "00010101010", 31 => "10010011001", 32 => "01011100110", 
    33 => "01110010111", 34 => "10101001100", 35 => "10010110000", 
    36 => "00000101101", 37 => "11111011001", 38 => "00110110100", 
    39 => "01001111001", 40 => "11110001001", 41 => "00000110111", 
    42 => "01111110001", 43 => "00111111100", 44 => "11010111110", 
    45 => "01001001001", 46 => "10100000001", 47 => "01001000111", 
    48 => "10001111000", 49 => "00110100000", 50 => "01110111011", 
    51 => "00000101100", 52 => "11101100110", 53 => "01011001001", 
    54 => "00001101100", 55 => "00100111111", 56 => "11011001110", 
    57 => "11100010111", 58 => "10111011111", 59 => "00011101100", 
    60 => "11000110011", 61 => "11000111010", 62 => "01110100010", 
    63 => "10010011110", 64 => "10111101001", 65 => "01100100011", 
    66 => "10110111010", 67 => "11101100101", 68 => "00111010001", 
    69 => "11111101010", 70 => "10100010011", 71 => "00101110011", 
    72 => "11000101000", 73 => "00101111000", 74 => "00100111110", 
    75 => "01100001000", 76 => "01110010001", 77 => "01101010100", 
    78 => "00000111100", 79 => "01110011000", 80 => "10000101000", 
    81 => "00001111111", 82 => "01111101111", 83 => "10111100001" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "select_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "distributed";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity fc_layer3_fc_layeicb is
    generic (
        DataWidth : INTEGER := 11;
        AddressRange : INTEGER := 84;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of fc_layer3_fc_layeicb is
    component fc_layer3_fc_layeicb_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    fc_layer3_fc_layeicb_rom_U :  component fc_layer3_fc_layeicb_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


