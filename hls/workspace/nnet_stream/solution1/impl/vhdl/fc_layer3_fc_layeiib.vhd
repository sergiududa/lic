-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity fc_layer3_fc_layeiib_rom is 
    generic(
             dwidth     : integer := 11; 
             awidth     : integer := 7; 
             mem_size    : integer := 84
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of fc_layer3_fc_layeiib_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "10110101110", 1 => "01001111111", 2 => "11111110101", 
    3 => "01100011011", 4 => "10001100000", 5 => "11011100011", 
    6 => "10111000011", 7 => "11100010111", 8 => "01011011011", 
    9 => "10000111001", 10 => "11001110011", 11 => "10101001001", 
    12 => "01101010110", 13 => "10110100001", 14 => "11001111100", 
    15 => "01111010011", 16 => "11101001111", 17 => "11000010001", 
    18 => "10101111001", 19 => "11110100011", 20 => "00011111101", 
    21 => "10011100101", 22 => "01011111001", 23 => "10011010011", 
    24 => "10100010110", 25 => "11010111010", 26 => "01100001101", 
    27 => "00000001110", 28 => "10001010011", 29 => "10000110010", 
    30 => "10100100011", 31 => "01101101010", 32 => "11011111111", 
    33 => "10010110110", 34 => "00101110000", 35 => "01001100101", 
    36 => "10101011110", 37 => "00011100001", 38 => "11101001111", 
    39 => "00010101100", 40 => "11101111011", 41 => "00110100010", 
    42 => "11011011011", 43 => "11001011101", 44 => "00010100101", 
    45 => "01010010011", 46 => "01100010010", 47 => "10011111101", 
    48 => "10110010010", 49 => "01111001000", 50 => "00100101111", 
    51 => "01101100000", 52 => "11000110111", 53 => "10000001111", 
    54 => "00110101100", 55 => "11111100100", 56 => "01101111000", 
    57 => "00110110001", 58 => "01111110011", 59 => "01011000010", 
    60 => "11000010110", 61 => "11001110110", 62 => "00100100101", 
    63 => "01001101000", 64 => "10010110110", 65 => "10101101001", 
    66 => "01100010000", 67 => "01111100010", 68 => "01110001010", 
    69 => "00001000100", 70 => "00101001010", 71 => "10011111000", 
    72 => "11110001100", 73 => "00110011111", 74 => "11101100000", 
    75 => "01110001001", 76 => "00100111011", 77 => "11011000010", 
    78 => "01101011001", 79 => "10110011110", 80 => "11011011000", 
    81 => "10000100111", 82 => "11010011011", 83 => "00111001111" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "select_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "distributed";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity fc_layer3_fc_layeiib is
    generic (
        DataWidth : INTEGER := 11;
        AddressRange : INTEGER := 84;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of fc_layer3_fc_layeiib is
    component fc_layer3_fc_layeiib_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    fc_layer3_fc_layeiib_rom_U :  component fc_layer3_fc_layeiib_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


