// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _flatten_HH_
#define _flatten_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct flatten : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_out< sc_lv<10> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;


    // Module declarations
    flatten(sc_module_name name);
    SC_HAS_PROCESS(flatten);

    ~flatten();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_1_fu_112_p2;
    sc_signal< sc_lv<3> > i_1_reg_270;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > tmp_5_fu_142_p2;
    sc_signal< sc_lv<7> > tmp_5_reg_275;
    sc_signal< sc_lv<1> > exitcond2_fu_106_p2;
    sc_signal< sc_lv<11> > tmp_1_fu_172_p2;
    sc_signal< sc_lv<11> > tmp_1_reg_280;
    sc_signal< sc_lv<3> > j_1_fu_184_p2;
    sc_signal< sc_lv<3> > j_1_reg_288;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<11> > tmp_11_cast_fu_199_p3;
    sc_signal< sc_lv<11> > tmp_11_cast_reg_293;
    sc_signal< sc_lv<1> > exitcond1_fu_178_p2;
    sc_signal< sc_lv<7> > tmp_4_fu_207_p3;
    sc_signal< sc_lv<7> > tmp_4_reg_298;
    sc_signal< sc_lv<5> > k_1_fu_225_p2;
    sc_signal< sc_lv<5> > k_1_reg_306;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > exitcond_fu_219_p2;
    sc_signal< sc_lv<11> > tmp_8_fu_254_p2;
    sc_signal< sc_lv<11> > tmp_8_reg_316;
    sc_signal< sc_lv<3> > i_reg_73;
    sc_signal< sc_lv<3> > j_reg_84;
    sc_signal< sc_lv<5> > k_reg_95;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_12_cast_fu_240_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_262_p1;
    sc_signal< sc_lv<6> > tmp_fu_118_p3;
    sc_signal< sc_lv<4> > tmp_2_fu_130_p3;
    sc_signal< sc_lv<7> > p_shl1_cast_fu_126_p1;
    sc_signal< sc_lv<7> > p_shl2_cast_fu_138_p1;
    sc_signal< sc_lv<10> > p_shl_fu_148_p3;
    sc_signal< sc_lv<8> > p_shl5_fu_160_p3;
    sc_signal< sc_lv<11> > p_shl_cast_fu_156_p1;
    sc_signal< sc_lv<11> > p_shl5_cast_fu_168_p1;
    sc_signal< sc_lv<7> > tmp_3_cast_fu_190_p1;
    sc_signal< sc_lv<7> > tmp_7_fu_194_p2;
    sc_signal< sc_lv<11> > tmp_6_cast_fu_231_p1;
    sc_signal< sc_lv<11> > tmp_s_fu_235_p2;
    sc_signal< sc_lv<7> > k_cast3_fu_215_p1;
    sc_signal< sc_lv<7> > tmp1_fu_245_p2;
    sc_signal< sc_lv<11> > tmp1_cast_fu_250_p1;
    sc_signal< sc_lv<32> > tmp_8_cast_fu_259_p1;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_178_p2();
    void thread_exitcond2_fu_106_p2();
    void thread_exitcond_fu_219_p2();
    void thread_i_1_fu_112_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_1_fu_184_p2();
    void thread_k_1_fu_225_p2();
    void thread_k_cast3_fu_215_p1();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_126_p1();
    void thread_p_shl2_cast_fu_138_p1();
    void thread_p_shl5_cast_fu_168_p1();
    void thread_p_shl5_fu_160_p3();
    void thread_p_shl_cast_fu_156_p1();
    void thread_p_shl_fu_148_p3();
    void thread_tmp1_cast_fu_250_p1();
    void thread_tmp1_fu_245_p2();
    void thread_tmp_11_cast_fu_199_p3();
    void thread_tmp_12_cast_fu_240_p1();
    void thread_tmp_1_fu_172_p2();
    void thread_tmp_2_fu_130_p3();
    void thread_tmp_3_cast_fu_190_p1();
    void thread_tmp_4_fu_207_p3();
    void thread_tmp_5_fu_142_p2();
    void thread_tmp_6_cast_fu_231_p1();
    void thread_tmp_7_fu_194_p2();
    void thread_tmp_8_cast_fu_259_p1();
    void thread_tmp_8_fu_254_p2();
    void thread_tmp_9_fu_262_p1();
    void thread_tmp_fu_118_p3();
    void thread_tmp_s_fu_235_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
