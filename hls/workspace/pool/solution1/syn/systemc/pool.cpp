// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pool.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pool::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pool::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> pool::ap_ST_fsm_state1 = "1";
const sc_lv<11> pool::ap_ST_fsm_state2 = "10";
const sc_lv<11> pool::ap_ST_fsm_state3 = "100";
const sc_lv<11> pool::ap_ST_fsm_state4 = "1000";
const sc_lv<11> pool::ap_ST_fsm_state5 = "10000";
const sc_lv<11> pool::ap_ST_fsm_state6 = "100000";
const sc_lv<11> pool::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> pool::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> pool::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> pool::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> pool::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> pool::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pool::ap_const_lv32_1 = "1";
const sc_lv<1> pool::ap_const_lv1_0 = "0";
const sc_lv<32> pool::ap_const_lv32_2 = "10";
const sc_lv<1> pool::ap_const_lv1_1 = "1";
const sc_lv<32> pool::ap_const_lv32_3 = "11";
const sc_lv<32> pool::ap_const_lv32_4 = "100";
const sc_lv<32> pool::ap_const_lv32_5 = "101";
const sc_lv<32> pool::ap_const_lv32_6 = "110";
const sc_lv<32> pool::ap_const_lv32_7 = "111";
const sc_lv<32> pool::ap_const_lv32_8 = "1000";
const sc_lv<32> pool::ap_const_lv32_9 = "1001";
const sc_lv<32> pool::ap_const_lv32_A = "1010";
const sc_lv<4> pool::ap_const_lv4_0 = "0000";
const sc_lv<5> pool::ap_const_lv5_0 = "00000";
const sc_lv<2> pool::ap_const_lv2_0 = "00";
const sc_lv<4> pool::ap_const_lv4_8 = "1000";
const sc_lv<4> pool::ap_const_lv4_1 = "1";
const sc_lv<5> pool::ap_const_lv5_1C = "11100";
const sc_lv<10> pool::ap_const_lv10_1D = "11101";
const sc_lv<5> pool::ap_const_lv5_2 = "10";
const sc_lv<2> pool::ap_const_lv2_2 = "10";
const sc_lv<2> pool::ap_const_lv2_1 = "1";
const sc_lv<3> pool::ap_const_lv3_0 = "000";
const sc_lv<32> pool::ap_const_lv32_17 = "10111";
const sc_lv<32> pool::ap_const_lv32_1E = "11110";
const sc_lv<8> pool::ap_const_lv8_FF = "11111111";
const sc_lv<23> pool::ap_const_lv23_0 = "00000000000000000000000";
const bool pool::ap_const_boolean_1 = true;

pool::pool(sc_module_name name) : sc_module(name), mVcdFile(0) {
    pool_fcmp_32ns_32bkb_U1 = new pool_fcmp_32ns_32bkb<1,1,32,32,1>("pool_fcmp_32ns_32bkb_U1");
    pool_fcmp_32ns_32bkb_U1->din0(image_load_reg_613);
    pool_fcmp_32ns_32bkb_U1->din1(max_1_reg_164);
    pool_fcmp_32ns_32bkb_U1->opcode(ap_var_for_const0);
    pool_fcmp_32ns_32bkb_U1->dout(tmp_17_fu_187_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_192_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_192_p2 );

    SC_METHOD(thread_channel_1_fu_198_p2);
    sensitive << ( channel_reg_106 );

    SC_METHOD(thread_exitcond1_fu_316_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( k_reg_153 );

    SC_METHOD(thread_exitcond2_fu_192_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( channel_reg_106 );

    SC_METHOD(thread_exitcond_fu_391_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( l_reg_176 );

    SC_METHOD(thread_i_1_fu_306_p2);
    sensitive << ( i_reg_118 );

    SC_METHOD(thread_image_load_to_int_fu_439_p1);
    sensitive << ( image_load_reg_613 );

    SC_METHOD(thread_image_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_13_fu_301_p1 );
    sensitive << ( tmp_38_cast_fu_435_p1 );

    SC_METHOD(thread_image_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_j_1_fu_381_p2);
    sensitive << ( j_reg_130 );

    SC_METHOD(thread_k_1_fu_322_p2);
    sensitive << ( k_reg_153 );

    SC_METHOD(thread_k_cast2_fu_312_p1);
    sensitive << ( k_reg_153 );

    SC_METHOD(thread_l_1_fu_397_p2);
    sensitive << ( l_reg_176 );

    SC_METHOD(thread_l_cast1_fu_387_p1);
    sensitive << ( l_reg_176 );

    SC_METHOD(thread_max_1_to_int_fu_456_p1);
    sensitive << ( max_1_reg_164 );

    SC_METHOD(thread_max_2_fu_521_p3);
    sensitive << ( image_load_reg_613 );
    sensitive << ( max_1_reg_164 );
    sensitive << ( tmp_18_fu_516_p2 );

    SC_METHOD(thread_notlhs6_fu_492_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_12_fu_460_p4 );

    SC_METHOD(thread_notlhs_fu_474_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_10_fu_442_p4 );

    SC_METHOD(thread_notrhs7_fu_498_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_27_fu_470_p1 );

    SC_METHOD(thread_notrhs_fu_480_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_26_fu_452_p1 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_33_cast_fu_376_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( max1_reg_142 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond1_fu_316_p2 );

    SC_METHOD(thread_p_shl1_cast_fu_258_p1);
    sensitive << ( tmp_7_fu_250_p3 );

    SC_METHOD(thread_p_shl_cast_fu_246_p1);
    sensitive << ( tmp_2_fu_238_p3 );

    SC_METHOD(thread_tmp_10_fu_442_p4);
    sensitive << ( image_load_to_int_fu_439_p1 );

    SC_METHOD(thread_tmp_11_fu_293_p3);
    sensitive << ( channel_reg_106 );
    sensitive << ( tmp_fu_283_p4 );

    SC_METHOD(thread_tmp_12_fu_460_p4);
    sensitive << ( max_1_to_int_fu_456_p1 );

    SC_METHOD(thread_tmp_13_fu_301_p1);
    sensitive << ( tmp_11_fu_293_p3 );

    SC_METHOD(thread_tmp_14_fu_486_p2);
    sensitive << ( notrhs_fu_480_p2 );
    sensitive << ( notlhs_fu_474_p2 );

    SC_METHOD(thread_tmp_15_fu_504_p2);
    sensitive << ( notrhs7_fu_498_p2 );
    sensitive << ( notlhs6_fu_492_p2 );

    SC_METHOD(thread_tmp_16_fu_510_p2);
    sensitive << ( tmp_14_fu_486_p2 );
    sensitive << ( tmp_15_fu_504_p2 );

    SC_METHOD(thread_tmp_18_fu_516_p2);
    sensitive << ( tmp_17_reg_620 );
    sensitive << ( tmp_16_fu_510_p2 );

    SC_METHOD(thread_tmp_19_fu_344_p4);
    sensitive << ( j_reg_130 );

    SC_METHOD(thread_tmp_1_fu_212_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_118 );

    SC_METHOD(thread_tmp_20_fu_358_p2);
    sensitive << ( tmp_8_reg_554 );
    sensitive << ( tmp_cast_12_fu_354_p1 );

    SC_METHOD(thread_tmp_21_fu_371_p2);
    sensitive << ( tmp_cast_reg_541 );
    sensitive << ( tmp_32_cast_fu_363_p3 );

    SC_METHOD(thread_tmp_22_fu_338_p0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_22_fu_338_p00 );

    SC_METHOD(thread_tmp_22_fu_338_p00);
    sensitive << ( tmp_5_fu_328_p2 );

    SC_METHOD(thread_tmp_22_fu_338_p2);
    sensitive << ( tmp_22_fu_338_p0 );

    SC_METHOD(thread_tmp_23_fu_413_p2);
    sensitive << ( tmp_22_reg_585 );
    sensitive << ( tmp_9_cast_fu_409_p1 );

    SC_METHOD(thread_tmp_24_fu_418_p3);
    sensitive << ( tmp_23_fu_413_p2 );

    SC_METHOD(thread_tmp_25_fu_430_p2);
    sensitive << ( tmp_cast2_reg_536 );
    sensitive << ( tmp_37_cast_fu_426_p1 );

    SC_METHOD(thread_tmp_26_fu_452_p1);
    sensitive << ( image_load_to_int_fu_439_p1 );

    SC_METHOD(thread_tmp_27_fu_470_p1);
    sensitive << ( max_1_to_int_fu_456_p1 );

    SC_METHOD(thread_tmp_2_fu_238_p3);
    sensitive << ( tmp_s_fu_228_p4 );

    SC_METHOD(thread_tmp_32_cast_fu_363_p3);
    sensitive << ( tmp_20_fu_358_p2 );

    SC_METHOD(thread_tmp_33_cast_fu_376_p1);
    sensitive << ( tmp_21_fu_371_p2 );

    SC_METHOD(thread_tmp_37_cast_fu_426_p1);
    sensitive << ( tmp_24_fu_418_p3 );

    SC_METHOD(thread_tmp_38_cast_fu_435_p1);
    sensitive << ( tmp_25_reg_603 );

    SC_METHOD(thread_tmp_3_fu_403_p2);
    sensitive << ( j_reg_130 );
    sensitive << ( l_cast1_fu_387_p1 );

    SC_METHOD(thread_tmp_4_fu_222_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_4_fu_222_p00 );

    SC_METHOD(thread_tmp_4_fu_222_p00);
    sensitive << ( i_reg_118 );

    SC_METHOD(thread_tmp_4_fu_222_p2);
    sensitive << ( tmp_4_fu_222_p0 );

    SC_METHOD(thread_tmp_5_fu_328_p2);
    sensitive << ( i_reg_118 );
    sensitive << ( k_cast2_fu_312_p1 );

    SC_METHOD(thread_tmp_6_fu_268_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_reg_130 );

    SC_METHOD(thread_tmp_7_cast_fu_274_p1);
    sensitive << ( j_reg_130 );

    SC_METHOD(thread_tmp_7_fu_250_p3);
    sensitive << ( tmp_s_fu_228_p4 );

    SC_METHOD(thread_tmp_8_fu_262_p2);
    sensitive << ( p_shl_cast_fu_246_p1 );
    sensitive << ( p_shl1_cast_fu_258_p1 );

    SC_METHOD(thread_tmp_9_cast_fu_409_p1);
    sensitive << ( tmp_3_fu_403_p2 );

    SC_METHOD(thread_tmp_9_fu_278_p2);
    sensitive << ( tmp_4_reg_549 );
    sensitive << ( tmp_7_cast_fu_274_p1 );

    SC_METHOD(thread_tmp_cast2_fu_204_p1);
    sensitive << ( channel_reg_106 );

    SC_METHOD(thread_tmp_cast_12_fu_354_p1);
    sensitive << ( tmp_19_fu_344_p4 );

    SC_METHOD(thread_tmp_cast_fu_208_p1);
    sensitive << ( channel_reg_106 );

    SC_METHOD(thread_tmp_fu_283_p4);
    sensitive << ( tmp_9_fu_278_p2 );

    SC_METHOD(thread_tmp_s_fu_228_p4);
    sensitive << ( i_reg_118 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_192_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_212_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_fu_268_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond1_fu_316_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond_fu_391_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pool_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, image_r_address0, "(port)image_r_address0");
    sc_trace(mVcdFile, image_r_ce0, "(port)image_r_ce0");
    sc_trace(mVcdFile, image_r_q0, "(port)image_r_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, channel_1_fu_198_p2, "channel_1_fu_198_p2");
    sc_trace(mVcdFile, channel_1_reg_531, "channel_1_reg_531");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_cast2_fu_204_p1, "tmp_cast2_fu_204_p1");
    sc_trace(mVcdFile, tmp_cast2_reg_536, "tmp_cast2_reg_536");
    sc_trace(mVcdFile, exitcond2_fu_192_p2, "exitcond2_fu_192_p2");
    sc_trace(mVcdFile, tmp_cast_fu_208_p1, "tmp_cast_fu_208_p1");
    sc_trace(mVcdFile, tmp_cast_reg_541, "tmp_cast_reg_541");
    sc_trace(mVcdFile, tmp_4_fu_222_p2, "tmp_4_fu_222_p2");
    sc_trace(mVcdFile, tmp_4_reg_549, "tmp_4_reg_549");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_1_fu_212_p2, "tmp_1_fu_212_p2");
    sc_trace(mVcdFile, tmp_8_fu_262_p2, "tmp_8_fu_262_p2");
    sc_trace(mVcdFile, tmp_8_reg_554, "tmp_8_reg_554");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_6_fu_268_p2, "tmp_6_fu_268_p2");
    sc_trace(mVcdFile, i_1_fu_306_p2, "i_1_fu_306_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, k_1_fu_322_p2, "k_1_fu_322_p2");
    sc_trace(mVcdFile, k_1_reg_580, "k_1_reg_580");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_22_fu_338_p2, "tmp_22_fu_338_p2");
    sc_trace(mVcdFile, tmp_22_reg_585, "tmp_22_reg_585");
    sc_trace(mVcdFile, exitcond1_fu_316_p2, "exitcond1_fu_316_p2");
    sc_trace(mVcdFile, j_1_fu_381_p2, "j_1_fu_381_p2");
    sc_trace(mVcdFile, l_1_fu_397_p2, "l_1_fu_397_p2");
    sc_trace(mVcdFile, l_1_reg_598, "l_1_reg_598");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_25_fu_430_p2, "tmp_25_fu_430_p2");
    sc_trace(mVcdFile, tmp_25_reg_603, "tmp_25_reg_603");
    sc_trace(mVcdFile, exitcond_fu_391_p2, "exitcond_fu_391_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, image_load_reg_613, "image_load_reg_613");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_17_fu_187_p2, "tmp_17_fu_187_p2");
    sc_trace(mVcdFile, tmp_17_reg_620, "tmp_17_reg_620");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, max_2_fu_521_p3, "max_2_fu_521_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, channel_reg_106, "channel_reg_106");
    sc_trace(mVcdFile, i_reg_118, "i_reg_118");
    sc_trace(mVcdFile, j_reg_130, "j_reg_130");
    sc_trace(mVcdFile, max1_reg_142, "max1_reg_142");
    sc_trace(mVcdFile, k_reg_153, "k_reg_153");
    sc_trace(mVcdFile, max_1_reg_164, "max_1_reg_164");
    sc_trace(mVcdFile, l_reg_176, "l_reg_176");
    sc_trace(mVcdFile, tmp_13_fu_301_p1, "tmp_13_fu_301_p1");
    sc_trace(mVcdFile, tmp_33_cast_fu_376_p1, "tmp_33_cast_fu_376_p1");
    sc_trace(mVcdFile, tmp_38_cast_fu_435_p1, "tmp_38_cast_fu_435_p1");
    sc_trace(mVcdFile, tmp_4_fu_222_p0, "tmp_4_fu_222_p0");
    sc_trace(mVcdFile, tmp_s_fu_228_p4, "tmp_s_fu_228_p4");
    sc_trace(mVcdFile, tmp_2_fu_238_p3, "tmp_2_fu_238_p3");
    sc_trace(mVcdFile, tmp_7_fu_250_p3, "tmp_7_fu_250_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_246_p1, "p_shl_cast_fu_246_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_258_p1, "p_shl1_cast_fu_258_p1");
    sc_trace(mVcdFile, tmp_7_cast_fu_274_p1, "tmp_7_cast_fu_274_p1");
    sc_trace(mVcdFile, tmp_9_fu_278_p2, "tmp_9_fu_278_p2");
    sc_trace(mVcdFile, tmp_fu_283_p4, "tmp_fu_283_p4");
    sc_trace(mVcdFile, tmp_11_fu_293_p3, "tmp_11_fu_293_p3");
    sc_trace(mVcdFile, k_cast2_fu_312_p1, "k_cast2_fu_312_p1");
    sc_trace(mVcdFile, tmp_5_fu_328_p2, "tmp_5_fu_328_p2");
    sc_trace(mVcdFile, tmp_22_fu_338_p0, "tmp_22_fu_338_p0");
    sc_trace(mVcdFile, tmp_19_fu_344_p4, "tmp_19_fu_344_p4");
    sc_trace(mVcdFile, tmp_cast_12_fu_354_p1, "tmp_cast_12_fu_354_p1");
    sc_trace(mVcdFile, tmp_20_fu_358_p2, "tmp_20_fu_358_p2");
    sc_trace(mVcdFile, tmp_32_cast_fu_363_p3, "tmp_32_cast_fu_363_p3");
    sc_trace(mVcdFile, tmp_21_fu_371_p2, "tmp_21_fu_371_p2");
    sc_trace(mVcdFile, l_cast1_fu_387_p1, "l_cast1_fu_387_p1");
    sc_trace(mVcdFile, tmp_3_fu_403_p2, "tmp_3_fu_403_p2");
    sc_trace(mVcdFile, tmp_9_cast_fu_409_p1, "tmp_9_cast_fu_409_p1");
    sc_trace(mVcdFile, tmp_23_fu_413_p2, "tmp_23_fu_413_p2");
    sc_trace(mVcdFile, tmp_24_fu_418_p3, "tmp_24_fu_418_p3");
    sc_trace(mVcdFile, tmp_37_cast_fu_426_p1, "tmp_37_cast_fu_426_p1");
    sc_trace(mVcdFile, image_load_to_int_fu_439_p1, "image_load_to_int_fu_439_p1");
    sc_trace(mVcdFile, max_1_to_int_fu_456_p1, "max_1_to_int_fu_456_p1");
    sc_trace(mVcdFile, tmp_10_fu_442_p4, "tmp_10_fu_442_p4");
    sc_trace(mVcdFile, tmp_26_fu_452_p1, "tmp_26_fu_452_p1");
    sc_trace(mVcdFile, notrhs_fu_480_p2, "notrhs_fu_480_p2");
    sc_trace(mVcdFile, notlhs_fu_474_p2, "notlhs_fu_474_p2");
    sc_trace(mVcdFile, tmp_12_fu_460_p4, "tmp_12_fu_460_p4");
    sc_trace(mVcdFile, tmp_27_fu_470_p1, "tmp_27_fu_470_p1");
    sc_trace(mVcdFile, notrhs7_fu_498_p2, "notrhs7_fu_498_p2");
    sc_trace(mVcdFile, notlhs6_fu_492_p2, "notlhs6_fu_492_p2");
    sc_trace(mVcdFile, tmp_14_fu_486_p2, "tmp_14_fu_486_p2");
    sc_trace(mVcdFile, tmp_15_fu_504_p2, "tmp_15_fu_504_p2");
    sc_trace(mVcdFile, tmp_16_fu_510_p2, "tmp_16_fu_510_p2");
    sc_trace(mVcdFile, tmp_18_fu_516_p2, "tmp_18_fu_516_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, tmp_22_fu_338_p00, "tmp_22_fu_338_p00");
    sc_trace(mVcdFile, tmp_4_fu_222_p00, "tmp_4_fu_222_p00");
#endif

    }
    mHdltvinHandle.open("pool.hdltvin.dat");
    mHdltvoutHandle.open("pool.hdltvout.dat");
}

pool::~pool() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete pool_fcmp_32ns_32bkb_U1;
}

void pool::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv5_2;
}

void pool::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_212_p2.read()))) {
        channel_reg_106 = channel_1_reg_531.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        channel_reg_106 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_192_p2.read(), ap_const_lv1_0))) {
        i_reg_118 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_268_p2.read()))) {
        i_reg_118 = i_1_fu_306_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_1_fu_212_p2.read(), ap_const_lv1_1))) {
        j_reg_130 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_316_p2.read()))) {
        j_reg_130 = j_1_fu_381_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_391_p2.read()))) {
        k_reg_153 = k_1_reg_580.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        k_reg_153 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_316_p2.read()))) {
        l_reg_176 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        l_reg_176 = l_1_reg_598.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_391_p2.read()))) {
        max1_reg_142 = max_1_reg_164.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        max1_reg_142 = image_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_316_p2.read()))) {
        max_1_reg_164 = max1_reg_142.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        max_1_reg_164 = max_2_fu_521_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        channel_1_reg_531 = channel_1_fu_198_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        image_load_reg_613 = image_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        k_1_reg_580 = k_1_fu_322_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        l_1_reg_598 = l_1_fu_397_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_17_reg_620 = tmp_17_fu_187_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_316_p2.read()))) {
        tmp_22_reg_585 = tmp_22_fu_338_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_391_p2.read()))) {
        tmp_25_reg_603 = tmp_25_fu_430_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_1_fu_212_p2.read(), ap_const_lv1_1))) {
        tmp_4_reg_549 = tmp_4_fu_222_p2.read();
        tmp_8_reg_554 = tmp_8_fu_262_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond2_fu_192_p2.read(), ap_const_lv1_0))) {
        tmp_cast2_reg_536 = tmp_cast2_fu_204_p1.read();
        tmp_cast_reg_541 = tmp_cast_fu_208_p1.read();
    }
}

void pool::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pool::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void pool::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void pool::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pool::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pool::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pool::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pool::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void pool::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void pool::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void pool::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void pool::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_192_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pool::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pool::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_192_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pool::thread_channel_1_fu_198_p2() {
    channel_1_fu_198_p2 = (!channel_reg_106.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(channel_reg_106.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void pool::thread_exitcond1_fu_316_p2() {
    exitcond1_fu_316_p2 = (!k_reg_153.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_153.read() == ap_const_lv2_2);
}

void pool::thread_exitcond2_fu_192_p2() {
    exitcond2_fu_192_p2 = (!channel_reg_106.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(channel_reg_106.read() == ap_const_lv4_8);
}

void pool::thread_exitcond_fu_391_p2() {
    exitcond_fu_391_p2 = (!l_reg_176.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(l_reg_176.read() == ap_const_lv2_2);
}

void pool::thread_i_1_fu_306_p2() {
    i_1_fu_306_p2 = (!i_reg_118.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_118.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void pool::thread_image_load_to_int_fu_439_p1() {
    image_load_to_int_fu_439_p1 = image_load_reg_613.read();
}

void pool::thread_image_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        image_r_address0 =  (sc_lv<13>) (tmp_38_cast_fu_435_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        image_r_address0 =  (sc_lv<13>) (tmp_13_fu_301_p1.read());
    } else {
        image_r_address0 = "XXXXXXXXXXXXX";
    }
}

void pool::thread_image_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        image_r_ce0 = ap_const_logic_1;
    } else {
        image_r_ce0 = ap_const_logic_0;
    }
}

void pool::thread_j_1_fu_381_p2() {
    j_1_fu_381_p2 = (!j_reg_130.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(j_reg_130.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void pool::thread_k_1_fu_322_p2() {
    k_1_fu_322_p2 = (!k_reg_153.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k_reg_153.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void pool::thread_k_cast2_fu_312_p1() {
    k_cast2_fu_312_p1 = esl_zext<5,2>(k_reg_153.read());
}

void pool::thread_l_1_fu_397_p2() {
    l_1_fu_397_p2 = (!l_reg_176.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(l_reg_176.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void pool::thread_l_cast1_fu_387_p1() {
    l_cast1_fu_387_p1 = esl_zext<5,2>(l_reg_176.read());
}

void pool::thread_max_1_to_int_fu_456_p1() {
    max_1_to_int_fu_456_p1 = max_1_reg_164.read();
}

void pool::thread_max_2_fu_521_p3() {
    max_2_fu_521_p3 = (!tmp_18_fu_516_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_18_fu_516_p2.read()[0].to_bool())? image_load_reg_613.read(): max_1_reg_164.read());
}

void pool::thread_notlhs6_fu_492_p2() {
    notlhs6_fu_492_p2 = (!tmp_12_fu_460_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_12_fu_460_p4.read() != ap_const_lv8_FF);
}

void pool::thread_notlhs_fu_474_p2() {
    notlhs_fu_474_p2 = (!tmp_10_fu_442_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_10_fu_442_p4.read() != ap_const_lv8_FF);
}

void pool::thread_notrhs7_fu_498_p2() {
    notrhs7_fu_498_p2 = (!tmp_27_fu_470_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_27_fu_470_p1.read() == ap_const_lv23_0);
}

void pool::thread_notrhs_fu_480_p2() {
    notrhs_fu_480_p2 = (!tmp_26_fu_452_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_26_fu_452_p1.read() == ap_const_lv23_0);
}

void pool::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<11>) (tmp_33_cast_fu_376_p1.read());
}

void pool::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void pool::thread_output_r_d0() {
    output_r_d0 = max1_reg_142.read();
}

void pool::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_316_p2.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void pool::thread_p_shl1_cast_fu_258_p1() {
    p_shl1_cast_fu_258_p1 = esl_zext<9,5>(tmp_7_fu_250_p3.read());
}

void pool::thread_p_shl_cast_fu_246_p1() {
    p_shl_cast_fu_246_p1 = esl_zext<9,8>(tmp_2_fu_238_p3.read());
}

void pool::thread_tmp_10_fu_442_p4() {
    tmp_10_fu_442_p4 = image_load_to_int_fu_439_p1.read().range(30, 23);
}

void pool::thread_tmp_11_fu_293_p3() {
    tmp_11_fu_293_p3 = esl_concat<9,4>(tmp_fu_283_p4.read(), channel_reg_106.read());
}

void pool::thread_tmp_12_fu_460_p4() {
    tmp_12_fu_460_p4 = max_1_to_int_fu_456_p1.read().range(30, 23);
}

void pool::thread_tmp_13_fu_301_p1() {
    tmp_13_fu_301_p1 = esl_zext<64,13>(tmp_11_fu_293_p3.read());
}

void pool::thread_tmp_14_fu_486_p2() {
    tmp_14_fu_486_p2 = (notrhs_fu_480_p2.read() | notlhs_fu_474_p2.read());
}

void pool::thread_tmp_15_fu_504_p2() {
    tmp_15_fu_504_p2 = (notrhs7_fu_498_p2.read() | notlhs6_fu_492_p2.read());
}

void pool::thread_tmp_16_fu_510_p2() {
    tmp_16_fu_510_p2 = (tmp_14_fu_486_p2.read() & tmp_15_fu_504_p2.read());
}

void pool::thread_tmp_18_fu_516_p2() {
    tmp_18_fu_516_p2 = (tmp_16_fu_510_p2.read() & tmp_17_reg_620.read());
}

void pool::thread_tmp_19_fu_344_p4() {
    tmp_19_fu_344_p4 = j_reg_130.read().range(4, 1);
}

void pool::thread_tmp_1_fu_212_p2() {
    tmp_1_fu_212_p2 = (!i_reg_118.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): (sc_biguint<5>(i_reg_118.read()) < sc_biguint<5>(ap_const_lv5_1C));
}

void pool::thread_tmp_20_fu_358_p2() {
    tmp_20_fu_358_p2 = (!tmp_8_reg_554.read().is_01() || !tmp_cast_12_fu_354_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_8_reg_554.read()) + sc_biguint<9>(tmp_cast_12_fu_354_p1.read()));
}

void pool::thread_tmp_21_fu_371_p2() {
    tmp_21_fu_371_p2 = (!tmp_32_cast_fu_363_p3.read().is_01() || !tmp_cast_reg_541.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_32_cast_fu_363_p3.read()) + sc_biguint<12>(tmp_cast_reg_541.read()));
}

void pool::thread_tmp_22_fu_338_p0() {
    tmp_22_fu_338_p0 =  (sc_lv<5>) (tmp_22_fu_338_p00.read());
}

void pool::thread_tmp_22_fu_338_p00() {
    tmp_22_fu_338_p00 = esl_zext<10,5>(tmp_5_fu_328_p2.read());
}

void pool::thread_tmp_22_fu_338_p2() {
    tmp_22_fu_338_p2 = (!tmp_22_fu_338_p0.read().is_01() || !ap_const_lv10_1D.is_01())? sc_lv<10>(): sc_biguint<5>(tmp_22_fu_338_p0.read()) * sc_biguint<10>(ap_const_lv10_1D);
}

void pool::thread_tmp_23_fu_413_p2() {
    tmp_23_fu_413_p2 = (!tmp_9_cast_fu_409_p1.read().is_01() || !tmp_22_reg_585.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_9_cast_fu_409_p1.read()) + sc_biguint<10>(tmp_22_reg_585.read()));
}

void pool::thread_tmp_24_fu_418_p3() {
    tmp_24_fu_418_p3 = esl_concat<10,3>(tmp_23_fu_413_p2.read(), ap_const_lv3_0);
}

void pool::thread_tmp_25_fu_430_p2() {
    tmp_25_fu_430_p2 = (!tmp_cast2_reg_536.read().is_01() || !tmp_37_cast_fu_426_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_cast2_reg_536.read()) + sc_biguint<14>(tmp_37_cast_fu_426_p1.read()));
}

void pool::thread_tmp_26_fu_452_p1() {
    tmp_26_fu_452_p1 = image_load_to_int_fu_439_p1.read().range(23-1, 0);
}

void pool::thread_tmp_27_fu_470_p1() {
    tmp_27_fu_470_p1 = max_1_to_int_fu_456_p1.read().range(23-1, 0);
}

void pool::thread_tmp_2_fu_238_p3() {
    tmp_2_fu_238_p3 = esl_concat<4,4>(tmp_s_fu_228_p4.read(), ap_const_lv4_0);
}

void pool::thread_tmp_32_cast_fu_363_p3() {
    tmp_32_cast_fu_363_p3 = esl_concat<9,3>(tmp_20_fu_358_p2.read(), ap_const_lv3_0);
}

void pool::thread_tmp_33_cast_fu_376_p1() {
    tmp_33_cast_fu_376_p1 = esl_zext<64,12>(tmp_21_fu_371_p2.read());
}

void pool::thread_tmp_37_cast_fu_426_p1() {
    tmp_37_cast_fu_426_p1 = esl_zext<14,13>(tmp_24_fu_418_p3.read());
}

void pool::thread_tmp_38_cast_fu_435_p1() {
    tmp_38_cast_fu_435_p1 = esl_zext<64,14>(tmp_25_reg_603.read());
}

void pool::thread_tmp_3_fu_403_p2() {
    tmp_3_fu_403_p2 = (!j_reg_130.read().is_01() || !l_cast1_fu_387_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(j_reg_130.read()) + sc_biguint<5>(l_cast1_fu_387_p1.read()));
}

void pool::thread_tmp_4_fu_222_p0() {
    tmp_4_fu_222_p0 =  (sc_lv<5>) (tmp_4_fu_222_p00.read());
}

void pool::thread_tmp_4_fu_222_p00() {
    tmp_4_fu_222_p00 = esl_zext<10,5>(i_reg_118.read());
}

void pool::thread_tmp_4_fu_222_p2() {
    tmp_4_fu_222_p2 = (!tmp_4_fu_222_p0.read().is_01() || !ap_const_lv10_1D.is_01())? sc_lv<10>(): sc_biguint<5>(tmp_4_fu_222_p0.read()) * sc_biguint<10>(ap_const_lv10_1D);
}

void pool::thread_tmp_5_fu_328_p2() {
    tmp_5_fu_328_p2 = (!k_cast2_fu_312_p1.read().is_01() || !i_reg_118.read().is_01())? sc_lv<5>(): (sc_biguint<5>(k_cast2_fu_312_p1.read()) + sc_biguint<5>(i_reg_118.read()));
}

void pool::thread_tmp_6_fu_268_p2() {
    tmp_6_fu_268_p2 = (!j_reg_130.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): (sc_biguint<5>(j_reg_130.read()) < sc_biguint<5>(ap_const_lv5_1C));
}

void pool::thread_tmp_7_cast_fu_274_p1() {
    tmp_7_cast_fu_274_p1 = esl_zext<10,5>(j_reg_130.read());
}

void pool::thread_tmp_7_fu_250_p3() {
    tmp_7_fu_250_p3 = esl_concat<4,1>(tmp_s_fu_228_p4.read(), ap_const_lv1_0);
}

void pool::thread_tmp_8_fu_262_p2() {
    tmp_8_fu_262_p2 = (!p_shl_cast_fu_246_p1.read().is_01() || !p_shl1_cast_fu_258_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_shl_cast_fu_246_p1.read()) - sc_biguint<9>(p_shl1_cast_fu_258_p1.read()));
}

void pool::thread_tmp_9_cast_fu_409_p1() {
    tmp_9_cast_fu_409_p1 = esl_zext<10,5>(tmp_3_fu_403_p2.read());
}

void pool::thread_tmp_9_fu_278_p2() {
    tmp_9_fu_278_p2 = (!tmp_4_reg_549.read().is_01() || !tmp_7_cast_fu_274_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_4_reg_549.read()) + sc_biguint<10>(tmp_7_cast_fu_274_p1.read()));
}

void pool::thread_tmp_cast2_fu_204_p1() {
    tmp_cast2_fu_204_p1 = esl_zext<14,4>(channel_reg_106.read());
}

void pool::thread_tmp_cast_12_fu_354_p1() {
    tmp_cast_12_fu_354_p1 = esl_zext<9,4>(tmp_19_fu_344_p4.read());
}

void pool::thread_tmp_cast_fu_208_p1() {
    tmp_cast_fu_208_p1 = esl_zext<12,4>(channel_reg_106.read());
}

void pool::thread_tmp_fu_283_p4() {
    tmp_fu_283_p4 = tmp_9_fu_278_p2.read().range(9, 1);
}

void pool::thread_tmp_s_fu_228_p4() {
    tmp_s_fu_228_p4 = i_reg_118.read().range(4, 1);
}

void pool::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond2_fu_192_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_212_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_268_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_316_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_391_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void pool::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_address0\" :  \"" << output_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_ce0\" :  \"" << output_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_we0\" :  \"" << output_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_d0\" :  \"" << output_r_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"image_r_address0\" :  \"" << image_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"image_r_ce0\" :  \"" << image_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"image_r_q0\" :  \"" << image_r_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

