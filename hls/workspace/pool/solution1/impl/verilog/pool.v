// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pool,hls_ip_2017_4_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.720000,HLS_SYN_LAT=5604,HLS_SYN_TPT=5605,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1689,HLS_SYN_LUT=7525}" *)

module pool (
        output_r_address0,
        output_r_ce0,
        output_r_d0,
        output_r_q0,
        output_r_we0,
        output_r_address1,
        output_r_ce1,
        output_r_d1,
        output_r_q1,
        output_r_we1,
        image_r_address0,
        image_r_ce0,
        image_r_d0,
        image_r_q0,
        image_r_we0,
        image_r_address1,
        image_r_ce1,
        image_r_d1,
        image_r_q1,
        image_r_we1,
        ap_clk,
        ap_rst,
        ap_done,
        ap_start,
        ap_ready,
        ap_idle
);


output  [10:0] output_r_address0;
output   output_r_ce0;
output  [31:0] output_r_d0;
input  [31:0] output_r_q0;
output   output_r_we0;
output  [10:0] output_r_address1;
output   output_r_ce1;
output  [31:0] output_r_d1;
input  [31:0] output_r_q1;
output   output_r_we1;
output  [12:0] image_r_address0;
output   image_r_ce0;
output  [31:0] image_r_d0;
input  [31:0] image_r_q0;
output   image_r_we0;
output  [12:0] image_r_address1;
output   image_r_ce1;
output  [31:0] image_r_d1;
input  [31:0] image_r_q1;
output   image_r_we1;
input   ap_clk;
input   ap_rst;
output   ap_done;
input   ap_start;
output   ap_ready;
output   ap_idle;

wire    Loop_pool_label2_pro_U0_ap_start;
wire    Loop_pool_label2_pro_U0_ap_done;
wire    Loop_pool_label2_pro_U0_ap_continue;
wire    Loop_pool_label2_pro_U0_ap_idle;
wire    Loop_pool_label2_pro_U0_ap_ready;
wire   [10:0] Loop_pool_label2_pro_U0_output_r_address0;
wire    Loop_pool_label2_pro_U0_output_r_ce0;
wire    Loop_pool_label2_pro_U0_output_r_we0;
wire   [31:0] Loop_pool_label2_pro_U0_output_r_d0;
wire   [12:0] Loop_pool_label2_pro_U0_image_r_address0;
wire    Loop_pool_label2_pro_U0_image_r_ce0;
wire   [12:0] Loop_pool_label2_pro_U0_image_r_address1;
wire    Loop_pool_label2_pro_U0_image_r_ce1;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    Loop_pool_label2_pro_U0_start_full_n;
wire    Loop_pool_label2_pro_U0_start_write;

Loop_pool_label2_pro Loop_pool_label2_pro_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_pool_label2_pro_U0_ap_start),
    .ap_done(Loop_pool_label2_pro_U0_ap_done),
    .ap_continue(Loop_pool_label2_pro_U0_ap_continue),
    .ap_idle(Loop_pool_label2_pro_U0_ap_idle),
    .ap_ready(Loop_pool_label2_pro_U0_ap_ready),
    .output_r_address0(Loop_pool_label2_pro_U0_output_r_address0),
    .output_r_ce0(Loop_pool_label2_pro_U0_output_r_ce0),
    .output_r_we0(Loop_pool_label2_pro_U0_output_r_we0),
    .output_r_d0(Loop_pool_label2_pro_U0_output_r_d0),
    .image_r_address0(Loop_pool_label2_pro_U0_image_r_address0),
    .image_r_ce0(Loop_pool_label2_pro_U0_image_r_ce0),
    .image_r_q0(image_r_q0),
    .image_r_address1(Loop_pool_label2_pro_U0_image_r_address1),
    .image_r_ce1(Loop_pool_label2_pro_U0_image_r_ce1),
    .image_r_q1(image_r_q1)
);

assign Loop_pool_label2_pro_U0_ap_continue = 1'b1;

assign Loop_pool_label2_pro_U0_ap_start = ap_start;

assign Loop_pool_label2_pro_U0_start_full_n = 1'b1;

assign Loop_pool_label2_pro_U0_start_write = 1'b0;

assign ap_done = Loop_pool_label2_pro_U0_ap_done;

assign ap_idle = Loop_pool_label2_pro_U0_ap_idle;

assign ap_ready = Loop_pool_label2_pro_U0_ap_ready;

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Loop_pool_label2_pro_U0_ap_done;

assign ap_sync_ready = Loop_pool_label2_pro_U0_ap_ready;

assign image_r_address0 = Loop_pool_label2_pro_U0_image_r_address0;

assign image_r_address1 = Loop_pool_label2_pro_U0_image_r_address1;

assign image_r_ce0 = Loop_pool_label2_pro_U0_image_r_ce0;

assign image_r_ce1 = Loop_pool_label2_pro_U0_image_r_ce1;

assign image_r_d0 = 32'd0;

assign image_r_d1 = 32'd0;

assign image_r_we0 = 1'b0;

assign image_r_we1 = 1'b0;

assign output_r_address0 = Loop_pool_label2_pro_U0_output_r_address0;

assign output_r_address1 = 11'd0;

assign output_r_ce0 = Loop_pool_label2_pro_U0_output_r_ce0;

assign output_r_ce1 = 1'b0;

assign output_r_d0 = Loop_pool_label2_pro_U0_output_r_d0;

assign output_r_d1 = 32'd0;

assign output_r_we0 = Loop_pool_label2_pro_U0_output_r_we0;

assign output_r_we1 = 1'b0;

endmodule //pool
