-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pool is
port (
    output_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_r_we0 : OUT STD_LOGIC;
    output_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_r_ce1 : OUT STD_LOGIC;
    output_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_r_we1 : OUT STD_LOGIC;
    image_r_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    image_r_ce0 : OUT STD_LOGIC;
    image_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    image_r_we0 : OUT STD_LOGIC;
    image_r_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    image_r_ce1 : OUT STD_LOGIC;
    image_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    image_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    image_r_we1 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of pool is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "pool,hls_ip_2017_4_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.720000,HLS_SYN_LAT=5604,HLS_SYN_TPT=5605,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1689,HLS_SYN_LUT=7525}";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal Loop_pool_label2_pro_U0_ap_start : STD_LOGIC;
    signal Loop_pool_label2_pro_U0_ap_done : STD_LOGIC;
    signal Loop_pool_label2_pro_U0_ap_continue : STD_LOGIC;
    signal Loop_pool_label2_pro_U0_ap_idle : STD_LOGIC;
    signal Loop_pool_label2_pro_U0_ap_ready : STD_LOGIC;
    signal Loop_pool_label2_pro_U0_output_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Loop_pool_label2_pro_U0_output_r_ce0 : STD_LOGIC;
    signal Loop_pool_label2_pro_U0_output_r_we0 : STD_LOGIC;
    signal Loop_pool_label2_pro_U0_output_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_pool_label2_pro_U0_image_r_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal Loop_pool_label2_pro_U0_image_r_ce0 : STD_LOGIC;
    signal Loop_pool_label2_pro_U0_image_r_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal Loop_pool_label2_pro_U0_image_r_ce1 : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal Loop_pool_label2_pro_U0_start_full_n : STD_LOGIC;
    signal Loop_pool_label2_pro_U0_start_write : STD_LOGIC;

    component Loop_pool_label2_pro IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        image_r_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        image_r_ce0 : OUT STD_LOGIC;
        image_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        image_r_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        image_r_ce1 : OUT STD_LOGIC;
        image_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    Loop_pool_label2_pro_U0 : component Loop_pool_label2_pro
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Loop_pool_label2_pro_U0_ap_start,
        ap_done => Loop_pool_label2_pro_U0_ap_done,
        ap_continue => Loop_pool_label2_pro_U0_ap_continue,
        ap_idle => Loop_pool_label2_pro_U0_ap_idle,
        ap_ready => Loop_pool_label2_pro_U0_ap_ready,
        output_r_address0 => Loop_pool_label2_pro_U0_output_r_address0,
        output_r_ce0 => Loop_pool_label2_pro_U0_output_r_ce0,
        output_r_we0 => Loop_pool_label2_pro_U0_output_r_we0,
        output_r_d0 => Loop_pool_label2_pro_U0_output_r_d0,
        image_r_address0 => Loop_pool_label2_pro_U0_image_r_address0,
        image_r_ce0 => Loop_pool_label2_pro_U0_image_r_ce0,
        image_r_q0 => image_r_q0,
        image_r_address1 => Loop_pool_label2_pro_U0_image_r_address1,
        image_r_ce1 => Loop_pool_label2_pro_U0_image_r_ce1,
        image_r_q1 => image_r_q1);




    Loop_pool_label2_pro_U0_ap_continue <= ap_const_logic_1;
    Loop_pool_label2_pro_U0_ap_start <= ap_start;
    Loop_pool_label2_pro_U0_start_full_n <= ap_const_logic_1;
    Loop_pool_label2_pro_U0_start_write <= ap_const_logic_0;
    ap_done <= Loop_pool_label2_pro_U0_ap_done;
    ap_idle <= Loop_pool_label2_pro_U0_ap_idle;
    ap_ready <= Loop_pool_label2_pro_U0_ap_ready;
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Loop_pool_label2_pro_U0_ap_done;
    ap_sync_ready <= Loop_pool_label2_pro_U0_ap_ready;
    image_r_address0 <= Loop_pool_label2_pro_U0_image_r_address0;
    image_r_address1 <= Loop_pool_label2_pro_U0_image_r_address1;
    image_r_ce0 <= Loop_pool_label2_pro_U0_image_r_ce0;
    image_r_ce1 <= Loop_pool_label2_pro_U0_image_r_ce1;
    image_r_d0 <= ap_const_lv32_0;
    image_r_d1 <= ap_const_lv32_0;
    image_r_we0 <= ap_const_logic_0;
    image_r_we1 <= ap_const_logic_0;
    output_r_address0 <= Loop_pool_label2_pro_U0_output_r_address0;
    output_r_address1 <= ap_const_lv11_0;
    output_r_ce0 <= Loop_pool_label2_pro_U0_output_r_ce0;
    output_r_ce1 <= ap_const_logic_0;
    output_r_d0 <= Loop_pool_label2_pro_U0_output_r_d0;
    output_r_d1 <= ap_const_lv32_0;
    output_r_we0 <= Loop_pool_label2_pro_U0_output_r_we0;
    output_r_we1 <= ap_const_logic_0;
end behav;
